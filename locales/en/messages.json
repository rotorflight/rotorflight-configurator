{
    "translation_version": {
        "message": "0"
    },
    "yes": {
        "message": "Yes",
        "description": "General Yes message to be used across the application"
    },
    "no": {
        "message": "No",
        "description": "General No message to be used across the application"
    },
    "on": {
        "message": "On"
    },
    "off": {
        "message": "Off"
    },
    "auto": {
        "message": "Auto"
    },
    "axisROLL": {
        "message": "ROLL",
        "description": "Roll axis in capital letters"
    },
    "axisPITCH": {
        "message": "PITCH",
        "description": "Pitch axis in capital letters"
    },
    "axisYAW": {
        "message": "YAW",
        "description": "Yaw axis in capital letters"
    },
    "axisCOLLECTIVE": {
        "message": "COLLECTIVE",
        "description": "Collective in capital letters"
    },
    "titleRoll": {
        "message": "Roll"
    },
    "titlePitch": {
        "message": "Pitch"
    },
    "titleYaw": {
        "message": "Yaw"
    },
    "titleCollective": {
        "message": "Collective"
    },
    "titleHeading": {
        "message": "Heading"
    },
    "titleAltitude": {
        "message": "Altitude"
    },
    "titleAttitude": {
        "message": "Attitude"
    },
    "error": {
        "message": "Error: {{errorMessage}}"
    },
    "errorTitle": {
        "message": "Error"
    },
    "warningTitle": {
        "message": "Warning"
    },
    "noticeTitle": {
        "message": "Notice"
    },
    "operationNotSupported": {
        "message": "This operation is not supported by your hardware."
    },
    "storageDeviceNotReady": {
        "message": "The storage device is not ready. In the case of a microSD card, make sure it is properly recognised by your flight controller."
    },
    "connect": {
        "message": "Connect"
    },
    "connecting": {
        "message": "Connecting"
    },
    "disconnect": {
        "message": "Disconnect"
    },
    "portsSelectManual": {
        "message": "Manual Selection"
    },
    "portsSelectVirtual": {
        "message": "Virtual Mode (Experimental)",
        "description": "Configure a Virtual Flight Controller without the need of a physical FC."
    },
    "virtualMSPVersion": {
        "message": "Virtual Firmware Version"
    },
    "portOverrideText": {
        "message": "Port:"
    },
    "autoConnect": {
        "message": "Auto-Connect"
    },
    "close": {
        "message": "Close"
    },
    "cancel": {
        "message": "Cancel"
    },
    "buttonSave": {
        "message": "Save"
    },
    "buttonSaveReboot": {
        "message": "Save and Reboot"
    },
    "buttonRevert": {
        "message": "Revert"
    },
    "buttonHelp": {
        "message": "Help"
    },
    "eepromSaved": {
        "message": "EEPROM <span class=\"message-positive\">saved</span>"
    },
    "dialogTabExitTitle": {
        "message": "<span class=\"message-negative\">WARNING:</span> Unsaved Changes"
    },
    "dialogTabExitNote": {
        "message": "There are <b>unsaved changes</b> in the current Tab."
    },
    "dialogTabExitSave": {
        "message": "Save Changes"
    },
    "dialogTabExitRevert": {
        "message": "Ignore Changes"
    },
    "dialogTabExitCancel": {
        "message": "Go Back"
    },
    "autoConnectEnabled": {
        "message": "Auto-Connect: Enabled - Configurator automatically tries to connect when new port is detected"
    },
    "autoConnectDisabled": {
        "message": "Auto-Connect: Disabled - User needs to select the correct serial port and click \"Connect\" button on its own"
    },
    "zoomBoxText": {
        "message": "Zoom:"
    },
    "expertMode": {
        "message": "Enable Expert Mode"
    },
    "permanentExpertMode": {
        "message": "Permanently enable Expert Mode"
    },
    "rememberLastTab": {
        "message": "Reopen last tab on connect"
    },
    "rememberLastSelectedBoard": {
        "message": "Remember last selected board in firmware flasher"
    },
    "analyticsOptOut": {
        "message": "Opt out of the anonymised collection of statistics data"
    },
    "connectionTimeout": {
        "message": "Set connection timeout to allow longer initialisation on device plugin or reboot",
        "description": "Change timeout on auto-connect and reboot so the bus has more time to initialize after being detected by the system"
    },
    "cordovaForceComputerUI": {
        "message": "Use computers interface instead of phones interface"
    },
    "language_changed": {
        "message": "Language change saved"
    },
    "language_choice_message": {
        "message": "Change language:",
        "description": "Try and be brief"
    },
    "language_default": {
        "message": "System Default"
    },
    "language_default_pretty": {
        "message": "System Default ($t(detectedLanguage))"
    },
    "language_ca": {
        "message": "Català",
        "description": "Don't translate!!!"
    },
    "language_de": {
        "message": "Deutsch",
        "description": "Don't translate!!!"
    },
    "language_en": {
        "message": "English",
        "description": "Don't translate!!!"
    },
    "language_es": {
        "message": "Español",
        "description": "Don't translate!!!"
    },
    "language_eu": {
        "message": "Euskera",
        "description": "Don't translate!!!"
    },
    "language_fr": {
        "message": "Français",
        "description": "Don't translate!!!"
    },
    "language_gl": {
        "message": "Galego",
        "description": "Don't translate!!!"
    },
    "language_hr": {
        "message": "Hrvatski",
        "description": "Don't translate!!!"
    },
    "language_hu": {
        "message": "Magyar",
        "description": "Don't translate!!!"
    },
    "language_id": {
        "message": "Bahasa Indonesia",
        "description": "Don't translate!!!"
    },
    "language_it": {
        "message": "Italiano",
        "description": "Don't translate!!!"
    },
    "language_ja": {
        "message": "日本語",
        "description": "Don't translate!!!"
    },
    "language_ko": {
        "message": "한국어",
        "description": "Don't translate!!!"
    },
    "language_lv": {
        "message": "Latviešu",
        "description": "Don't translate!!!"
    },
    "language_nl": {
        "message": "Nederlands",
        "description": "Don't translate!!!"
    },
    "language_pt": {
        "message": "Português",
        "description": "Don't translate!!!"
    },
    "language_pt_BR": {
        "message": "Português Brasileiro",
        "description": "Don't translate!!!"
    },
    "language_pl": {
        "message": "polski",
        "description": "Don't translate!!!"
    },
    "language_ru": {
        "message": "Русский язык",
        "description": "Don't translate!!!"
    },
    "language_sv": {
        "message": "Svenska",
        "description": "Don't translate!!!"
    },
    "language_zh_CN": {
        "message": "简体中文",
        "description": "Don't translate!!!"
    },
    "language_zh_TW": {
        "message": "繁體中文",
        "description": "Don't translate!!!"
    },
    "sensorDataFlashNotFound": {
        "message": "No dataflash <br>chip found",
        "description": "Text of the dataflash image in the header of the page."
    },
    "sensorDataFlashFreeSpace": {
        "message": "Dataflash: free space",
        "description": "Text of the dataflash image in the header of the page."
    },
    "sensorStatusGyro": {
        "message": "Gyroscope"
    },
    "sensorStatusGyroShort": {
        "message": "Gyro",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "sensorStatusAccel": {
        "message": "Accelerometer"
    },
    "sensorStatusAccelShort": {
        "message": "Accel",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "sensorStatusMag": {
        "message": "Magnetometer"
    },
    "sensorStatusMagShort": {
        "message": "Mag",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "sensorStatusBaro": {
        "message": "Barometer"
    },
    "sensorStatusBaroShort": {
        "message": "Baro",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "sensorStatusGPS": {
        "message": "GPS"
    },
    "sensorStatusGPSShort": {
        "message": "GPS",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "sensorStatusSonar": {
        "message": "Sonar / Range finder"
    },
    "sensorStatusSonarShort": {
        "message": "Sonar",
        "description": "Text of the image in the top sensors icons. Please keep it short."
    },
    "checkForConfiguratorUnstableVersions": {
        "message": "Show update notifications for unstable versions of the configurator"
    },
    "configuratorDevelopmentNotice": {
        "message": "You are using a <b>development version</b> of the <b>Rotorflight Configurator</b>.<br> Please consider using a released version, unless you have a good reason for using an unreleased development version."
    },
    "configuratorUpdateNotice": {
        "message": "You are using an outdated version of the <b>Rotorflight Configurator</b>.<br>$t(configuratorUpdateHelp.message)"
    },
    "configuratorUpdateHelp": {
        "message": "Using a newer version of the firmware with an outdated version of Configurator means that changing some settings will result in a <strong>corrupted firmware configuration and a non-working craft</strong>. Furthermore, some features of the firmware will only be configurable in CLI.<br><strong>Rotorflight Configurator version <b>$1</b> is available for download online</strong>, please visit <a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">this page</a> to download and install the latest version with fixes and improvements.<br>Please close the configurator window before updating."
    },
    "configuratorUpdateWebsite": {
        "message": "Go to Release Website"
    },
    "deviceRebooting": {
        "message": "Device - <span class=\"message-negative\">Rebooting</span>"
    },
    "deviceRebooting_flashBootloader": {
        "message": "Device - <span class=\"message-negative\">Rebooting to FLASH BOOTLOADER</span>"
    },
    "deviceRebooting_romBootloader": {
        "message": "Device - <span class=\"message-negative\">Rebooting to ROM BOOTLOADER</span>"
    },
    "backupFileIncompatible": {
        "message": "Backup file provided was generated for previous version of the configurator and is incompatible with this version of configurator. Sorry"
    },
    "backupFileUnmigratable": {
        "message": "Backup file provided was generated by a previous version of the configurator and is not migratable. Sorry."
    },
    "configMigrationFrom": {
        "message": "Migrating configuration file generated by configurator: $1"
    },
    "configMigratedTo": {
        "message": "Migrated configuration to configurator: $1"
    },
    "configMigrationSuccessful": {
        "message": "Configuration migration complete, migrations applied: $1"
    },
    "tabFirmwareFlasher": {
        "message": "Firmware Flasher"
    },
    "tabLanding": {
        "message": "Welcome"
    },
    "tabChangelog": {
        "message": "Changelog"
    },
    "tabPrivacyPolicy": {
        "message": "Privacy Policy"
    },
    "tabHelp": {
        "message": "Documentation & Support"
    },
    "tabOptions": {
        "message": "Options"
    },
    "tabStatus": {
        "message": "Status"
    },
    "tabSetup": {
        "message": "Setup"
    },
    "tabSetupOSD": {
        "message": "OSD Setup"
    },
    "tabConfiguration": {
        "message": "Configuration"
    },
    "tabPorts": {
        "message": "Serial Ports"
    },
    "tabBeepers": {
        "message": "Beepers"
    },
    "tabProfiles": {
        "message": "Profiles"
    },
    "tabRates": {
        "message": "Rates"
    },
    "tabGyro": {
        "message": "Gyro"
    },
    "tabReceiver": {
        "message": "Receiver"
    },
    "tabServos": {
        "message": "Servos"
    },
    "tabFailsafe": {
        "message": "Failsafe"
    },
    "tabOsd": {
        "message": "OSD"
    },
    "tabVtx": {
        "message": "Video Tx"
    },
    "tabPower": {
        "message": "Power"
    },
    "tabGPS": {
        "message": "GPS"
    },
    "tabMotors": {
        "message": "Motors"
    },
    "tabMixer": {
        "message": "Mixer"
    },
    "tabLedStrip": {
        "message": "LED Strip"
    },
    "tabRawSensorData": {
        "message": "Sensors"
    },
    "tabCLI": {
        "message": "CLI"
    },
    "tabLogging": {
        "message": "Logging"
    },
    "tabBlackbox": {
        "message": "Blackbox"
    },
    "tabAdjustments": {
        "message": "Adjustments"
    },
    "tabAuxiliary": {
        "message": "Modes"
    },
    "logActionHide": {
        "message": "Hide Log"
    },
    "logActionShow": {
        "message": "Show Log"
    },
    "serialErrorFrameError": {
        "message": "Serial connection error: bad framing"
    },
    "serialErrorParityError": {
        "message": "Serial connection error: bad parity"
    },
    "serialPortOpened": {
        "message": "Serial port <span class=\"message-positive\">successfully</span> opened with ID: $1"
    },
    "serialPortOpenFail": {
        "message": "<span class=\"message-negative\">Failed</span> to open serial port"
    },
    "serialPortClosedOk": {
        "message": "Serial port <span class=\"message-positive\">successfully</span> closed"
    },
    "serialPortClosedFail": {
        "message": "<span class=\"message-negative\">Failed</span> to close serial port"
    },
    "serialUnrecoverable": {
        "message": "Unrecoverable <span class=\"message-negative\">failure</span> of serial connection, disconnecting..."
    },
    "serialPortLoading": {
        "message": "Loading ..."
    },
    "usbDeviceOpened": {
        "message": "USB device <span class=\"message-positive\">successfully</span> opened with ID: $1"
    },
    "usbDeviceOpenFail": {
        "message": "<span class=\"message-negative\">Failed</span> to open USB device!"
    },
    "usbDeviceClosed": {
        "message": "USB device <span class=\"message-positive\">successfully</span> closed"
    },
    "usbDeviceCloseFail": {
        "message": "<span class=\"message-negative\">Failed</span> to close USB device"
    },
    "usbDeviceUdevNotice": {
        "message": "Are <strong>udev rules</strong> installed correctly? See docs for instructions"
    },
    "stm32UsbDfuNotFound": {
        "message": "USB DFU not found"
    },
    "stm32RebootingToBootloader": {
        "message": "Initiating reboot to bootloader ..."
    },
    "stm32RebootingToBootloaderFailed": {
        "message": "Rebooting device to bootloader: FAILED"
    },
    "stm32TimedOut": {
        "message": "STM32 - timed out, programming: FAILED"
    },
    "stm32WrongResponse": {
        "message": "STM32 Communication failed, wrong response, expected: $1 (0x$2) received: $3 (0x$4)"
    },
    "stm32ContactingBootloader": {
        "message": "Contacting bootloader ..."
    },
    "stm32ContactingBootloaderFailed": {
        "message": "Communication with bootloader failed"
    },
    "stm32ResponseBootloaderFailed": {
        "message": "No response from the bootloader, programming: FAILED"
    },
    "stm32GlobalEraseExtended": {
        "message": "Executing global chip erase (via extended erase) ..."
    },
    "stm32LocalEraseExtended": {
        "message": "Executing local erase (via extended erase) ..."
    },
    "stm32GlobalErase": {
        "message": "Executing global chip erase ..."
    },
    "stm32LocalErase": {
        "message": "Executing local erase ..."
    },
    "stm32InvalidHex": {
        "message": "Invalid hex"
    },
    "stm32Erase": {
        "message": "Erasing ..."
    },
    "stm32Flashing": {
        "message": "Flashing ..."
    },
    "stm32Verifying": {
        "message": "Verifying ..."
    },
    "stm32ProgrammingSuccessful": {
        "message": "Programming: SUCCESSFUL"
    },
    "stm32ProgrammingFailed": {
        "message": "Programming: FAILED"
    },
    "stm32AddressLoadFailed": {
        "message": "Address load for option bytes sector failed. Very likely due to read protection."
    },
    "stm32AddressLoadUnknown": {
        "message": "Address load for option bytes sector failed with unknown error. Aborting."
    },
    "stm32NotReadProtected": {
        "message": "Read protection not active"
    },
    "stm32ReadProtected": {
        "message": "Board seems read protected. Unprotecting. Do not disconnect/unplug!"
    },
    "stm32UnprotectSuccessful": {
        "message": "Unprotect successful."
    },
    "stm32UnprotectUnplug": {
        "message": "ACTION REQUIRED: Unplug and re-connect flight controller in DFU mode to try flashing again!"
    },
    "stm32UnprotectFailed": {
        "message": "Failed to unprotect board"
    },
    "stm32UnprotectInitFailed": {
        "message": "Failed to initiate unprotect routine"
    },
    "noConfigurationReceived": {
        "message": "No configuration received within <span class=\"message-negative\">10 seconds</span>, communication <span class=\"message-negative\">failed</span>"
    },
    "firmwareVersionNotSupported": {
        "message": "This firmware version is <span class=\"message-negative\">not supported</span>. Please use a firmware version that is supported by this version of the Configurator. Use CLI for backup before flashing. CLI backup/restore procedure is in the documention.<br />Alternatively download and use an old version of the configurator if you are not ready to upgrade."
    },
    "firmwareTypeNotSupported": {
        "message": "Non - Rotorflight firmware is <span class=\"message-negative\">not supported</span>, except for CLI mode."
    },
    "resetToCustomDefaultsDialog": {
        "message": "There are custom defaults for this board available.<br />Normally, a board will not work properly unless custom defaults are applied.<br />Do you want to apply the custom defaults for this board?"
    },
    "resetToCustomDefaultsAccept": {
        "message": "Apply Custom Defaults"
    },
    "reportProblemsDialogHeader": {
        "message": "The following <strong>problems with your configuration</strong> were detected:"
    },
    "reportProblemsDialogFooter": {
        "message": "Please <strong>fix these problems before attempting to fly your craft</strong>."
    },
    "reportProblemsDialogAPI_VERSION_MAX_SUPPORTED": {
        "message": "<strong>the version of configurator that you are using ($3) is older than the firmware you are using ($4)</strong>.<br>$t(configuratorUpdateHelp.message)"
    },
    "reportProblemsDialogUNIFIED_FIRMWARE_WITHOUT_DEFAULTS": {
        "message": "<strong>Unified firmware type is flashed without custom defaults.</strong><br>Please configure the board manually via the CLI."
    },
    "reportProblemsDialogMOTOR_PROTOCOL_DISABLED": {
        "message": "<strong>there is no motor output protocol selected</strong>.<br>Please select a motor output protocol appropriate for your ESCs in '$t(configurationEscFeatures.message)' on the '$t(tabMotors.message)' tab.<br>$t(escProtocolDisabledMessage.message)"
    },
    "reportProblemsDialogACC_NEEDS_CALIBRATION": {
        "message": "<strong>the accelerometer is enabled but it is not calibrated</strong>.<br>If you plan to use the accelerometer, please follow the instructions for '$t(initialSetupButtonCalibrateAccel.message)' on the '$t(tabSetup.message)' tab. If any function that requires the accelerometer (auto level modes, GPS rescue, ...) is enabled, arming of the craft will be disabled until the accelerometer has been calibrated.<br>If you are not planning on using the accelerometer it is recommended that you disable it in '$t(configurationSystem.message)' on the '$t(tabConfiguration.message)' tab."
    },
    "infoVersions": {
        "message": "Running - OS: <strong>{{operatingSystem}}</strong>, Configurator: <strong>{{configuratorVersion}}</strong>",
        "description": "Message that appears in the GUI log panel indicating operating system and Configurator version"
    },
    "releaseCheckLoaded": {
        "message": "Loaded release information for $1 from GitHub."
    },
    "releaseCheckFailed": {
        "message": "<b>GitHub query for $1 releases failed, using cached information. Reason: <code>$2</code></b>"
    },
    "releaseCheckCached": {
        "message": "Using cached release information for $1 releases."
    },
    "releaseCheckNoInfo": {
        "message": "No release information available for $1."
    },
    "tabSwitchConnectionRequired": {
        "message": "You need to <strong>connect</strong> before you can view any of the tabs."
    },
    "tabSwitchWaitForOperation": {
        "message": "You <span class=\"message-negative\">can't</span> do this right now, please wait for current operation to finish ..."
    },
    "firmwareVersion": {
        "message": "Firmware Version: <strong>$1</strong>"
    },
    "apiVersionReceived": {
        "message": "MSP API version: <strong>$1</strong>"
    },
    "uniqueDeviceIdReceived": {
        "message": "Unique device ID: <strong>0x$1</strong>"
    },
    "craftNameReceived": {
        "message": "Craft name: <strong>$1</strong>"
    },
    "realTimeClockSet": {
        "message": "Real-Time Clock set"
    },
    "armingDisabled": {
        "message": "<strong>Arming Disabled</strong>"
    },
    "armingEnabled": {
        "message": "<strong>Arming Enabled</strong>"
    },
    "boardInfoReceived": {
        "message": "Board: <strong>$1</strong>, version: <strong>$2</strong>"
    },
    "buildInfoReceived": {
        "message": "Revision: <strong>$1</strong> released on: <strong>$2</strong>"
    },
    "firmwareInfoReceived": {
        "message": "Firmware: <strong>$1</strong> version: <strong>$2</strong>"
    },
    "versionLabelTarget": {
        "message": "Target"
    },
    "versionLabelFirmware": {
        "message": "Firmware"
    },
    "versionLabelConfigurator": {
        "message": "Configurator"
    },
    "statusbar_port_utilization": {
        "message": "Port utilization:",
        "description": "Port utilization text shown in the status bar"
    },
    "statusbar_usage_download": {
        "message": "D:",
        "description": "References 'Download' in the status bar, port utilization. Keep one character long if possible"
    },
    "statusbar_usage_upload": {
        "message": "U:",
        "description": "References 'Upload' in the status bar, port utilization. Keep one character long if possible"
    },
    "statusbar_packet_error": {
        "message": "Packet error:",
        "description": "Packet error text shown in the status bar"
    },
    "statusbar_pid_cycle_time": {
        "message": "PID Cycle Time:",
        "description": "PID cycle time text shown in the status bar"
    },
    "statusbar_gyro_cycle_time": {
        "message": "Gyro Cycle Time:",
        "description": "Gyro cycle time text shown in the status bar"
    },
    "statusbar_sys_load": {
        "message": "System Load:",
        "description": "System load text shown in the status bar"
    },
    "statusbar_rt_load": {
        "message": "Realtime Load:",
        "description": "Realtime CPU load text shown in the status bar"
    },
    "statusbar_cpu_load": {
        "message": "CPU Load:",
        "description": "CPU load text shown in the status bar"
    },
    "dfu_erased_kilobytes": {
        "message": "Erased $1 kB of flash <span class=\"message-positive\">successfully</span>"
    },
    "dfu_device_flash_info": {
        "message": "Detected device with total flash size $1 KiB"
    },
    "dfu_error_image_size": {
        "message": "<span class=\"message-negative\">Error</span>: Supplied image is larger then flash available on the chip! Image: $1 KiB, limit = $2 KiB"
    },
    "eeprom_saved_ok": {
        "message": "EEPROM <span class=\"message-positive\">saved</span>"
    },
    "defaultWelcomeIntro": {
        "message": "Welcome to <strong>Rotorflight - Configurator</strong>, a utility designed to simplify updating, configuring and tuning of your flight controller."
    },
    "defaultDownloadsHead": {
        "message": "Downloads"
    },
    "defaultDownloadsText": {
        "message": "The latest Rotorflight software downloads are available here:<br /><ul><li><a href=\"https://github.com/rotorflight/rotorflight-configurator/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Rotorflight Configurator</a></li><li><a href=\"https://github.com/rotorflight/rotorflight-blackbox/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Rotorflight Blackbox Log Viewer</a></li><li><a href=\"https://github.com/rotorflight/rotorflight-lua-scripts/releases\" target=\"_blank\" rel=\"noopener noreferrer\">LUA Scripts for EdgeTx & OpenTx</a></li><li><a href=\"https://github.com/rotorflight/rotorflight-lua-ethos/releases\" target=\"_blank\" rel=\"noopener noreferrer\">LUA Scripts for FrSky Ethos</a></li></ul>Rotorflight is <b>Open Source</b> software. The source code is available in <a href=\"https://github.com/rotorflight?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>."
    },
    "defaultCommunityHead": {
        "message": "Community"
    },
    "defaultCommunityText": {
        "message": "Rotorflight has an active online community of normal users, pro-pilots, and developers."
    },
    "defaultWebsiteText": {
        "message": "<a href=\"https://www.rotorflight.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Rotorflight website</a> is the first stop for instructions, manuals, and information."
    },
    "defaultDiscordText": {
        "message": "<a href=\"https://discord.gg/FyfMF4RwSA/\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a> is the official place for online support and discussions."
    },
    "defaultFacebookText": {
        "message": "<a href=\"https://www.facebook.com/groups/rotorflight\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook Group</a> is a good place for hanging out with other RF pilots."
    },
    "defaultContributingHead": {
        "message": "Contributing"
    },
    "defaultContributingText": {
        "message": "Rotorflight is a open-source community project. Anybody can join in and help to make it better, including:<br /><ul><li>helping other users on Rotorflight Discord or other online forums</li><li><a href=\"https://github.com/rotorflight?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">reporting</a> bugs and issues, and suggesting improvements</li><li>testing new software versions, new features and fixes; and providing feedback</li><li>participating in discussions on new features</li><li>create or update content on <a href=\"https://www.rotorflight.org\" target=\"_blank\" rel=\"noopener noreferrer\">our Website</a></li><li><a href=\"https://www.rotorflight.org/docs/Contributing/intro\" target=\"_blank\" rel=\"noopener noreferrer\">contributing</a> to the software development - fixing bugs, implementing new features and improvements</li><li><a href=\"https://www.rotorflight.org/docs/Contributing/intro#translations\" target=\"_blank\" rel=\"noopener noreferrer\">translating</a> Rotorflight Configurator into a new language, or helping to maintain an existing translation</li></ul>"
    },
    "defaultDonateHead": {
        "message": "Supporting Rotorflight"
    },
    "defaultDonateText": {
        "message": "<p>Rotorflight is <i>open source software</i> and is available <i>free of charge</i>, without warranty.</p><p>If you find Rotorflight useful, please consider <b>supporting</b> the development by donating to the Rotorflight Project.</p>"
    },
    "defaultDonateTooltip": {
        "message": "Donate to the Rotorflight Project"
    },
    "defaultChangelogHead": {
        "message": "Configurator - Changelog"
    },
    "defaultDocumentationHead": {
        "message": "Documentation / Manual"
    },
    "defaultDocumentation": {
        "message": "Rotorflight documentation is available in release notes and website.<br /><br />"
    },
    "defaultDocumentation1": {
        "message": "The Rotorflight website tutorial is a great resource for information, it can be found <a href=\"https://www.rotorflight.org/docs/Tutorial-Quickstart/Introduction\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
    },
    "defaultDocumentation2": {
        "message": "The latest news can be read at the Website Announcements page, <a href=\"https://www.rotorflight.org/announcement\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
    },
    "defaultDocumentation3": {
        "message": "The release notes for the firmware can be read at GitHub releases page, <a href=\"https://github.com/rotorflight/rotorflight-firmware/releases\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>."
    },
    "defaultSupportHead": {
        "message": "Support"
    },
    "defaultSupportSubline1": {
        "message": "Support Sources"
    },
    "defaultSupportSubline2": {
        "message": "Betaflight Information"
    },
    "defaultSupport": {
        "message": "For support please search the forums and website first or contact your vendor.<br /><br />"
    },
    "defaultSupport1": {
        "message": "<a href=\"https://www.rotorflight.org\" target=\"_blank\" rel=\"noopener noreferrer\">Rotorflight Website</a>"
    },
    "defaultSupport2": {
        "message": "<a href=\"http://www.rcgroups.com/forums/showthread.php?t=4000345\" target=\"_blank\" rel=\"noopener noreferrer\">RC Groups Rotorflight thread</a>"
    },
    "defaultSupport3": {
        "message": "<a href=\"https://discord.com/invite/FyfMF4RwSA\" target=\"_blank\" rel=\"noopener noreferrer\">Rotorflight discussion on Discord</a>"
    },
    "defaultSupport4": {
        "message": "<a href=\"https://betaflight.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Betaflight Website</a>"
    },
    "defaultSupport5": {
        "message": "<a href=\"https://github.com/betaflight/betaflight/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">Betaflight Wiki</a>"
    },
    "statusButtonResetZaxis": {
        "message": "Reset Z axis, offset: 0 deg"
    },
    "statusButtonResetZaxisValue": {
        "message": "Reset Z axis, offset: $1 deg"
    },
    "statusBatteryHead": {
        "message": "Battery"
    },
    "statusInfoHead": {
        "message": "Info"
    },
    "statusReceiverHead": {
        "message": "Receiver"
    },
    "statusBattery": {
        "message": "Voltage:"
    },
    "statusDrawn": {
        "message": "Capacity:"
    },
    "statusDrawing": {
        "message": "Current:"
    },
    "statusChargeLevel": {
        "message": "Charge level:"
    },
    "statusCraftName": {
        "message": "Craft Name:"
    },
    "statusBoardName": {
        "message": "Board:"
    },
    "statusTargetName": {
        "message": "Firmware:"
    },
    "statusArmingDisableFlags": {
        "message": "Arming Disable Flags:"
    },
    "statusArmingAllowed": {
        "message": "Arming Allowed"
    },
    "statusArmingDisableFlagsTooltip": {
        "message": "List of flags indicating why arming is currently not allowed. Pass the mouse over the flag or refer to the Website tutorial <a href=\"https://www.rotorflight.org/docs/Tutorial-Setup/Modes#arm\" target=\"_blank\" rel=\"noopener noreferrer\">(Arm Mode flags)</a> for more info."
    },
    "statusArmingDisableFlagsTooltipNO_GYRO": {
        "message": "A gyro was not detected",
        "description": "Message that pops up to describe the NO_GYRO arming disable flag"
    },
    "statusArmingDisableFlagsTooltipFAILSAFE": {
        "message": "Failsafe is active",
        "description": "Message that pops up to describe the FAILSAFE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipRX_FAILSAFE": {
        "message": "No valid receiver signal is detected",
        "description": "Message that pops up to describe the RX_FAILSAFE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipBAD_RX_RECOVERY": {
        "message": "Your receiver has just recovered from receiver failsafe but the arm switch is on",
        "description": "Message that pops up to describe the BAD_RX_RECOVERY arming disable flag"
    },
    "statusArmingDisableFlagsTooltipBOXFAILSAFE": {
        "message": "The 'FAILSAFE' switch was activated",
        "description": "Message that pops up to describe the BOXFAILSAFE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipGOVERNOR": {
        "message": "Governor can't function without an RPM signal",
        "description": "Message that pops up to describe the GOVERNOR arming disable flag"
    },
    "statusArmingDisableFlagsTooltipCRASH": {
        "message": "Disarmed via crash detection",
        "description": "Message that pops up to describe the CRASH arming disable flag"
    },
    "statusArmingDisableFlagsTooltipTHROTTLE": {
        "message": "Throttle channel is too high",
        "description": "Message that pops up to describe the THROTTLE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipANGLE": {
        "message": "Craft is not level (enough)",
        "description": "Message that pops up to describe the ANGLE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipBOOT_GRACE_TIME": {
        "message": "Arming too soon after power on",
        "description": "Message that pops up to describe the BOOT_GRACE_TIME arming disable flag"
    },
    "statusArmingDisableFlagsTooltipNOPREARM": {
        "message": "Prearm switch is not activated or prearm has not been toggled after disarm",
        "description": "Message that pops up to describe the NOPREARM arming disable flag"
    },
    "statusArmingDisableFlagsTooltipLOAD": {
        "message": "System load is too high for safe flight",
        "description": "Message that pops up to describe the LOAD arming disable flag"
    },
    "statusArmingDisableFlagsTooltipCALIBRATING": {
        "message": "Sensor calibration is still ongoing",
        "description": "Message that pops up to describe the CALIBRATING arming disable flag"
    },
    "statusArmingDisableFlagsTooltipCLI": {
        "message": "CLI is active",
        "description": "Message that pops up to describe the CLI arming disable flag"
    },
    "statusArmingDisableFlagsTooltipCMS_MENU": {
        "message": "CMS (config menu) is Active - over OSD or other display -",
        "description": "Message that pops up to describe the CMS_MENU arming disable flag"
    },
    "statusArmingDisableFlagsTooltipOSD_MENU": {
        "message": "OSD menu is active",
        "description": "Message that pops up to describe the OSD_MENU arming disable flag"
    },
    "statusArmingDisableFlagsTooltipBST": {
        "message": "A Black Sheep Telemetry device (TBS Core Pro for example) disarmed and is preventing arming",
        "description": "Message that pops up to describe the BST arming disable flag"
    },
    "statusArmingDisableFlagsTooltipMSP": {
        "message": "MSP connection is active, probably with this Rotorflight Configurator",
        "description": "Message that pops up to describe the MSP arming disable flag"
    },
    "statusArmingDisableFlagsTooltipPARALYZE": {
        "message": "Paralyze mode has been activated",
        "description": "Message that pops up to describe the PARALYZE arming disable flag"
    },
    "statusArmingDisableFlagsTooltipGPS": {
        "message": "GPS rescue mode is configured but required number of satellites has not been fixed",
        "description": "Message that pops up to describe the GPS arming disable flag"
    },
    "statusArmingDisableFlagsTooltipRESC": {
        "message": "The 'GPS Rescue' switch was activated",
        "description": "Message that pops up to describe the RESC arming disable flag"
    },
    "statusArmingDisableFlagsTooltipRPMFILTER": {
        "message": "RPM based filtering is enabled, but the RPM signal is unconfigured or otherwise unavailble",
        "description": "Message that pops up to describe the RPMFILTER arming disable flag"
    },
    "statusArmingDisableFlagsTooltipREBOOT_REQ": {
        "message": "A configuration change requires a reboot",
        "description": "Message that pops up to describe the REBOOT_REQ arming disable flag"
    },
    "statusArmingDisableFlagsTooltipDSHOT_BITBANG": {
        "message": "Bitbanged DSHOT is not working properly and the motors can't be controlled. Likely caused by a timer conflict with other features enabled on the flight controller.",
        "description": "Message that pops up to describe the DSHOT_BITBANG arming disable flag"
    },
    "statusArmingDisableFlagsTooltipACC_CALIB": {
        "message": "The accelerometer has not been calibrated and features are enabled that rely on it. Calibrate the accelerometer.",
        "description": "Message that pops up to describe the ACC_CALIB arming disable flag"
    },
    "statusArmingDisableFlagsTooltipMOTOR_PROTO": {
        "message": "There is no motor throttle protocol selected",
        "description": "Message that pops up to describe the MOTOR_PROTO arming disable flag"
    },
    "statusArmingDisableFlagsTooltipARM_SWITCH": {
        "message": "Arm switch is activated while other arming disable conditions are active",
        "description": "Message that pops up to describe the ARM_SWITCH arming disable flag"
    },
    "statusArmingHead": {
        "message": "Arming"
    },
    "statusArmingDanger": {
        "message": "<strong class=\"message-negative\">WARNING!</strong> <strong>ARMING is ENABLED.</strong> Never fly the craft with the Configurator connected!</strong>"
    },
    "statusEnableArming": {
        "message": "Enable Arming:"
    },
    "statusInstrumentsHead": {
        "message": "Instruments"
    },
    "statusAttitude": {
        "message": "$1 deg"
    },
    "statusConfigBare": {
        "message": "<span class=\"configBare\">BARE</span>"
    },
    "statusConfigDefaults": {
        "message": "<span class=\"configDefaults\">DEFAULTS</span>"
    },
    "statusConfigConfigured": {
        "message": "<span class=\"configConfigured\">CONFIGURED</span>"
    },
    "initialSetupButtonCalibrateAccel": {
        "message": "Calibrate Accelerometer"
    },
    "initialSetupCalibrateAccelText": {
        "message": "Place board or frame on <strong>leveled</strong> surface, proceed with calibration, ensure platform is not moving during calibration period"
    },
    "initialSetupButtonCalibrateMag": {
        "message": "Calibrate Magnetometer"
    },
    "initialSetupCalibrateMagText": {
        "message": "Move multirotor at least <strong>360</strong> degrees on all axis of rotation, you have 30 seconds to perform this task"
    },
    "initialSetupButtonCalibratingText": {
        "message": "Calibrating..."
    },
    "initialSetupButtonResetSettings": {
        "message": "Reset Settings"
    },
    "initialSetupResetSettingsText": {
        "message": "Restore settings to <strong>default</strong>"
    },
    "initialSetupButtonSaveSettings": {
        "message": "Save Settings"
    },
    "initialSetupSaveSettingsText": {
        "message": "Save settings into <strong>EEPROM</strong>."
    },
    "initialSetupButtonBackup": {
        "message": "Backup"
    },
    "initialSetupButtonRestore": {
        "message": "Restore"
    },
    "initialSetupButtonRebootBootloader": {
        "message": "Boot Loader / DFU"
    },
    "initialSetupBackupRestoreText": {
        "message": "<strong>Backup</strong> your configuration in case of an accident, <strong>CLI</strong> settings are <span class=\"message-negative\">not</span> included - use the command 'diff all' in CLI for this."
    },
    "initialSetupRebootBootloaderText": {
        "message": "Reboot into <strong>boot loader / DFU</strong> mode."
    },
    "initialSetupButtonMassStorage": {
        "message": "Mass Storage Mode"
    },
    "initialSetupButtonMassStorageText": {
        "message": "Reboot into <strong>Mass Storage</strong> mode (MSC)."
    },
    "initialSetupButtonReboot": {
        "message": "System Reboot"
    },
    "initialSetupButtonRebootText": {
        "message": "Reboot and reinitialize the system."
    },
    "initialSetupBackupSuccess": {
        "message": "Backup saved <span class=\"message-positive\">successfully</span>"
    },
    "initialSetupRestoreSuccess": {
        "message": "Configuration restored <span class=\"message-positive\">successfully</span>"
    },
    "initialSetupButtonSave": {
        "message": "Save"
    },
    "initialSetupAccelCalibStarted": {
        "message": "Accelerometer calibration started"
    },
    "initialSetupAccelCalibEnded": {
        "message": "Accelerometer calibration <span class=\"message-positive\">finished</span>"
    },
    "initialSetupMagCalibStarted": {
        "message": "Magnetometer calibration started"
    },
    "initialSetupMagCalibEnded": {
        "message": "Magnetometer calibration <span class=\"message-positive\">finished</span>"
    },
    "initialSetupSettingsRestored": {
        "message": "Settings restored to <strong>default</strong>"
    },
    "initialSetupSettingsSaved": {
        "message": "All settings saved in EEPROM."
    },
    "initialSetupDangerText": {
        "message": "<strong>Note:</strong> In order to prevent injury <strong>remove ALL rotor blades</strong> before enabling any arming features.<strong class=\"message-negative\"><strong class=\"message-negative\"><br/>NEVER FLY YOUR CRAFT WITH THE CONFIGURATOR CONNECTED!</strong>"
    },
    "initialSetupDangerTitle": {
        "message": "Arming and Override"
    },
    "initialSetupEnableArming": {
        "message": "<strong>Enable Arming</strong>"
    },
    "initialSetupEnableArmingText": {
        "message": "Enable arming the craft with the transmitter while the Configurator is connected. Arming your craft will allow the motors to spool up."
    },
    "initialSetupEnableMotorOverride": {
        "message": "<strong>Enable Motor Override</strong>"
    },
    "initialSetupEnableMotorOverrideText": {
        "message": "Enable the motor override feature in the Motors tab. Using motor override WILL SPOOL UP the motors!"
    },
    "initialSetupEnableServoOverride": {
        "message": "<strong>Enable Servo Override</strong>"
    },
    "initialSetupEnableServoOverrideText": {
        "message": "Enable the servo override feature in the Servos tab. Using servo override WILL move the servos to arbitrary positions."
    },
    "initialSetupEnableMixerOverride": {
        "message": "<strong>Enable Mixer Override</strong>"
    },
    "initialSetupEnableMixerOverrideText": {
        "message": "Enable the mixer input override feature in the Mixers tab. Using mixer override WILL force the flight controls to arbitrary positions."
    },
    "feature_RX_PPM": {
        "message": "PPM RX input"
    },
    "feature_INFLIGHT_ACC_CAL": {
        "message": "In-flight level calibration"
    },
    "feature_RX_SERIAL": {
        "message": "Serial RX input"
    },
    "feature_SOFTSERIAL": {
        "message": "Enable Software Serial ports"
    },
    "feature_GPS": {
        "message": "GPS for navigation and telemetry"
    },
    "feature_SONAR": {
        "message": "Sonar altitude radar"
    },
    "feature_TELEMETRY": {
        "message": "Transmitter telemetry"
    },
    "feature_RX_PARALLEL_PWM": {
        "message": "PWM RX input channels"
    },
    "feature_RX_MSP": {
        "message": "MSP RX input"
    },
    "feature_RSSI_ADC": {
        "message": "Analog RSSI input"
    },
    "feature_LED_STRIP": {
        "message": "RGB LED Strip support"
    },
    "feature_DISPLAY": {
        "message": "OLED Display support"
    },
    "feature_OSD": {
        "message": "On Screen Display"
    },
    "feature_CMS": {
        "message": "Configuration Menu System"
    },
    "feature_RX_SPI": {
        "message": "SPI RX support"
    },
    "feature_GOVERNOR": {
        "message": "Headspeed governor"
    },
    "feature_ESC_SENSOR": {
        "message": "ESC Telemetry support"
    },
    "feature_FREQ_SENSOR": {
        "message": "RPM signal input support"
    },
    "feature_VTX": {
        "message": "Video Transmitter"
    },
    "feature_DYN_NOTCH": {
        "message": "Dynamic Notch filtering"
    },
    "feature_RPM_FILTER": {
        "message": "RPM controlled notch filtering"
    },
    "configurationFeatureEnabled": {
        "message": "Enabled"
    },
    "configurationFeatureName": {
        "message": "Feature"
    },
    "configurationFeatureDescription": {
        "message": "Description"
    },
    "configurationFeatures": {
        "message": "Features"
    },
    "configurationSerialPorts": {
        "message": "Serial Ports"
    },
    "configurationSerialPortsHelp": {
        "message": "Select function and speed for each serial port (UART)."
    },
    "configurationRSSI": {
        "message": "RSSI (Signal Strength)"
    },
    "configurationRSSIHelp": {
        "message": "RSSI is a measurement of signal strength and is very handy so you know when your aircraft is going out of range or if it is suffering RF interference."
    },
    "configurationEscFeatures": {
        "message": "ESC/Motor Features"
    },
    "configurationFeaturesHelp": {
        "message": "<strong>Note:</strong> Not all features are supported by all flight controllers. If you enable a specific feature, and it is disabled after you hit 'Save and Reboot', it means that this feature is not supported."
    },
    "configurationBoardAlignment": {
        "message": "Board and Sensor Alignment"
    },
    "configurationBoardAlignmentHelp": {
        "message": "Arbitrary board rotation allows mounting the FC sideways / upside down / rotated etc. When using external sensors, use the sensor alignments to define sensor position independent from the board orientation."
    },
    "configurationBoardAlignmentRoll": {
        "message": "Roll Degrees"
    },
    "configurationBoardAlignmentPitch": {
        "message": "Pitch Degrees"
    },
    "configurationBoardAlignmentYaw": {
        "message": "Yaw Degrees"
    },
    "configurationSensorAlignmentGyro": {
        "message": "GYRO Alignment"
    },
    "configurationSensorGyroToUse": {
        "message": "GYRO/ACCEL"
    },
    "configurationSensorGyroToUseNotFound": {
        "message": "Warning: No Gyro/Acc found"
    },
    "configurationSensorGyroToUseFirst": {
        "message": "First"
    },
    "configurationSensorGyroToUseSecond": {
        "message": "Second"
    },
    "configurationSensorGyroToUseBoth": {
        "message": "Both"
    },
    "configurationSensorAlignmentGyro1": {
        "message": "First GYRO"
    },
    "configurationSensorAlignmentGyro2": {
        "message": "Second GYRO"
    },
    "configurationSensorAlignmentAcc": {
        "message": "ACCEL Alignment"
    },
    "configurationSensorAlignmentMag": {
        "message": "MAG Alignment"
    },
    "configurationSensorAlignmentDefaultOption": {
        "message": "Default"
    },
    "configurationAccelTrims": {
        "message": "Accelerometer Trim"
    },
    "configurationAccelTrimsHelp": {
        "message": "The Accelerometer Trims provide fine tuning to the horizon level, which can be used to decrease drift while in stabilized modes, such as Angle or Rescue."
    },
    "configurationAccelTrimRoll": {
        "message": "Accelerometer Roll Trim"
    },
    "configurationAccelTrimPitch": {
        "message": "Accelerometer Pitch Trim"
    },
    "escProtocolDisabledMessage": {
        "message": "<strong>Caution:</strong> Selecting a motor output protocol that is not supported by your ESCs can lead to the <strong>ESCs spinning up as soon as a battery is connected</strong>. For this reason, <strong>always make sure to remove the props before connecting a battery for the first time after changing the motor output protocol</strong>."
    },
    "configurationDshotBeeper": {
        "message": "ESC Beacon Configuration"
    },
    "configurationDshotBeaconTone": {
        "message": "Dshot Beacon Tone"
    },
    "configurationDshotBeaconHelp": {
        "message": "The Dshot beacon uses the ESCs and motors to produce sound. This means that the Dshot beacon cannot be used when the motors are spinning. If arming is attempted while the Dshot beacon is active, there is a 2 second delay after the last Dshot beacon tone before the craft is armed. This is to prevent the Dshot beacon functionality from interfering with the Dshot commands sent when arming.<br/><strong>Warning:</strong> Since the Dshot beacon is running current through your motors when active, this can result in excessive heat production and damage to your motors and / or ESCs if the beacon strength is set too high. Use BLHeli Configurator or the BLHeli Suite to adjust and test the beacon strength."
    },
    "configurationBeeper": {
        "message": "Buzzer Configuration"
    },
    "configurationBeeperHelp": {
        "message": "Enable or disable when to sound the Buzzer"
    },
    "beeper_GYRO_CALIBRATED": {
        "message": "Beeps when gyro has been calibrated"
    },
    "beeper_RX_LOST": {
        "message": "Beeps when TX is turned off or signal lost (repeat until TX is okay)"
    },
    "beeper_RX_LOST_LANDING": {
        "message": "Beeps SOS when armed and TX is turned off or signal lost (autolanding/autodisarm)"
    },
    "beeper_DISARMING": {
        "message": "Beep when disarming the flightcontroller"
    },
    "beeper_ARMING": {
        "message": "Beep when arming the flightcontroller"
    },
    "beeper_ARMING_GPS_FIX": {
        "message": "Beep a special tone when arming the FC and GPS has fix"
    },
    "beeper_BAT_CRIT_LOW": {
        "message": "Longer warning beeps when battery is critically low (repeats)"
    },
    "beeper_BAT_LOW": {
        "message": "Warning beeps when battery is getting low (repeats)"
    },
    "beeper_GPS_STATUS": {
        "message": "Use the number of beeps to indicate how many GPS satellites were found"
    },
    "beeper_RX_SET": {
        "message": "Beeps when aux channel is set for beep"
    },
    "beeper_ACC_CALIBRATION": {
        "message": "Accelerometer inflight calibration completed confirmation"
    },
    "beeper_ACC_CALIBRATION_FAIL": {
        "message": "Accelerometer inflight calibration failed"
    },
    "beeper_READY_BEEP": {
        "message": "Ring a tone when GPS is locked and ready"
    },
    "beeper_MULTI_BEEPS": {
        "message": ""
    },
    "beeper_DISARM_REPEAT": {
        "message": "Beeps sounded while stick held in disarm position"
    },
    "beeper_ARMED": {
        "message": "Warning beeps when board is armed with motors off when idle (repeats until board is disarmed or throttle is increased)"
    },
    "beeper_SYSTEM_INIT": {
        "message": "Initialisation beeps when board is powered on"
    },
    "beeper_USB": {
        "message": "Beep when flight controller is powered from USB. Turn this off if you don't want the beeper to be on when on the workbench"
    },
    "beeper_BLACKBOX_ERASE": {
        "message": "Beep when blackbox erase completes"
    },
    "beeper_CAM_CONNECTION_OPEN": {
        "message": "Beep when the 5 key camera control is entered"
    },
    "beeper_CAM_CONNECTION_CLOSE": {
        "message": "Beep when the 5 key camera control is exited"
    },
    "beeper_ARMING_GPS_NO_FIX": {
        "message": "Beep a special tone when arming the FC and GPS does not have fix"
    },
    "configurationSystem": {
        "message": "System configuration"
    },
    "configurationLoopTime": {
        "message": "Flight Controller Loop Time"
    },
    "configurationSpeedGyroNoGyro": {
        "message": "No gyro",
        "description": "When no gyro is configured this appears in place of the speed of the gyro in kHz"
    },
    "configurationSpeedPidNoGyro": {
        "message": "Gyro / {{value}}",
        "description": "When no gyro is configured this appears in place of the speed of the PID in kHz. Try to keep it short."
    },
    "configurationKHzUnitLabel": {
        "message": "{{value}} kHz",
        "description": "Value for some options that show the speed of gyro, pid, etc. in kHz"
    },
    "configurationGPS": {
        "message": "Settings"
    },
    "configurationGPSProtocol": {
        "message": "Protocol"
    },
    "configurationGPSBaudrate": {
        "message": "Baudrate"
    },
    "configurationGPSubxSbas": {
        "message": "Ground Assistance Type"
    },
    "configurationGPSAutoBaud": {
        "message": "Auto Baud"
    },
    "configurationGPSAutoConfig": {
        "message": "Auto Config"
    },
    "configurationGPSGalileo": {
        "message": "Use Galileo",
        "description": "Option to use Galileo in the GPS configuration"
    },
    "configurationGPSGalileoHelp": {
        "message": "When enabled, this removes the QZSS system (Japanese) and replaces it for the Galileo system (European).",
        "description": "Help text for the option to use Galileo in the GPS configuration"
    },
    "configurationGPSHomeOnce": {
        "message": "Set Home Point Once",
        "description": "Option to set the Home Point with the first arm only, not with each arm in the GPS Configuration"
    },
    "configurationGPSHomeOnceHelp": {
        "message": "When enabled, only the first arm after the battery is connected will be used as home point. If not enabled, every time the quad is armed, the home point will be updated.",
        "description": "Help text for the option to set the Home Point with the first arm only, not with each arm in the GPS Configuration"
    },
    "configurationEepromSaved": {
        "message": "EEPROM <span class=\"message-positive\">saved</span>"
    },
    "dialogDynFiltersChangeTitle": {
        "message": "Dynamic Notch values change"
    },
    "dialogDynFiltersChangeNote": {
        "message": "<span class=\"message-negative\"><b>WARNING: Some dynamic notch values have been changed to default values</b></span> because the RPM filtering has been activated/deactivated.<br> Please, check before flying."
    },
    "dialogDynFiltersConfirm": {
        "message": "OK"
    },
    "portsIdentifier": {
        "message": "Identifier"
    },
    "portsConfiguration": {
        "message": "Configuration/MSP"
    },
    "portsSerialRx": {
        "message": "Serial Rx"
    },
    "portsSensorIn": {
        "message": "Sensor Input"
    },
    "portsTelemetryOut": {
        "message": "Telemetry Output"
    },
    "portsPeripherals": {
        "message": "Peripherals"
    },
    "portsHelp": {
        "message": "<strong>Note:</strong> not all combinations are valid.  When the flight controller firmware detects this the serial port configuration will be reset."
    },
    "portsVtxTableNotSet": {
        "message": "<span class=\"message-negative\">WARNING:</span> The VTX table has not been set up correctly and without it VTX control will not be possible. Please set up the VTX table in $t(tabVtx.message) tab."
    },
    "portsMSPHelp": {
        "message": "<strong>Note:</strong> Do <span class=\"message-negative\">NOT</span> disable MSP on the first serial port unless you know what you are doing.  You may have to reflash and erase your configuration if you do."
    },
    "portsTelemetryDisabled": {
        "message": "Disabled"
    },
    "portsFunction_DISABLED": {
        "message": "Disabled"
    },
    "portsFunction_MSP": {
        "message": "MSP"
    },
    "portsFunction_GPS": {
        "message": "GPS"
    },
    "portsFunction_TELEMETRY_FRSKY": {
        "message": "Telemetry: FrSky Hub"
    },
    "portsFunction_TELEMETRY_HOTT": {
        "message": "Telemetry: Graupner HoTT"
    },
    "portsFunction_TELEMETRY_LTM": {
        "message": "Telemetry: LTM"
    },
    "portsFunction_TELEMETRY_MAVLINK": {
        "message": "Telemetry: MAVLink"
    },
    "portsFunction_TELEMETRY_MSP": {
        "message": "Telemetry: MSP"
    },
    "portsFunction_TELEMETRY_SMARTPORT": {
        "message": "Telemetry: FrSky SmartPort"
    },
    "portsFunction_TELEMETRY_IBUS": {
        "message": "Telemetry: FlySky iBUS"
    },
    "portsFunction_TELEMETRY_JETIXBUS": {
        "message": "Telemetry: JETI Xbus"
    },
    "portsFunction_TELEMETRY_CRSF": {
        "message": "Telemetry: TBS CRSF"
    },
    "portsFunction_TELEMETRY_SRXL": {
        "message": "Telemetry: Spektrum SRXL"
    },
    "portsFunction_ESC_SENSOR": {
        "message": "ESC Telemetry"
    },
    "portsFunction_RX_SERIAL": {
        "message": "Serial Rx"
    },
    "portsFunction_BLACKBOX": {
        "message": "Blackbox Logging"
    },
    "portsFunction_TBS_SMARTAUDIO": {
        "message": "VTX: TBS SmartAudio"
    },
    "portsFunction_IRC_TRAMP": {
        "message": "VTX: IRC Tramp"
    },
    "portsFunction_RUNCAM": {
        "message": "Camera: RunCam"
    },
    "portsFunction_RUNCAM_DEVICE_CONTROL": {
        "message": "Camera (RunCam Protocol)"
    },
    "portsFunction_LIDAR_TF": {
        "message": "Benewake LIDAR"
    },
    "portsFunction_FRSKY_OSD": {
        "message": "OSD: FrSky"
    },
    "portsFunction_CUSTOM": {
        "message": "Custom"
    },
    "baudrate_AUTO": {
        "message": "Auto"
    },
    "baudrate_CUSTOM": {
        "message": "Custom"
    },
    "baudrate_DISABLED": {
        "message": "Disabled"
    },
    "dialogCopyProfileText": {
        "message": "Copy values from the current profile to"
    },
    "dialogCopyRateProfileText": {
        "message": "Copy values from the current rateprofile to"
    },
    "dialogCopyProfileTitle": {
        "message": "Copy Profile Values"
    },
    "dialogCopyProfileNote": {
        "message": "All values on the destination profile will be overwritten.<br>This operation can not be reverted."
    },
    "dialogCopyProfileConfirm": {
        "message": "Copy"
    },
    "dialogCopyProfileClose": {
        "message": "Cancel"
    },
    "dialogResetProfileTitle": {
        "message": "Reset Profile Values"
    },
    "dialogResetProfileNote": {
        "message": "All values on the current profile will be reset to defaults.<br>This operation can not be reverted."
    },
    "dialogResetRateProfileNote": {
        "message": "All values on the current profile will be reset to defaults."
    },
    "dialogResetProfileConfirm": {
        "message": "Reset"
    },
    "dialogResetProfileClose": {
        "message": "Cancel"
    },
    "dialogProfileChangeTitle": {
        "message": "<span class=\"message-negative\">Warning:</span> Profile Changed"
    },
    "dialogProfileChangeNote": {
        "message": "The active profile was changed before changes were saved. All changes are <b>lost</b>."
    },
    "dialogProfileChangeConfirm": {
        "message": "OK"
    },
    "profilesSubTab1": {
        "message": "Profile #1"
    },
    "profilesSubTab2": {
        "message": "Profile #2"
    },
    "profilesSubTab3": {
        "message": "Profile #3"
    },
    "profilesSubTab4": {
        "message": "Profile #4"
    },
    "profilesSubTab5": {
        "message": "Profile #5"
    },
    "profilesSubTab6": {
        "message": "Profile #6"
    },
    "profilesPIDModeZeroWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The PID Controlled is in the <b>Passthrough Mode</b>.<br>Please use the <b>CLI</b> to change the PID settings."
    },
    "profilesPIDModeOneWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The PID Controlled is in the legacy <b>PID Mode 1</b>.<br>Please use the <b>CLI</b> to change the PID settings."
    },
    "profilesPIDModeTwoWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The PID Controlled is in the legacy <b>PID Mode 2</b>."
    },
    "profilesPIDModeThreeWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The PID Controlled is in the new <b>PID Mode 3</b> with HSI."
    },
    "profilesPIDModeCustomWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The PID Controller is configured manually with parameters that can't be expressed here.<br>Please use the <b>CLI</b> to change the PID settings."
    },
    "profilesPIDGains": {
        "message": "Axis"
    },
    "profilesProportional": {
        "message": "Proportional"
    },
    "profilesProportionalHelp": {
        "message": "Controls the strength of how tightly the machine tracks the sticks (the Setpoint) and corrects for external influences.<br \/><br \/>Higher value (gains) provide tighter tracking, but can cause overshoot if too high in proportion to the derivative (D-gain). Think of the P-term as the spring on a car.",
        "description": "Proportional Term helpicon message on PID table titlebar"
    },
    "profilesIntegral": {
        "message": "Integral"
    },
    "profilesIntegralHelp": {
        "message": "Controls the strength of how tightly the machine holds the overall rotation rate setpoint.<br>Similar to Proportional, but for longer biases on the craft from the rotation rate setpoint, as well as persistent outside influence, for example steady wind or CG offsets.<br \/><br \/>Higher gains provide tighter tracking of the setpoint (i.e. in constant flips and rolls), but can lead to the craft now being able to follow the setpoint on extremely quick inputs, which can lead to it continuing to rotate after the stick is released. <br>If extremely high in proportion to the D-term, can cause oscillations.",
        "description": "Integral Term helpicon message on PID table titlebar"
    },
    "profilesDerivative": {
        "message": "Derivative"
    },
    "profilesDerivativeHelp": {
        "message": "Controls the strength of damping ANY angular acceleration of the craft, whether from stick inputs or external influences. For stick inputs, the D-term damps the movement to prevent overshooting. For an outside influence (vorticity or wind gust) the D-term damps the disturbance.<br \/><br \/>Higher gains provide more damping and reduce possible overshoot from high P-terms.<br>However, the D-term is VERY sensitive to high frequency gyro vibrations (noise | magnifies by 10x to 100x).<br \/><br \/>High frequency noise in the control loop can cause excessive servo heat and burn out servos if the gyro noise is not filtered properly (see Gyro tab).<br \/><br \/>Think of the D-term as the shock absorber on your car, but with the inherent negative property of magnifying high frequency gyro noise.",
        "description": "Derivative Term helpicon message on PID table titlebar"
    },
    "profilesFeedforward": {
        "message": "Feedforward"
    },
    "profilesFeedforwardHelp": {
        "message": "This is an additional pushing term based on stick input. FF helps the P-term push the craft for commanded stick moves, does not react to any helicopter movements though.<br \/><br \/>The FF-term pushes based on the difference between the commanded Setpoint (deg\/sec). <br \/><br \/>Higher values (gains) will result in a sharper response to stick input.<br>Too high of values may result in overshoot, as well as strikeback at the end of control inputs.<br>Too low or zero (0) values will result in a slow and delayed response to stick inputs, as well as continued rotation after the stick is released.",
        "description": "Feedforward Term helpicon message on PID table titlebar"
    },
    "profilesBoost": {
        "message": "Boost"
    },
    "profilesBoostHelp": {
        "message": "This is an additional boost on the feedforward, based on the derivative of the setpoint. An increase of Boost can make the model's reaction sharper, without he drawbacks of high Proportional or Feedforward gains."
    },
    "profilesCopyProfile": {
        "message": "Copy profile"
    },
    "profilesResetProfile": {
        "message": "Reset to defaults"
    },
    "profilesActivateProfile": {
        "message": "Loaded Profile: <strong class=\"message-positive\">$1</strong>"
    },
    "receiverSelection": {
        "message": "Receiver Type"
    },
    "receiverSettings": {
        "message": "Receiver Settings"
    },
    "receiverProtocol": {
        "message": "Receiver Protocol"
    },
    "receiverHelpProtocol": {
        "message": "Select the protocol that the receiver is using"
    },
    "receiverSerialHalfDuplex": {
        "message": "One-wire Communication (Half-Duplex)"
    },
    "receiverSerialInverted": {
        "message": "Inverted Serial Signaling"
    },
    "receiverSerialPinSwap": {
        "message": "Pin Swap (Swap Rx and Tx pins)"
    },
    "receiverStickCenter": {
        "message": "Stick Center"
    },
    "receiverHelpStickCenter": {
        "message": "The value of stick (channel) center in µs. Usually 1500µs or 1520µs."
    },
    "receiverStickDeflection": {
        "message": "Stick Maximum Travel"
    },
    "receiverHelpStickDeflection": {
        "message": "The maximum value (in µs) for stick deflection from the center, for RPY."
    },
    "receiverArmingThrottle": {
        "message": "Throttle Channel limit for arming"
    },
    "receiverHelpArmingThrottle": {
        "message": "The channel value (in µs) under which arming is allowed"
    },
    "receiverZeroThrottle": {
        "message": "Throttle Channel value for 0% throttle"
    },
    "receiverHelpZeroThrottle": {
        "message": "The channel value (in µs) for the throttle channel to be considered 0%"
    },
    "receiverFullThrottle": {
        "message": "Throttle Channel value for 100% throttle"
    },
    "receiverHelpFullThrottle": {
        "message": "The channel value (in µs) for the throttle channel to be considered 100%"
    },
    "receiverCyclicDeadband": {
        "message": "Cyclic Deadband"
    },
    "receiverHelpCyclicDeadband": {
        "message": "These are values (in µs) by how much RC input can be different before it's considered non-zero. For transmitters with jitter on outputs, this value can be increased if rc inputs twitch while idle."
    },
    "receiverYawDeadband": {
        "message": "Yaw Deadband"
    },
    "receiverHelpYawDeadband": {
        "message": "These are values (in µs) by how much RC input can be different before it's considered non-zero. For transmitters with jitter on outputs, this value can be increased if rc inputs twitch while idle. <strong>This setting is for Yaw only.</strong>"
    },
    "receiverTelemetrySettings": {
        "message": "Telemetry Settings"
    },
    "receiverTelemetryEnabled": {
        "message": "Enable Telemetry"
    },
    "receiverTelemetryHalfDuplex": {
        "message": "One-wire Telemetry Communication"
    },
    "receiverTelemetryInverted": {
        "message": "Inverted Telemetry Signaling"
    },
    "receiverTelemetryPinSwap": {
        "message": "Telemetry Pin Swap (Swap Rx and Tx pins)"
    },
    "receiverCrsfTelemetryMode": {
        "message": "Enable CRSF Custom Telemetry"
    },
    "receiverCrsfTelemetryRate": {
        "message": "Telemetry Rate"
    },
    "receiverCrsfTelemetryRatio": {
        "message": "Telemetry Ratio"
    },
    "receiverHelpCrsfTelemetryMode": {
        "message": "Enables the Custom Rotorflight telemetry with ELRS. Requires a Lua script in the Tx for decoding the sensors. Custom telemetry provides a plethora of sensors for helicopter use."
    },
    "receiverHelpCrsfTelemetryRate": {
        "message": "Radio link packet rate for telemetry. Set this to the same value as the ELRS packet rate in the Tx."
    },
    "receiverHelpCrsfTelemetryRatio": {
        "message": "Radio link packet ratio for telemetry. Set this to the same value as the ELRS telemetry ratio in the Tx."
    },
    "receiverTelemetrySensors": {
        "message": "Telemetry Sensors"
    },
    "receiverTelemetrySensor_VOLTAGE": {
        "message": "Battery Voltage"
    },
    "receiverTelemetrySensor_CURRENT": {
        "message": "Battery Current"
    },
    "receiverTelemetrySensor_FUEL_LEVEL": {
        "message": "Battery Charge Level"
    },
    "receiverTelemetrySensor_USED_CAPACITY": {
        "message": "Used Battery Capacity"
    },
    "receiverTelemetrySensor_TEMPERATURE": {
        "message": "FC Temperature"
    },
    "receiverTelemetrySensor_MODE": {
        "message": "Flight Mode"
    },
    "receiverTelemetrySensor_PITCH": {
        "message": "Pitch angle (attitude)"
    },
    "receiverTelemetrySensor_ROLL": {
        "message": "Roll angle (attitude)"
    },
    "receiverTelemetrySensor_HEADING": {
        "message": "Heading"
    },
    "receiverTelemetrySensor_ACC_X": {
        "message": "Accelerometer X-axis"
    },
    "receiverTelemetrySensor_ACC_Y": {
        "message": "Accelerometer Y-axis"
    },
    "receiverTelemetrySensor_ACC_Z": {
        "message": "Accelerometer Z-axis"
    },
    "receiverTelemetrySensor_ALTITUDE": {
        "message": "Altitude"
    },
    "receiverTelemetrySensor_VARIO": {
        "message": "Vario"
    },
    "receiverTelemetrySensor_LAT_LONG": {
        "message": "GPS Latitide & Longitude"
    },
    "receiverTelemetrySensor_GROUND_SPEED": {
        "message": "GPS Ground Speed"
    },
    "receiverTelemetrySensor_DISTANCE": {
        "message": "GPS Distance"
    },
    "receiverTelemetrySensor_ESC_CURRENT": {
        "message": "ESC Current"
    },
    "receiverTelemetrySensor_ESC_VOLTAGE": {
        "message": "ESC Voltage"
    },
    "receiverTelemetrySensor_ESC_RPM": {
        "message": "ESC RPM"
    },
    "receiverTelemetrySensor_ESC_TEMPERATURE": {
        "message": "ESC Temperature"
    },
    "receiverTelemetrySensor_ADJUSTMENT": {
        "message": "Adjustment Function"
    },
    "receiverTelemetrySensor_GOV_MODE": {
        "message": "Governor Mode"
    },
    "receiverTelemetryGroup_DEBUG": {
        "message": "Debug"
    },
    "receiverTelemetryGroup_SYSTEM": {
        "message": "System"
    },
    "receiverTelemetryGroup_GPS": {
        "message": "GPS"
    },
    "receiverTelemetryGroup_CONTROL": {
        "message": "Control"
    },
    "receiverTelemetryGroup_PROFILE": {
        "message": "Profile"
    },
    "receiverTelemetryGroup_RPM": {
        "message": "RPM"
    },
    "receiverTelemetryGroup_BATTERY": {
        "message": "Battery"
    },
    "receiverTelemetryGroup_TEMPERATURE": {
        "message": "Temperature"
    },
    "receiverTelemetryGroup_ESC1": {
        "message": "ESC #1"
    },
    "receiverTelemetryGroup_ESC2": {
        "message": "ESC #2"
    },
    "receiverTelemetryGroup_BARO": {
        "message": "Barometer"
    },
    "receiverTelemetryGroup_GYRO": {
        "message": "Gyro"
    },
    "receiverTelemetryGroup_STATUS": {
        "message": "Status"
    },
    "receiverTelemetryGroup_CURRENT": {
        "message": "Current"
    },
    "receiverTelemetryGroup_VOLTAGE": {
        "message": "Voltage"
    },
    "receiverCrsfTelemetrySensor_HEARTBEAT": {
        "message": "Heartbeat"
    },
    "receiverCrsfTelemetrySensor_BATTERY": {
        "message": "Battery"
    },
    "receiverCrsfTelemetrySensor_BATTERY_VOLTAGE": {
        "message": "Battery Voltage"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CURRENT": {
        "message": "Battery Current"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CONSUMPTION": {
        "message": "Battery Consumption"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CHARGE_LEVEL": {
        "message": "Battery Charge Level"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CELL_COUNT": {
        "message": "Battery Cell Count"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CELL_VOLTAGE": {
        "message": "Battery Cell Voltage"
    },
    "receiverCrsfTelemetrySensor_BATTERY_CELL_VOLTAGES": {
        "message": "Battery Cell Voltages"
    },
    "receiverCrsfTelemetrySensor_CONTROL": {
        "message": "Control (hi-res)"
    },
    "receiverCrsfTelemetrySensor_PITCH_CONTROL": {
        "message": "Pitch Control"
    },
    "receiverCrsfTelemetrySensor_ROLL_CONTROL": {
        "message": "Roll Control"
    },
    "receiverCrsfTelemetrySensor_YAW_CONTROL": {
        "message": "Yaw Control"
    },
    "receiverCrsfTelemetrySensor_COLLECTIVE_CONTROL": {
        "message": "Collective Control"
    },
    "receiverCrsfTelemetrySensor_THROTTLE_CONTROL": {
        "message": "Throttle Control"
    },
    "receiverCrsfTelemetrySensor_ESC_DATA": {
        "message": "ESC Data"
    },
    "receiverCrsfTelemetrySensor_ESC_VOLTAGE": {
        "message": "ESC Voltage"
    },
    "receiverCrsfTelemetrySensor_ESC_CURRENT": {
        "message": "ESC Current"
    },
    "receiverCrsfTelemetrySensor_ESC_CAPACITY": {
        "message": "ESC Capacity"
    },
    "receiverCrsfTelemetrySensor_ESC_ERPM": {
        "message": "ESC ERPM"
    },
    "receiverCrsfTelemetrySensor_ESC_POWER": {
        "message": "ESC Power"
    },
    "receiverCrsfTelemetrySensor_ESC_THROTTLE": {
        "message": "ESC Throttle"
    },
    "receiverCrsfTelemetrySensor_ESC_TEMP1": {
        "message": "ESC Temp 1"
    },
    "receiverCrsfTelemetrySensor_ESC_TEMP2": {
        "message": "ESC Temp 2"
    },
    "receiverCrsfTelemetrySensor_ESC_BEC_VOLTAGE": {
        "message": "ESC BEC Voltage"
    },
    "receiverCrsfTelemetrySensor_ESC_BEC_CURRENT": {
        "message": "ESC BEC Current"
    },
    "receiverCrsfTelemetrySensor_ESC_STATUS": {
        "message": "ESC Status"
    },
    "receiverCrsfTelemetrySensor_ESC_MODEL": {
        "message": "ESC Model"
    },
    "receiverCrsfTelemetrySensor_ESC_VOLTAGE": {
        "message": "ESC Voltage"
    },
    "receiverCrsfTelemetrySensor_BEC_VOLTAGE": {
        "message": "BEC Voltage"
    },
    "receiverCrsfTelemetrySensor_BUS_VOLTAGE": {
        "message": "Bus Voltage"
    },
    "receiverCrsfTelemetrySensor_MCU_VOLTAGE": {
        "message": "MCU Voltage"
    },
    "receiverCrsfTelemetrySensor_ESC_CURRENT": {
        "message": "ESC Current"
    },
    "receiverCrsfTelemetrySensor_BEC_CURRENT": {
        "message": "BEC Current"
    },
    "receiverCrsfTelemetrySensor_BUS_CURRENT": {
        "message": "Bus Current"
    },
    "receiverCrsfTelemetrySensor_MCU_CURRENT": {
        "message": "MCU Current"
    },
    "receiverCrsfTelemetrySensor_ESC_TEMP": {
        "message": "ESC Temp"
    },
    "receiverCrsfTelemetrySensor_BEC_TEMP": {
        "message": "BEC Temp"
    },
    "receiverCrsfTelemetrySensor_MCU_TEMP": {
        "message": "MCU Temp"
    },
    "receiverCrsfTelemetrySensor_AIR_TEMP": {
        "message": "Air Temp"
    },
    "receiverCrsfTelemetrySensor_MOTOR_TEMP": {
        "message": "Motor Temp"
    },
    "receiverCrsfTelemetrySensor_BATTERY_TEMP": {
        "message": "Battery Temp"
    },
    "receiverCrsfTelemetrySensor_EXHAUST_TEMP": {
        "message": "Exhaust Temp"
    },
    "receiverCrsfTelemetrySensor_HEADING": {
        "message": "Heading"
    },
    "receiverCrsfTelemetrySensor_ALTITUDE": {
        "message": "Altitude"
    },
    "receiverCrsfTelemetrySensor_VARIOMETER": {
        "message": "Variometer"
    },
    "receiverCrsfTelemetrySensor_HEADSPEED": {
        "message": "Headspeed"
    },
    "receiverCrsfTelemetrySensor_TAILSPEED": {
        "message": "Tailspeed"
    },
    "receiverCrsfTelemetrySensor_MOTOR_RPM": {
        "message": "Motor RPM"
    },
    "receiverCrsfTelemetrySensor_TRANS_RPM": {
        "message": "Transmission RPM"
    },
    "receiverCrsfTelemetrySensor_ATTITUDE": {
        "message": "Attitude (hi-res)"
    },
    "receiverCrsfTelemetrySensor_ATTITUDE_PITCH": {
        "message": "Attitude Pitch"
    },
    "receiverCrsfTelemetrySensor_ATTITUDE_ROLL": {
        "message": "Attitude Roll"
    },
    "receiverCrsfTelemetrySensor_ATTITUDE_YAW": {
        "message": "Attitude Yaw"
    },
    "receiverCrsfTelemetrySensor_ACCEL": {
        "message": "Accelerometer (hi-res)"
    },
    "receiverCrsfTelemetrySensor_ACCEL_X": {
        "message": "Accelerometer X-axis"
    },
    "receiverCrsfTelemetrySensor_ACCEL_Y": {
        "message": "Accelerometer Y-axis"
    },
    "receiverCrsfTelemetrySensor_ACCEL_Z": {
        "message": "Accelerometer Z-axis"
    },
    "receiverCrsfTelemetrySensor_GPS": {
        "message": "GPS"
    },
    "receiverCrsfTelemetrySensor_GPS_SATS": {
        "message": "GPS Sats"
    },
    "receiverCrsfTelemetrySensor_GPS_PDOP": {
        "message": "GPS PDOP"
    },
    "receiverCrsfTelemetrySensor_GPS_HDOP": {
        "message": "GPS HDOP"
    },
    "receiverCrsfTelemetrySensor_GPS_VDOP": {
        "message": "GPS VDOP"
    },
    "receiverCrsfTelemetrySensor_GPS_COORD": {
        "message": "GPS Coord"
    },
    "receiverCrsfTelemetrySensor_GPS_ALTITUDE": {
        "message": "GPS Altitude"
    },
    "receiverCrsfTelemetrySensor_GPS_HEADING": {
        "message": "GPS Heading"
    },
    "receiverCrsfTelemetrySensor_GPS_GROUNDSPEED": {
        "message": "GPS Groundspeed"
    },
    "receiverCrsfTelemetrySensor_GPS_HOME_DISTANCE": {
        "message": "GPS Home Distance"
    },
    "receiverCrsfTelemetrySensor_GPS_HOME_DIRECTION": {
        "message": "GPS Home Direction"
    },
    "receiverCrsfTelemetrySensor_GPS_DATE_TIME": {
        "message": "GPS Date Time"
    },
    "receiverCrsfTelemetrySensor_LOAD": {
        "message": "Load"
    },
    "receiverCrsfTelemetrySensor_CPU_LOAD": {
        "message": "CPU Load"
    },
    "receiverCrsfTelemetrySensor_SYS_LOAD": {
        "message": "SYS Load"
    },
    "receiverCrsfTelemetrySensor_RT_LOAD": {
        "message": "RT Load"
    },
    "receiverCrsfTelemetrySensor_MODEL_ID": {
        "message": "Model Id"
    },
    "receiverCrsfTelemetrySensor_FLIGHT_MODE": {
        "message": "Flight Mode"
    },
    "receiverCrsfTelemetrySensor_ARMING_FLAGS": {
        "message": "Arming Flags"
    },
    "receiverCrsfTelemetrySensor_ARMING_DISABLE_FLAGS": {
        "message": "Arming Disable Flags"
    },
    "receiverCrsfTelemetrySensor_RESCUE_STATE": {
        "message": "Rescue State"
    },
    "receiverCrsfTelemetrySensor_GOVERNOR_STATE": {
        "message": "Governor State"
    },
    "receiverCrsfTelemetrySensor_GOVERNOR_FLAGS": {
        "message": "Governor Flags"
    },
    "receiverCrsfTelemetrySensor_PID_PROFILE": {
        "message": "PID Profile"
    },
    "receiverCrsfTelemetrySensor_RATES_PROFILE": {
        "message": "Rates Profile"
    },
    "receiverCrsfTelemetrySensor_BATTERY_PROFILE": {
        "message": "Battery Profile"
    },
    "receiverCrsfTelemetrySensor_LED_PROFILE": {
        "message": "LED Profile"
    },
    "receiverCrsfTelemetrySensor_ADJFUNC": {
        "message": "Adjustment Function"
    },
    "receiverCrsfTelemetrySensor_DEBUG_0": {
        "message": "Debug 0"
    },
    "receiverCrsfTelemetrySensor_DEBUG_1": {
        "message": "Debug 1"
    },
    "receiverCrsfTelemetrySensor_DEBUG_2": {
        "message": "Debug 2"
    },
    "receiverCrsfTelemetrySensor_DEBUG_3": {
        "message": "Debug 3"
    },
    "receiverCrsfTelemetrySensor_DEBUG_4": {
        "message": "Debug 4"
    },
    "receiverCrsfTelemetrySensor_DEBUG_5": {
        "message": "Debug 5"
    },
    "receiverCrsfTelemetrySensor_DEBUG_6": {
        "message": "Debug 6"
    },
    "receiverCrsfTelemetrySensor_DEBUG_7": {
        "message": "Debug 7"
    },
     "receiverBars": {
        "message": "Receiver Channels"
    },
    "receiverBarsHelp": {
        "message": "Shows the raw RC channels from the receiver exactly the way they are received. Please select the channel map, i.e. the corrent function for each RC channel."
    },
    "receiverChannelOrder": {
        "message": "Channel Order Preset"
    },
    "receiverChannelDefaultOption": {
        "message": "Default"
    },
    "receiverHelpChannelOrder": {
        "message": "Select one of the presets from the dropdown menu, or enter your own channel order."
    },
    "receiverButtonBind": {
        "message": "Bind Receiver"
    },
    "receiverButtonBindMessage": {
        "message": "Bind request sent to the flight controller."
    },
    "receiverButtonSticks": {
        "message": "Control sticks"
    },
    "receiverModelPreview": {
        "message": "Preview"
    },
    "receiverMspWarningText": {
        "message": "These sticks allow Rotorflight to be armed and tested without a transmitter or receiver being present. However, <strong>this feature is not intended for flight and rotor blades must not be attached.</strong><br /><br />This feature does not guarantee reliable control of your craft. <strong>Serious injury is likely to result if rotor blades are left on.</strong>"
    },
    "receiverMspEnableButton": {
        "message": "Enable controls"
    },
    "auxiliaryHelp": {
        "message": "Configure modes here using a combination of ranges and/or links to other modes (links supported on BF 4.0 and later). Use <strong>ranges</strong> to define the switches on your transmitter and corresponding mode assignments. A receiver channel that gives a reading between a range min/max will activate the mode. Use a <strong>link</strong> to activate a mode when another mode is activated. <strong>Exceptions:</strong> ARM cannot be linked to or from another mode, modes cannot be linked to other modes that are configured with a link (chained links). Multiple ranges/links can be used to activate any mode. If there is more than one range/link defined for a mode, each of them can be set to <strong>AND</strong> or <strong>OR</strong>. A mode will be activated when:<br />- ALL <strong>AND</strong> ranges/links are active; OR<br />- at least one <strong>OR</strong> range/link is active.<br /><br />Remember to save your settings using the Save button."
    },
    "auxiliaryToggleUnused": {
        "message": "Hide unused modes"
    },
    "auxiliaryMin": {
        "message": "Min"
    },
    "auxiliaryMax": {
        "message": "Max"
    },
    "auxiliaryDisabled": {
        "message": "(DISABLED)",
        "descripton": "Text to add to the ARM mode (maybe others in the future) in the MODES TAB when it has been disabled for some external reason"
    },
    "auxiliaryAddRange": {
        "message": "Add Range"
    },
    "auxiliaryAddLink": {
        "message": "Add Link"
    },
    "auxiliaryAlwaysChannelSelect": {
        "message": "ALWAYS"
    },
    "auxiliaryAutoChannelSelect": {
        "message": "AUTO"
    },
    "auxiliaryModeLogicOR": {
        "message": "OR"
    },
    "auxiliaryModeLogicAND": {
        "message": "AND"
    },
    "adjustmentsHelp": {
        "message": "Configure adjustment switches. See the 'in-flight adjustments' section of the manual for details. The changes that adjustment functions make are not saved automatically."
    },
    "adjustmentSlotsHelp": {
        "message": "There are 4 slots. Each switch used to concurrently make adjustments requires exclusive use of a slot."
    },
    "adjustmentsExamples": {
        "message": "Examples:"
    },
    "adjustmentsExample1": {
        "message": "Use a three position switch on AUX1 to select between Pitch/Roll P, I and D and another three position switch on AUX2 to increase or decrease the value when held up or down."
    },
    "adjustmentsExample2": {
        "message": "Use a three position switch on AUX4 to select enable Rate Profile Selection via the same three position switch on the same channel."
    },
    "adjustmentsColumnMode": {
        "message": "Mode"
    },
    "adjustmentsColumnChannels": {
        "message": "Channels"
    },
    "adjustmentsColumnSliders": {
        "message": "Range Sliders"
    },
    "adjustmentsColumnRanges": {
        "message": "Value Ranges"
    },
    "adjustmentsTypeOff": {
        "message": "Off"
    },
    "adjustmentsTypeMapped": {
        "message": "Mapped"
    },
    "adjustmentsTypeStepped": {
        "message": "Stepped"
    },
    "adjustmentEnableChannel": {
        "message": "Enable Channel"
    },
    "adjustmentValueChannel": {
        "message": "Value Channel"
    },
    "adjustmentFunctionValue": {
        "message": "Value"
    },
    "adjustmentRangeEnable": {
        "message": "Ena:"
    },
    "adjustmentRangeInc": {
        "message": "Inc:"
    },
    "adjustmentRangeDec": {
        "message": "Dec:"
    },
    "adjustmentRangeValue": {
        "message": "Value:"
    },
    "adjustmentRangeStep": {
        "message": "Step:"
    },
    "adjustmentsMin": {
        "message": "Min"
    },
    "adjustmentsMax": {
        "message": "Max"
    },
    "adjustmentsRange": {
        "message": "Active"
    },
    "adjustmentsRangeInc": {
        "message": "Increase"
    },
    "adjustmentsRangeDec": {
        "message": "Decrease"
    },
    "adjustmentsRangeScale": {
        "message": "Scale"
    },
    "adjustmentsFunctionNone": {
        "message": "No changes"
    },
    "adjustmentsFunctionRateProfile": {
        "message": "Rate Profile Selection"
    },
    "adjustmentsFunctionPIDProfile": {
        "message": "Profile Selection"
    },
    "adjustmentsFunctionLEDProfile": {
        "message": "LED Profile Selection"
    },
    "adjustmentsFunctionOSDProfile": {
        "message": "OSD Profile Selection"
    },
    "adjustmentsFunctionPitchRate": {
        "message": "Pitch Rate"
    },
    "adjustmentsFunctionRollRate": {
        "message": "Roll Rate"
    },
    "adjustmentsFunctionYawRate": {
        "message": "Yaw Rate"
    },
    "adjustmentsFunctionPitchRCRate": {
        "message": "Pitch RC Rate"
    },
    "adjustmentsFunctionRollRCRate": {
        "message": "Roll RC Rate"
    },
    "adjustmentsFunctionYawRCRate": {
        "message": "Yaw RC Rate"
    },
    "adjustmentsFunctionPitchRCExpo": {
        "message": "Pitch RC Expo"
    },
    "adjustmentsFunctionRollRCExpo": {
        "message": "Roll RC Expo"
    },
    "adjustmentsFunctionYawRCExpo": {
        "message": "Yaw RC Expo"
    },
    "adjustmentsFunctionPitchP": {
        "message": "Pitch P-gain"
    },
    "adjustmentsFunctionPitchI": {
        "message": "Pitch I-gain"
    },
    "adjustmentsFunctionPitchD": {
        "message": "Pitch D-gain"
    },
    "adjustmentsFunctionPitchF": {
        "message": "Pitch F-gain"
    },
    "adjustmentsFunctionRollP": {
        "message": "Roll P-gain"
    },
    "adjustmentsFunctionRollI": {
        "message": "Roll I-gain"
    },
    "adjustmentsFunctionRollD": {
        "message": "Roll D-gain"
    },
    "adjustmentsFunctionRollF": {
        "message": "Roll F-gain"
    },
    "adjustmentsFunctionYawP": {
        "message": "Yaw P-gain"
    },
    "adjustmentsFunctionYawI": {
        "message": "Yaw I-gain"
    },
    "adjustmentsFunctionYawD": {
        "message": "Yaw D-gain"
    },
    "adjustmentsFunctionYawF": {
        "message": "Yaw F-gain"
    },
    "adjustmentsFunctionYawCWStopGain": {
        "message": "Yaw CW Stop Gain"
    },
    "adjustmentsFunctionYawCCWStopGain": {
        "message": "Yaw CCW Stop Gain"
    },
    "adjustmentsFunctionYawCyclicFF": {
        "message": "Yaw Cyclic Precomp"
    },
    "adjustmentsFunctionYawCollectiveFF": {
        "message": "Yaw Collective Precomp"
    },
    "adjustmentsFunctionYawCollectiveDyn": {
        "message": "Yaw Collective Impulse FF"
    },
    "adjustmentsFunctionYawCollectiveDecay": {
        "message": "Yaw Collective Impulse FF Decay"
    },
    "adjustmentsFunctionPitchCollectiveFF": {
        "message": "Pitch Collective Precomp"
    },
    "adjustmentsFunctionPitchGyroCutoff": {
        "message": "Pitch Gyro Cutoff"
    },
    "adjustmentsFunctionRollGyroCutoff": {
        "message": "Roll Gyro Cutoff"
    },
    "adjustmentsFunctionYawGyroCutoff": {
        "message": "Yaw Gyro Cutoff"
    },
    "adjustmentsFunctionPitchDtermCutoff": {
        "message": "Pitch D-term Cutoff"
    },
    "adjustmentsFunctionRollDtermCutoff": {
        "message": "Roll D-term Cutoff"
    },
    "adjustmentsFunctionYawDtermCutoff": {
        "message": "Yaw D-term Cutoff"
    },
    "adjustmentsFunctionRescueClimbCollective": {
        "message": "Rescue Climb Collective"
    },
    "adjustmentsFunctionRescueHoverCollective": {
        "message": "Rescue Hover Collective"
    },
    "adjustmentsFunctionRescueHoverAltitude": {
        "message": "Rescue Hover Altitude"
    },
    "adjustmentsFunctionRescueAltP": {
        "message": "Rescue Altitude P-gain"
    },
    "adjustmentsFunctionRescueAltI": {
        "message": "Rescue Altitude I-gain"
    },
    "adjustmentsFunctionRescueAltD": {
        "message": "Rescue Altitude D-gain"
    },
    "adjustmentsFunctionAngleLevelGain": {
        "message": "Angle Level Gain"
    },
    "adjustmentsFunctionHorizonLevelGain": {
        "message": "Horizon Level Gain"
    },
    "adjustmentsFunctionAcroTrainerGain": {
        "message": "Acro Trainer Gain"
    },
    "adjustmentsFunctionGovernorGain": {
        "message": "Governor PID-gain"
    },
    "adjustmentsFunctionGovernorP": {
        "message": "Governor P-gain"
    },
    "adjustmentsFunctionGovernorI": {
        "message": "Governor I-gain"
    },
    "adjustmentsFunctionGovernorD": {
        "message": "Governor D-gain"
    },
    "adjustmentsFunctionGovernorF": {
        "message": "Governor F-gain"
    },
    "adjustmentsFunctionGovernorTTA": {
        "message": "Governor TTA-gain"
    },
    "adjustmentsFunctionGovernorCyclicFF": {
        "message": "Governor Cyclic Precomp"
    },
    "adjustmentsFunctionGovernorCollectiveFF": {
        "message": "Governor Collective Precomp"
    },
    "adjustmentsFunctionPitchB": {
        "message": "Pitch B-gain"
    },
    "adjustmentsFunctionRollB": {
        "message": "Roll B-gain"
    },
    "adjustmentsFunctionYawB": {
        "message": "Yaw B-gain"
    },
    "adjustmentsFunctionPitchO": {
        "message": "Pitch O-gain"
    },
    "adjustmentsFunctionRollO": {
        "message": "Roll O-gain"
    },
    "adjustmentsFunctionCrossCouplingGain": {
        "message": "Cross Coupling Gain"
    },
    "adjustmentsFunctionCrossCouplingRatio": {
        "message": "Cross Coupling Ratio"
    },
    "adjustmentsFunctionCrossCouplingCutoff": {
        "message": "Cross Coupling Cutoff"
    },
    "adjustmentsFunctionAccTrimPitch": {
        "message": "Accelerometer Pitch Trim"
    },
    "adjustmentsFunctionAccTrimRoll": {
        "message": "Accelerometer Roll Trim"
    },
    "servoHelp": {
        "message": "Servo 101<ul><li>First check the servo directions. Check cyclic servos by giving some collective, for example. Reverse servos if needed.</li><li>Level the servo arms by enabling <i> Servo Override</i> and adjusting <i>Center</i>. The servo arm should be perpendicular to the main shaft in this position.</li><li>Adjust <i>Scale</i> so that servo angles are correct. Specify an angle of 30&deg; for a servo under <i>Servo Override</i>. The servo should now move to 30&deg;. If it's less, increase the <i>Scale</i> for that servo. If it's more, decrease it.</li><li>You can limit or extend the servo movement range by adjusting <i>Min</i> or <i>Max</i>. Do this only if there's a mechanical issue, like servo binding. Use the mixer to limit roll/pitch/collective.</li></ul>"
    },
    "servoConfiguration": {
        "message": "Servo Configuration"
    },
    "servoNumber": {
        "message": "Servo"
    },
    "servoMid": {
        "message": "Center"
    },
    "servoMidHelp": {
        "message": "Center position in µs. The servo arm should be level in this position."
    },
    "servoMin": {
        "message": "Min"
    },
    "servoMinHelp": {
        "message": "Lowest point of travel (minimum pulse width). This setting changes the allowed negative servo throw. It is used for avoiding servo arm binding at the negative travel extreme."
    },
    "servoMax": {
        "message": "Max"
    },
    "servoMaxHelp": {
        "message": "Highest point of travel (maximum pulse width). This setting changes the allowed positive servo throw. It is used for avoiding servo arm binding at the positive travel extreme."
    },
    "servoScaleNeg": {
        "message": "Scale neg"
    },
    "servoScaleNegHelp": {
        "message": "Scaling factor on the negative side. Typically 500µs for normal (1520µs) servos, and 250µs for narrow band (760µs) servos. Altering this setting from the default is used for correcting any nonlinearity between the negative and positive throws."
    },
    "servoScalePos": {
        "message": "Scale pos"
    },
    "servoScalePosHelp": {
        "message": "Scaling factor on the positive side. Typically 500µs for normal (1520µs) servos, and 250µs for narrow band (760µs) servos. Altering this setting from the default is used for correcting any nonlinearity between the negative and positive throws."
    },
    "servoRate": {
        "message": "Rate [Hz]"
    },
    "servoRateHelp": {
        "message": "PWM update rate in Hz. For analog servos, set it to 50Hz, as higher values can cause damage. For digital servos, values from 100Hz to 560Hz are typical. Please check the servo data sheet.<br><b>Note</b>: Select <i>Save and reboot</i> to actually change the update rate, as the rate is initialised at boot time."
    },
    "servoSpeed": {
        "message": "Speed [ms]"
    },
    "servoSpeedHelp": {
        "message": "Limits the servo motion speed. Can be used for e.g. retracts. A value of 0 means no limitation. Values between 1-60000 milliseconds specify the time needed for 60&deg; rotation."
    },
    "servoReverse": {
        "message": "Reverse"
    },
    "servoReverseHelp": {
        "message": "Reverse the servo if it's not moving in the right direction."
    },
    "servoGeometryCorrection": {
        "message": "Geo cor"
    },
    "servoGeometryCorrectionHelp": {
        "message": "Enable <i>Geometry Correction</i> for correcting the rotational geometry at the servo movement extremes. Do not use with linear servos."
    },
    "servoSignal": {
        "message": "PWM Signal"
    },
    "servoRateRebootNote": {
        "message": "<span class=\"message-negative\">Warning:</span> Changes to the <i>Servo Rate</i> parameter require System Reboot before taking affect!"
    },
    "servoUnusualLimitsWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The servo <i>Limits</i> are set to unusual values. Please check!"
    },
    "servoUnusualScalesWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The servo <i>Scales</i> are set to unusual values. Please check!"
    },
    "servoUnusualRatesWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The servo <i>Rates</i> are set to unusual values. Please check!"
    },
    "servoUnusualGeometryCorrection": {
        "message": "<span class=\"message-negative\">Warning:</span> The <i>Geometry correction</i> is not equal for all servos. Please check!"
    },
    "servoOverride": {
        "message": "Servo Override"
    },
    "servoOverrideHelp": {
        "message": "Select the servo to be controlled and then move the slider to move the servo arm to the commanded angle."
    },
    "servoEnableOverrideLabel": {
        "message": "<strong>Enable servo override</strong>"
    },
    "servoEnableOverrideText": {
        "message": " <i>Servo override</i> forces the servos to a arbitrary positions for setup purposes. The override values are not saved, and will be reset after a reboot."
    },
    "servoOverrideEnable": {
        "message": "Enable"
    },
    "servoOverrideAngle": {
        "message": "Angle"
    },
    "servoOverrideSlider": {
        "message": ""
    },
    "mixerCustomNote": {
        "message": "<span class=\"message-negative\">Warning:</span> The Mixer is configured with a <strong>custom setup</strong> that can't be presented in the GUI. Any configuration changes must be done in the CLI, with the <code>mixer</code> command."
    },
    "mixerRulesNote": {
        "message": "<span class=\"message-negative\">Warning:</span> The Mixer is configured with <strong>custom</strong> rules. Any rule changes must be done in the CLI, with the <code>mixer rule</code> command."
    },
    "mixerBidirNote": {
        "message": "<span class=\"message-negative\">Warning:</span> <i>Bidirectional tail motor</i> is an experimental feature that requires additional settings in the CLI."
    },
    "mixerRebootNote": {
        "message": "<span class=\"message-negative\">Warning:</span> Some settings require System Reboot to take affect!"
    },
    "mixerMainRotorSettings": {
        "message": "Main Rotor Settings"
    },
    "mixerMainRotorDirection": {
        "message": "Main Rotor Direction"
    },
    "mixerMainRotorDirectionHelp": {
        "message": "Looking from the top of the helicopter, what direction is the main rotor turning? For the majority of helicopters this is clockwise."
    },
    "mixerClockwise": {
        "message": "Clockwise"
    },
    "mixerCounterClockwise": {
        "message": "Counter-Clockwise"
    },
    "mixerSwashType": {
        "message": "Swashplate Type"
    },
    "mixerSwashTypeHelp": {
        "message": "<strong>None:</strong> The mixer is disabled. Custom mixing rules must be set in the CLI. <br><br><strong>Direct:</strong> No mixing, controls are passed through the mixer unchanged for external mixing.<br><br><strong>CCPM:</strong> Cyclic-Collective Pitch Mixing. For cyclic-pitch helicopters with three swashplate servos, at 120&deg;, 135&deg;, or 140&deg; angle.<br><br><strong>FPM:</strong> Fixed Pitch Mixing. For fixed-pitch helicopters with two swashplate servos at 90&deg; angle, either in L or V configuration."
    },
    "mixerSwashType0": {
        "message": "None"
    },
    "mixerSwashType1": {
        "message": "Direct"
    },
    "mixerSwashType2": {
        "message": "CCPM 120&deg;"
    },
    "mixerSwashType3": {
        "message": "CCPM 135&deg;"
    },
    "mixerSwashType4": {
        "message": "CCPM 140&deg;"
    },
    "mixerSwashType5": {
        "message": "FPM 90&deg; L"
    },
    "mixerSwashType6": {
        "message": "FPM 90&deg; V"
    },
    "mixerSwashType7": {
        "message": ""
    },
    "mixerSwashType8": {
        "message": ""
    },
    "mixerSwashType9": {
        "message": ""
    },
    "mixerDirectionNormal": {
        "message": "Normal"
    },
    "mixerDirectionReverse": {
        "message": "Reverse"
    },
    "mixerElevatorDirection": {
        "message": "Elevator Control Direction"
    },
    "mixerElevatorDirectionHelp": {
        "message": "Depending on the elevator servo position and the head design, the direction may be reversed."
    },
    "mixerAileronDirection": {
        "message": "Aileron Control Direction"
    },
    "mixerAileronDirectionHelp": {
        "message": "Depending on the aileron servo position and the head design, the direction may be reversed."
    },
    "mixerCollectiveDirection": {
        "message": "Collective Control Direction"
    },
    "mixerCollectiveDirectionHelp": {
        "message": "Depending on the blade grip control arm position, the collective direction may be reversed. Usually trailing edge control has reversed direction."
    },
    "mixerGeometrySettings": {
        "message": "Main Rotor Geometry"
    },
    "mixerCyclicCalibration": {
        "message": "Cyclic calibration [%]"
    },
    "mixerCyclicCalibrationHelp": {
        "message": "Adjust the cyclic gain to match the mechanical gain in the head design."
    },
    "mixerCollectiveCalibration": {
        "message": "Collective calibration [%]"
    },
    "mixerCollectiveCalibrationHelp": {
        "message": "Adjust the collective gain to match the mechanical gain in the head design."
    },
    "mixerCollectiveGeoCorrection": {
        "message": "Collective Geometry Correction [%]"
    },
    "mixerCollectiveGeoCorrectionHelp": {
        "message": "Adjust until the collective positive and negative deflections are equal."
    },
    "mixerTotalPitchLimit": {
        "message": "Total blade pitch limit [&deg;]"
    },
    "mixerTotalPitchLimitHelp": {
        "message": "Maximum amount of total cyclic + collective blade pitch."
    },
    "mixerCyclicLimit": {
        "message": "Cyclic blade pitch limit [&deg;]"
    },
    "mixerCyclicLimitHelp": {
        "message": "Maximum amount of cyclic blade pitch."
    },
    "mixerCollectiveLimit": {
        "message": "Collective blade pitch limit [&deg;]"
    },
    "mixerCollectiveLimitHelp": {
        "message": "Maximum amount of collective blade pitch."
    },
    "mixerSwashRing": {
        "message": "Swashring"
    },
    "mixerSwashRingHelp": {
        "message": "The swashring limits the maximum angle the swashplate can reach in order to prevent binding. Pitch and Roll axis should be configured individually (via the Mixer input and scaling) to the desired pitch angles (without binding). If however, both the maximum Pitch and Roll are commanded <strong>at the same time</strong>, the Swashplate will have to deflect to a larger angle than either axis individually. This may result in the swashplate binding on the main shaft.<br><br>Increasing the value of Swashring will limit the maximum Swashplate angle when both Pitch and Roll are maximum."
    },
    "mixerSwashPhase": {
        "message": "Swashplate phase angle [&deg;]"
    },
    "mixerSwashPhaseHelp": {
        "message": "The phase offset for the swashplate controls."
    },
    "mixerSwashRollTrim": {
        "message": "Roll trim [%]"
    },
    "mixerSwashPitchTrim": {
        "message": "Pitch trim [%]"
    },
    "mixerSwashCollectiveTrim": {
        "message": "Collective trim [%]"
    },
    "mixerSwashTrimHelp": {
        "message": "Trim for swashplate linkages. Use only if the linkages are not adjustable."
    },
    "mixerTailRotorSettings": {
        "message": "Tail Rotor Settings"
    },
    "mixerTailRotorMode": {
        "message": "Tail rotor type"
    },
    "mixerTailRotorModeHelp": {
        "message": "<strong>Variable pitch:</strong> Variable pitch tail controlled by a tail servo (Servo#4). <br><strong>Motorised:</strong> The tail has a separate motor (Motor#2) for controlling the yaw.<br><strong>Bi-directional:</strong> Motorised tail operating in bi-directional mode (experimental)."
    },
    "mixerTailVariablePitch": {
        "message": "Variable pitch"
    },
    "mixerTailMotorized": {
        "message": "Motorised"
    },
    "mixerTailBidirectional": {
        "message": "Bidirectional"
    },
    "mixerTailRotorDirection": {
        "message": "Yaw Control Direction"
    },
    "mixerTailRotorDirectionHelp": {
        "message": "Depending on the tail rotor direction and ESC/servo configuration, the yaw direction may be reversed."
    },
    "mixerTailRotorCalibration": {
        "message": "Yaw calibration [%]"
    },
    "mixerTailRotorCalibrationHelp": {
        "message": "Adjust the yaw gain to match the mechanical gain. Usually around 50-150% for servo driven tails, but can be wildly different for motorised tail rotors."
    },
    "mixerTailRotorMinYaw": {
        "message": "CW Yaw Blade Angle Limit"
    },
    "mixerTailRotorMinYawHelp": {
        "message": "An angle limit for clockwise yaw."
    },
    "mixerTailRotorMaxYaw": {
        "message": "CCW Yaw Blade Angle Limit"
    },
    "mixerTailRotorMaxYawHelp": {
        "message": "An angle limit for counter-clockwise yaw."
    },
    "mixerTailMotorMinYaw": {
        "message": "CW yaw limit [%]"
    },
    "mixerTailMotorMinYawHelp": {
        "message": "A limit for clockwise yaw."
    },
    "mixerTailMotorMaxYaw": {
        "message": "CCW yaw limit [%]"
    },
    "mixerTailMotorMaxYawHelp": {
        "message": "A limit for counter-clockwise yaw."
    },
    "mixerTailMotorIdle": {
        "message": "Motor idle throttle [%]"
    },
    "mixerTailMotorIdleHelp": {
        "message": "This is the minimum throttle signal sent to the tail motor. This should be set just high enough that the motor does not stop"
    },
    "mixerTailRotorCenterTrim": {
        "message": "Center trim for tail rotor [&deg;]"
    },
    "mixerTailRotorCenterTrimHelp": {
        "message": "Set tail rotor trim to achieve zero blade pitch with 0° yaw mixer override."
    },
    "mixerTailMotorCenterTrim": {
        "message": "Center trim for tail motor [%]"
    },
    "mixerTailMotorCenterTrimHelp": {
        "message": "Set tail motor throttle value for zero yaw command."
    },
    "mixerSwashLinkTrim": {
        "message": "Swashplate Trims"
    },
    "mixerInputChannels": {
        "message": "Mixer Control Inputs"
    },
    "mixerInputChannelsHelp": {
        "message": "<strong>Note! This is the right place to limit your controls</strong><br><br>The mixer input rate is for setting the scaling factors to match the mechanical head setup. As every rotor head is different, different scaling values are needed for each setup. <br><strong>Control:</strong> This column contains each of the Stabilized control functions. <br><strong>Minimum:</strong> Set the minimum angle you wish the blade to reach when commanded. <br><strong>Maximum:</strong> Set the maximum angle you wish the blade to reach when commanded. <br><strong>Scaling:</strong> Increase or decrease the scaling value until the helicopter blades match the commanded angle. <br><br><strong>Mixer Input Calibration Process</strong><br><strong>Step 1: </strong>Enable the mixer override by the selector on the 'SYSTEM' tab. The Mixer Override entry will now be visible on this page. <br><strong>Step 2: </strong>Enable the bypass on the Control to be calibrated. <br><strong>Step 3: </strong>Set the Mixer override to an angle (say 10 degrees). <br><strong>Step 4: </strong>Measure the actual blade angle.<br><strong>Step 5: </strong>Set the scaling so the physical blade angle matches the commanded angle."
    },
    "mixerOverrideNote": {
        "message": "<strong>Note.</strong> Mixer Override forces the mixer inputs to arbitrary positions for setup purposes. The override values are not saved, and will be reset in reboot."
    },
    "mixerOverride": {
        "message": "Mixer Override"
    },
    "mixerOverrideHelp": {
        "message": "This feature is used for setting up the rotor and is part of the <strong>Mixer Calibration</strong> process. When the bypass enable is active the mixer can be commanded to the requested positions directly."
    },
    "mixerOverrideEnableSwitch": {
        "message": "<strong>Enable Mixer Override</strong>"
    },
    "mixerOverrideEnableSwitchText": {
        "message": "Mixer Override forces the mixer inputs to arbitrary positions for setup purposes. The override values are not saved, and will be reset in reboot."
    },
    "mixerOverrideEnable": {
        "message": "Enable"
    },
    "mixerOverrideValue": {
        "message": "Value"
    },
    "mixerOverrideSlider": {
        "message": ""
    },
    "mixerOverrideSliderLeftLabel1": {
        "message": "Left"
    },
    "mixerOverrideSliderRightLabel1": {
        "message": "Right"
    },
    "mixerOverrideSliderLeftLabel2": {
        "message": "Backward"
    },
    "mixerOverrideSliderRightLabel2": {
        "message": "Forward"
    },
    "mixerOverrideSliderLeftLabel3": {
        "message": "CW"
    },
    "mixerOverrideSliderRightLabel3": {
        "message": "CCW"
    },
    "mixerOverrideSliderLeftLabel4": {
        "message": "Down"
    },
    "mixerOverrideSliderRightLabel4": {
        "message": "Up"
    },
    "mixerRuleNOP": {
        "message": "-"
    },
    "mixerRuleSet": {
        "message": "Set"
    },
    "mixerRuleAdd": {
        "message": "Add"
    },
    "mixerRuleMul": {
        "message": "Mul"
    },
    "mixerInputName": {
        "message": "Control"
    },
    "mixerInputRate": {
        "message": "Scaling"
    },
    "mixerInputMin": {
        "message": "Minimum"
    },
    "mixerInputMax": {
        "message": "Maximum"
    },
    "mixerInputNone": {
        "message": "-"
    },
    "mixerInputStabilizedRoll": {
        "message": "Roll"
    },
    "mixerInputStabilizedPitch": {
        "message": "Pitch"
    },
    "mixerInputStabilizedYaw": {
        "message": "Yaw"
    },
    "mixerInputStabilizedCollective": {
        "message": "Collective"
    },
    "mixerInputStabilizedThrottle": {
        "message": "Throttle"
    },
    "mixerInputRCCommandRoll": {
        "message": "Commanded Roll"
    },
    "mixerInputRCCommandPitch": {
        "message": "Commanded Pitch"
    },
    "mixerInputRCCommandYaw": {
        "message": "Commanded Yaw"
    },
    "mixerInputRCCommandCollective": {
        "message": "Commanded Collective"
    },
    "mixerInputRCCommandThrottle": {
        "message": "Commanded Throttle"
    },
    "mixerInputRCChannelRoll": {
        "message": "RC Channel Roll"
    },
    "mixerInputRCChannelPitch": {
        "message": "RC Channel Pitch"
    },
    "mixerInputRCChannelYaw": {
        "message": "RC Channel Yaw"
    },
    "mixerInputRCChannelCollective": {
        "message": "RC Channel Collective"
    },
    "mixerInputRCChannelThrottle": {
        "message": "RC Channel Throttle"
    },
    "mixerInputRCChannelAux1": {
        "message": "RC Channel AUX1"
    },
    "mixerInputRCChannelAux2": {
        "message": "RC Channel AUX2"
    },
    "mixerInputRCChannelAux3": {
        "message": "RC Channel AUX3"
    },
    "mixerInputRCChannel9": {
        "message": "RC Channel #9"
    },
    "mixerInputRCChannel10": {
        "message": "RC Channel #10"
    },
    "mixerInputRCChannel11": {
        "message": "RC Channel #11"
    },
    "mixerInputRCChannel12": {
        "message": "RC Channel #12"
    },
    "mixerInputRCChannel13": {
        "message": "RC Channel #13"
    },
    "mixerInputRCChannel14": {
        "message": "RC Channel #14"
    },
    "mixerInputRCChannel15": {
        "message": "RC Channel #15"
    },
    "mixerInputRCChannel16": {
        "message": "RC Channel #16"
    },
    "mixerInputRCChannel17": {
        "message": "RC Channel #17"
    },
    "mixerInputRCChannel18": {
        "message": "RC Channel #18"
    },
    "mixerOutputNone": {
        "message": "-"
    },
    "mixerOutputServo1": {
        "message": "Servo #1"
    },
    "mixerOutputServo2": {
        "message": "Servo #2"
    },
    "mixerOutputServo3": {
        "message": "Servo #3"
    },
    "mixerOutputServo4": {
        "message": "Servo #4"
    },
    "mixerOutputServo5": {
        "message": "Servo #5"
    },
    "mixerOutputServo6": {
        "message": "Servo #6"
    },
    "mixerOutputServo7": {
        "message": "Servo #7"
    },
    "mixerOutputServo8": {
        "message": "Servo #8"
    },
    "mixerOutputMotor1": {
        "message": "Motor #1"
    },
    "mixerOutputMotor2": {
        "message": "Motor #2"
    },
    "mixerOutputMotor3": {
        "message": "Motor #3"
    },
    "mixerOutputMotor4": {
        "message": "Motor #4"
    },
    "dialogMixerResetTitle": {
        "message": "<span class=\"message-negative\">WARNING: Mixer Reset</span>"
    },
    "dialogMixerResetNote": {
        "message": "Selecting a pre-defined Swashplate type will reset any custom Mixer rules to defaults."
    },
    "dialogMixerResetAccept": {
        "message": "Accept"
    },
    "dialogMixerResetRevert": {
        "message": "Revert"
    },
    "gpsHead": {
        "message": "Status"
    },
    "gpsMapHead": {
        "message": "Current GPS location"
    },
    "gpsMapMessage1": {
        "message": "Please check your internet connection"
    },
    "gps3dFix": {
        "message": "3D Fix:"
    },
    "gpsFixYes": {
        "message": "<span class=\"gpsFixTrue\">Fix</span>"
    },
    "gpsFixNo": {
        "message": "<span class=\"gpsFixFalse\">No Fix</span>"
    },
    "gpsFixTrue": {
        "message": "<span class=\"gpsFixTrue\">True</span>"
    },
    "gpsFixFalse": {
        "message": "<span class=\"gpsFixFalse\">False</span>"
    },
    "gpsAltitude": {
        "message": "Altitude:"
    },
    "gpsLat": {
        "message": "Latitude:"
    },
    "gpsLon": {
        "message": "Longitude:"
    },
    "gpsSpeed": {
        "message": "Speed:"
    },
    "gpsSats": {
        "message": "Sats:"
    },
    "gpsDistToHome": {
        "message": "Dist to Home:"
    },
    "gpsSignalStrHead": {
        "message": "Signal Strength"
    },
    "gpsSignalStr": {
        "message": "Signal Strength"
    },
    "gpsSignalSatId": {
        "message": "Sat ID"
    },
    "gpsSignalQty": {
        "message": "Qty"
    },
    "motorsEscProtocol": {
        "message": "ESC Throttle protocol"
    },
    "motorsEscProtocolHelp": {
        "message": "Select your ESC protocol.<br>Traditional helicopter ESCs use PWM. Drone ESCs may use other protocols, like DSHOT. <br>Make sure the protocol is supported by your ESC."
    },
    "motorsEscProtocolDisabled": {
        "message": "Please select a protocol appropriate for your ESCs. $t(escProtocolDisabledMessage.message)"
    },
    "motorsEscTelemetry": {
        "message": "ESC Telemetry"
    },
    "motorsEscTelemetryProtocol": {
        "message": "ESC Telemetry protocol"
    },
    "motorsEscTelemetryProtocolHelp": {
        "message": "Select your ESC Telemetry protocol. The telemetry is transmitted via a separate wire from the ESC."
    },
    "motorsEscTelemetryHalfDuplex": {
        "message": "One-wire Communication (Half-Duplex)"
    },
    "motorsEscTelemetryPinswap": {
        "message": "Pin Swap (Swap Rx and Tx pins)"
    },
    "motorsUnsyncedPwm": {
        "message": "Unsyncronised ESC update"
    },
    "motorsUnsyncedPwmHelp": {
        "message": "ESC PWM is running unsyncronised, separate from the PID loop, at the specified frequency."
    },
    "motorsUnsyncedPWMFreq": {
        "message": "ESC update frequency"
    },
    "motorsUnsyncedPWMFreqHelp": {
        "message": "ESC PWM update frequency in Hz. This is how often the throttle value is sent to the ESC. Usually between 50Hz and 250Hz. Most modern ESCs work fine with 250Hz."
    },
    "motorsDshotBidir": {
        "message": "DShot RPM Telemetry"
    },
    "motorsDshotBidirHelp": {
        "message": "The ESC RPM is sent back to the FC with DShot. <br>Note: Requires a compatible ESC, like BLHeli32, Bluejay or AM32."
    },
    "motorsRPMSensor": {
        "message": "RPM Sensor"
    },
    "motorsRPMSensorHelp": {
        "message": "Use the RPM Sensor input for motor RPM. You can connect an RPM signal from the ESC, or from an external RPM Sensor dongle."
    },
    "motorsMainRotorGearRatio": {
        "message": "Main Rotor Gear Ratio"
    },
    "motorsMainRotorGearRatioHelp": {
        "message": "Gear ratio between the motor and the main rotor.<br>Use <span class=\"value\">motor pinion</span> : <span class=\"value\">main gear</span> tooth count."
    },
    "motorsTailRotorGearRatio": {
        "message": "Tail Rotor Gear Ratio"
    },
    "motorsTailRotorGearRatioHelp": {
        "message": "Gear ratio between the tail rotor and the main rotor. Use <span class=\"value\">tail gear</span> : <span class=\"value\">autorotation gear</span> tooth count for Torque Tube, or <span class=\"value\">tail pulley</span> : <span class=\"value\">front pulley</span> for a belt tail. For a direct drive tail, use <span class=\"value\">1</span> : <span class=\"value\">1</span>"
    },
    "motorsMotorPoles1Long": {
        "message": "Main Motor pole count"
    },
    "motorsMotorPoles2Long": {
        "message": "Tail Motor pole count"
    },
    "motorsMotorPoles3Long": {
        "message": "Motor M3 pole count"
    },
    "motorsMotorPoles4Long": {
        "message": "Motor M4 pole count"
    },
    "motorsMotorPolesHelp": {
        "message": "The <i>pole count</i> is the number of magnets on the motor bell. The manual should give this number. Or you can count the magnets. Do NOT count the stators with the copper wire windings."
    },
    "motorsThrottleMinimum": {
        "message": "0% Throttle PWM value"
    },
    "motorsThrottleMinimumHelp": {
        "message": "This PWM value is sent to the ESC/servo at low throttle (idle throttle with ICE)."
    },
    "motorsThrottleMaximum": {
        "message": "100% Throttle PWM value"
    },
    "motorsThrottleMaximumHelp": {
        "message": "This PWM value is sent to the ESC/servo at full throttle."
    },
    "motorsThrottleMinimumCommand": {
        "message": "Motor Stop Throttle PWM value"
    },
    "motorsThrottleMinimumCommandHelp": {
        "message": "This PWM value is sent to the ESC/servo when the motor is stopped. This is also a value that allows the ESC to arm."
    },
    "motorMainGearRatioIssueNote": {
        "message": "<span class=\"message-negative\">Warning:</span> <i>Main Rotor Gear Ratio</i> is set to an incorrect value. Please check!"
    },
    "motorTailGearRatioIssueNote": {
        "message": "<span class=\"message-negative\">Warning:</span> <i>Tail Rotor Gear Ratio</i> is set to an incorrect value. Please check!"
    },
    "motorRotorSpeeds": {
        "message": "Rotor Speed"
    },
    "motorMainRotorSpeed": {
        "message": "Main Rotor"
    },
    "motorTailRotorSpeed": {
        "message": "Tail Rotor"
    },
    "motorInfo1": {
        "message": "Motor #1 - Main Motor"
    },
    "motorInfo2": {
        "message": "Motor #2 - Tail Motor"
    },
    "motorInfo3": {
        "message": "Motor #3"
    },
    "motorInfo4": {
        "message": "Motor #4"
    },
    "motorOverride": {
        "message": "Override"
    },
    "motorThrottle": {
        "message": "Throttle:"
    },
    "motorRPM": {
        "message": "RPM:"
    },
    "motorHeadspeed": {
        "message": "Headspeed:"
    },
    "motorTailspeed": {
        "message": "Tailspeed:"
    },
    "motorVoltage": {
        "message": "Voltage:"
    },
    "motorCurrent": {
        "message": "Current:"
    },
    "motorTemperature": {
        "message": "Temp:"
    },
    "motorDshotError": {
        "message": "Errors:"
    },
    "motorOverrideNote": {
        "message": "<strong>Note.</strong> Throttle Override forces the output throttle to an arbitrary value for setup and testing purposes. The override values are not saved, and will be reset in reboot.<br/><br/><strong class=\"message-negative\">MOTOR THROTTLE OVERRIDE WILL MAKE THE MOTORS TO SPOOL UP!</strong>"
    },
    "motorOverrideTitle": {
        "message": "Throttle Override"
    },
    "motorOverrideEnable": {
        "message": "Enable"
    },
    "govFeatures": {
        "message": "Governor Features"
    },
    "govProfile": {
        "message": "Governor Settings"
    },
    "govConfigurationNote": {
        "message": "<strong>Note:</strong> Governor has both global and profile parameters. Please see the Profiles tab for profile specific parameters."
    },
    "govMode": {
        "message": "Governor mode"
    },
    "govModeHelp": {
        "message": "<strong>OFF:</strong> Govenor is disabled and the throttle from the Tx is passed through to the ESC.<br><br><strong>PASSTHROUGH:</strong> Throttle passthrough from the Tx, with slow spoolup and autorotation control.<br><br><strong>STANDARD:</strong> Motor speed is controlled by the FC. Equivalent to a typical ESC Governor.<br><br><strong>MODE1:</strong> Like STANDARD but with Collective and Cyclic Precompensation (i.e. collective changes are proactively changing the throttle, just like a throttle curve in the Tx).<br><br><strong>MODE2:</strong> Like MODE1, but with proactive battery voltage sag compensation. Requires fast voltage measurement."
    },
    "govHandoverThrottle": {
        "message": "Handover throttle [%]"
    },
    "govHandoverThrottleHelp": {
        "message": "The throttle level above which the governor is activated. Below this level the input throttle is passed to the ESC - above this level the governor is enabled and the input throttle is used for calculating the target headspeed. The motor must be able to start below this throttle level."
    },
    "govStartupTime": {
        "message": "Startup time"
    },
    "govStartupTimeHelp": {
        "message": "Time constant for slow startup, in seconds, measuring the time from zero to full headspeed."
    },
    "govSpoolupTime": {
        "message": "Spoolup time"
    },
    "govSpoolupTimeHelp": {
        "message": "Time constant for slow spoolup, in seconds, measuring the time from zero to full headspeed."
    },
    "govTrackingTime": {
        "message": "Tracking time"
    },
    "govTrackingTimeHelp": {
        "message": "Time constant for headspeed changes, in seconds, measuring the time from zero to full headspeed."
    },
    "govRecoveryTime": {
        "message": "Recovery time"
    },
    "govRecoveryTimeHelp": {
        "message": "Time constant for recovery spoolup, in seconds, measuring the time from zero to full headspeed."
    },
    "govAutoBailoutTime": {
        "message": "Autorotation bailout time"
    },
    "govAutoBailoutTimeHelp": {
        "message": "Time constant for autorotation bailout spoolup, in seconds, measuring the time from zero to full headspeed."
    },
    "govAutoTimeout": {
        "message": "Autorotation timeout"
    },
    "govAutoTimeoutHelp": {
        "message": "Timeout for ending autorotation and moving to normal IDLE."
    },
    "govAutoMinEntryTime": {
        "message": "Autorotation minimum entry time"
    },
    "govAutoMinEntryTimeHelp": {
        "message": "Minimum flight time before autorotation can be engaged."
    },
    "govZeroThrottleTimeout": {
        "message": "Zero Throttle timeout"
    },
    "govZeroThrottleTimeoutHelp": {
        "message": "Timeout for missing (zero) throttle signal, before shutting down the governor. If the throttle signal returns within this timeout, the governor will perform a recovery spoolup."
    },
    "govLostHeadspeedTimeout": {
        "message": "Headspeed signal timeout"
    },
    "govLostHeadspeedTimeoutHelp": {
        "message": "Timeout for missing headspeed signal, before spooling down. If the RPM signal returns within this timeout, the governor will perform a recovery spoolup."
    },
    "govHeadspeedFilterHz": {
        "message": "Headspeed filter cutoff [Hz]"
    },
    "govHeadspeedFilterHzHelp": {
        "message": "Cutoff for the headspeed lowpass filter."
    },
    "govVoltageFilterHz": {
        "message": "Battery voltage filter cutoff [Hz]"
    },
    "govVoltageFilterHzHelp": {
        "message": "Cutoff for the battery voltage lowpass filter."
    },
    "govTTAFilterHz": {
        "message": "TTA Bandwidth [Hz]"
    },
    "govTTAFilterHzHelp": {
        "message": "Cutoff for the TTA lowpass filter."
    },
    "govFFFilterHz": {
        "message": "Precomp Bandwidth [Hz]"
    },
    "govFFFilterHzHelp": {
        "message": "Cutoff for the cyclic/collective precompensation lowpass filter."
    },
    "govHeadspeed": {
        "message": "Full headspeed"
    },
    "govHeadspeedHelp": {
        "message": "The governor target headspeed is calculated by multiplying the full headspeed with the throttle input."
    },
    "govHeadspeedNote": {
        "message": "<span class=\"message-negative\">Warning:</span> Changing the headspeed will affect the PID tuning. If you have already tuned the PID Controller Gains, it is likely you will need to repeat the tuning."
    },
    "govMaxThrottle": {
        "message": "Maximum Throttle"
    },
    "govMaxThrottleHelp": {
        "message": "Maximum output throttle the governor is allowed to use."
    },
    "govMasterGain": {
        "message": "PID master gain"
    },
    "govMasterGainHelp": {
        "message": "Master PID loop gain. Usually 10..100"
    },
    "govPGain": {
        "message": "P-gain"
    },
    "govPGainHelp": {
        "message": "PID loop P-term gain. Usually 10..100"
    },
    "govIGain": {
        "message": "I-gain"
    },
    "govIGainHelp": {
        "message": "PID loop I-term gain. Usually 10..100"
    },
    "govDGain": {
        "message": "D-gain"
    },
    "govDGainHelp": {
        "message": "PID loop D-term gain. Usually 0..100"
    },
    "govFGain": {
        "message": "Feedforward gain"
    },
    "govFGainHelp": {
        "message": "Collective/Cyclic feedforward gain. Usually 0..100"
    },
    "govTTAGain": {
        "message": "Tail Torque Assist (TTA) gain"
    },
    "govTTAGainHelp": {
        "message": "Tail Torque Assist strength (gain). This is a gain applied to increase the headspeed to control the tail in the negative direction (e.g. Motorised tail less than idle speed). Usually 50..150"
    },
    "govTTALimit": {
        "message": "Tail Torque Assist (TTA) limit [%]"
    },
    "govTTALimitHelp": {
        "message": "Tail Torque Assist maximum Headspeed increase. This sets an upper limit how much the headspeed can go over the Full Headspeed. Usually 20..50%."
    },
    "govYawPrecomp": {
        "message": "Yaw precompensation"
    },
    "govYawPrecompHelp": {
        "message": "Yaw precompensation weight. Determines how much Yaw is mixed into the feedforward. This helps the governor to maintain the headspeed proactively. Usually 20..100"
    },
    "govCyclicPrecomp": {
        "message": "Cyclic precompensation"
    },
    "govCyclicPrecompHelp": {
        "message": "Cyclic precompensation weight. Determines how much cyclic is mixed into the feedforward. This helps the governor to maintain the headspeed proactively. Usually 20..100"
    },
    "govCollectivePrecomp": {
        "message": "Collective precompensation"
    },
    "govCollectivePrecompHelp": {
        "message": "Collective precompensation weight. Determines how much collective is mixed into the feedfoward. This helps the governor to maintain the headspeed proactively. Usually 20..100"
    },
    "sensorsInfo": {
        "message": "Keep in mind that using fast update periods and rendering multiple graphs at the same time is resource heavy and will burn your battery quicker if you use a laptop.<br />We recommend to only render graphs for sensors you are interested in while using reasonable update periods."
    },
    "sensorsRefresh": {
        "message": "Refresh:"
    },
    "sensorsScale": {
        "message": "Scale:"
    },
    "sensorsGyroSelect": {
        "message": "Gyroscope"
    },
    "sensorsAccelSelect": {
        "message": "Accelerometer"
    },
    "sensorsMagSelect": {
        "message": "Magnetometer"
    },
    "sensorsAltitudeSelect": {
        "message": "Altitude"
    },
    "sensorsSonarSelect": {
        "message": "Sonar"
    },
    "sensorsDebugSelect": {
        "message": "Debug"
    },
    "sensorsGyroTitle": {
        "message": "Gyroscope - deg/s"
    },
    "sensorsAccelTitle": {
        "message": "Accelerometer - g (deg)"
    },
    "sensorsMagTitle": {
        "message": "Magnetometer - Ga"
    },
    "sensorsAltitudeTitle": {
        "message": "Altitude - meters"
    },
    "sensorsAltitudeHint": {
        "message": "The altitude is calculated by combining the output of the barometer (if available) with the altitude output from the GPS (if available). If a GPS connected and the GPS has a fix, the absolute altitude above sea level will be shown when disarmed. When armed, the altitude relative to the position when arming will be shown."
    },
    "sensorsSonarTitle": {
        "message": "Sonar - cm"
    },
    "sensorsDebugTitle": {
        "message": "Debug"
    },
    "cliInfo": {
        "message": "<strong>Note:</strong> Leaving CLI tab or pressing Disconnect will <strong>automatically</strong> send \"<strong>exit</strong>\" to the board.  With the latest firmware this will make the controller <strong>restart</strong> and unsaved changes will be <strong>lost</strong>.<p><strong><span class=\"message-negative\">Warning:</span></strong> Some commands in CLI can result in arbitrary signals being sent on the motor output pins. This can cause motors to spin up if a battery is connected. Therefore it is highly recommended to make sure that <strong>no battery is connected before entering commands in CLI</strong>."
    },
    "cliInputPlaceholder": {
        "message": "Write your command here."
    },
    "cliInputPlaceholderBuilding": {
        "message": "Please wait while building AutoComplete cache ..."
    },
    "cliEnter": {
        "message": "CLI mode detected"
    },
    "cliReboot": {
        "message": "CLI reboot detected"
    },
    "cliSaveToFileBtn": {
        "message": "Save to File"
    },
    "cliClearOutputHistoryBtn": {
        "message": "Clear output history"
    },
    "cliCopyToClipboardBtn": {
        "message": "Copy to clipboard"
    },
    "cliCopySuccessful": {
        "message": "Copied!"
    },
    "cliLoadFromFileBtn": {
        "message": "Load from file"
    },
    "cliConfirmSnippetDialogTitle": {
        "message": "Loaded file <strong>{{fileName}}</strong>. Review the loaded commands"
    },
    "cliConfirmSnippetNote": {
        "message": "<strong>Note</strong>: You can review and edit commands before execution."
    },
    "cliConfirmSnippetBtn": {
        "message": "Execute"
    },
    "dialogCLIExitTitle": {
        "message": "CLI Exit Warning!"
    },
    "dialogCLIExitNote": {
        "message": "Type <code>save</code> to save changes and exit CLI.<br><br>Type <code>exit</code> to discard changes and exit CLI."
    },
    "dialogCLIExitButton": {
        "message": "Go Back"
    },
    "loggingNote": {
        "message": "Data will be logged in this tab <span class=\"message-negative\">only</span>, leaving the tab will <span class=\"message-negative\">cancel</span> logging and application will return to its normal <strong>\"configurator\"</strong> state.<br /> You are free to select the global update period, data will be written into the log file every <strong>1</strong> second for performance reasons."
    },
    "loggingSamplesSaved": {
        "message": "Samples Saved:"
    },
    "loggingLogSize": {
        "message": "Log Size:"
    },
    "loggingButtonLogFile": {
        "message": "Select Log File"
    },
    "loggingStart": {
        "message": "Start Logging"
    },
    "loggingStop": {
        "message": "Stop Logging"
    },
    "loggingBack": {
        "message": "Leave Logging / Disconnect"
    },
    "loggingErrorNotConnected": {
        "message": "You need to <strong>connect</strong> first"
    },
    "loggingErrorLogFile": {
        "message": "Please select log file"
    },
    "loggingErrorOneProperty": {
        "message": "Please select at least one property to log"
    },
    "loggingAutomaticallyRetained": {
        "message": "Automatically loaded previous log file: <strong>$1</strong>"
    },
    "blackboxNotSupported": {
        "message": "Your flight controller's firmware does not support Blackbox logging."
    },
    "blackboxMaybeSupported": {
        "message": "Your flight controller's firmware is too old to support this tab, or the Blackbox feature is disabled on the Configuration tab."
    },
    "blackboxConfiguration": {
        "message": "Blackbox configuration"
    },
    "blackboxButtonSave": {
        "message": "Save and reboot"
    },
    "blackboxLoggingNone": {
        "message": "No Logging"
    },
    "blackboxLoggingFlash": {
        "message": "Onboard Flash"
    },
    "blackboxLoggingSdCard": {
        "message": "SD Card"
    },
    "blackboxLoggingSerial": {
        "message": "Serial Port"
    },
    "blackboxOptions": {
        "message": "Blackbox Logging Options"
    },
    "blackboxLog_command": {
        "message": "Command"
    },
    "blackboxLog_setpoint": {
        "message": "Setpoint"
    },
    "blackboxLog_mixer": {
        "message": "Mixer"
    },
    "blackboxLog_attitude": {
        "message": "Attitude"
    },
    "blackboxLog_pid": {
        "message": "PID"
    },
    "blackboxLog_gyroraw": {
        "message": "Raw Gyro"
    },
    "blackboxLog_gyro": {
        "message": "Gyro"
    },
    "blackboxLog_acc": {
        "message": "Accelerometer"
    },
    "blackboxLog_mag": {
        "message": "Magnetometer"
    },
    "blackboxLog_alt": {
        "message": "Altimeter"
    },
    "blackboxLog_battery": {
        "message": "Battery"
    },
    "blackboxLog_rssi": {
        "message": "RSSI"
    },
    "blackboxLog_rpm": {
        "message": "RPM"
    },
    "blackboxLog_motors": {
        "message": "Motors"
    },
    "blackboxLog_servos": {
        "message": "Servos"
    },
    "blackboxLog_gps": {
        "message": "GPS"
    },
    "blackboxLog_vbec": {
        "message": "BEC Voltage"
    },
    "blackboxLog_vbus": {
        "message": "+5V Voltage"
    },
    "blackboxLog_temps": {
        "message": "Temperatures"
    },
    "blackboxLog_esc": {
        "message": "ESC"
    },
    "blackboxLog_bec": {
        "message": "BEC"
    },
    "blackboxLog_esc2": {
        "message": "ESC 2"
    },
    "serialLoggingSupportedNote": {
        "message": "You can log to an external logging device (such as an OpenLager) by using a serial port. Configure the port on the Ports tab."
    },
    "sdcardNote": {
        "message": "Flight logs can be recorded to your flight controller's onboard SD card slot."
    },
    "dataflashUsedSpace": {
        "message": "Used space"
    },
    "dataflashFreeSpace": {
        "message": "Free space"
    },
    "dataflashUnavSpace": {
        "message": "Unavailable space"
    },
    "dataflashLogsSpace": {
        "message": "Free space for logs"
    },
    "dataflashNote": {
        "message": "Flight logs can be recorded to your flight controller's onboard dataflash chip."
    },
    "dataflashNotPresentNote": {
        "message": "Your flight controller does not have a compatible dataflash chip available."
    },
    "dataflashFirmwareUpgradeRequired": {
        "message": "Dataflash requires firmware &gt;= 1.8.0."
    },
    "dataflashButtonSaveFile": {
        "message": "Save to file"
    },
    "dataflashSavetoFileNote": {
        "message": "Directly saving flash to file is slow and inherently prone to error / file corruption.<br>In some cases it will work for small files, but this is not supported and support requests for it will be closed without comment - use Mass Storage mode instead."
    },
    "dataflashSaveFileDepreciationHint": {
        "message": "This method is slow, because the MSP connection itself has fundamental limitations for file transfer. The recommended method is to use '<b>$t(blackboxRebootMscText.message)</b>' (below) to activate the Mass Storage Mode, and access your flight controller as a storage device to download the log files."
    },
    "dataflashButtonErase": {
        "message": "Erase"
    },
    "dataflashConfirmEraseTitle": {
        "message": "Confirm dataflash erase"
    },
    "dataflashConfirmEraseNote": {
        "message": "This will erase any Blackbox logs or other data contained in the dataflash. It should take about 20 seconds, are you sure?"
    },
    "dataflashSavingTitle": {
        "message": "Saving dataflash to file"
    },
    "dataflashSavingNote": {
        "message": "Saving could take several minutes, please wait."
    },
    "dataflashSavingNoteAfter": {
        "message": "Save completed! Press \"Ok\" to continue."
    },
    "dataflashButtonSaveCancel": {
        "message": "Cancel"
    },
    "dataflashButtonSaveDismiss": {
        "message": "Ok"
    },
    "dataflashButtonEraseConfirm": {
        "message": "Yes, erase dataflash"
    },
    "dataflashButtonEraseCancel": {
        "message": "Cancel"
    },
    "dataflashFileWriteFailed": {
        "message": "Failed to write to the file you selected, are the permissions on that folder okay?"
    },
    "sdcardStatusNoCard": {
        "message": "No card inserted"
    },
    "sdcardStatusReboot": {
        "message": "Fatal error<br>Reboot to retry"
    },
    "sdcardStatusReady": {
        "message": "Card ready"
    },
    "sdcardStatusStarting": {
        "message": "Card starting..."
    },
    "sdcardStatusFileSystem": {
        "message": "Filesystem starting..."
    },
    "sdcardStatusUnknown": {
        "message": "Unknown state $1"
    },
    "firmwareFlasherReleaseSummaryHead": {
        "message": "Release info"
    },
    "firmwareFlasherReleaseManufacturer": {
        "message": "Manufacturer ID:"
    },
    "firmwareFlasherReleaseVersion": {
        "message": "Version:"
    },
    "firmwareFlasherReleaseVersionUrl": {
        "message": "Visit release page."
    },
    "firmwareFlasherReleaseNotes": {
        "message": "Release notes:"
    },
    "firmwareFlasherReleaseDate": {
        "message": "Date:"
    },
    "firmwareFlasherReleaseTarget": {
        "message": "Target:"
    },
    "firmwareFlasherReleaseFile": {
        "message": "Binary:"
    },
    "firmwareFlasherUnifiedTargetName": {
        "message": "Unified Target:"
    },
    "firmwareFlasherUnifiedTargetFileUrl": {
        "message": "Show config."
    },
    "firmwareFlasherUnifiedTargetDate": {
        "message": "Date:"
    },
    "firmwareFlasherReleaseFileUrl": {
        "message": "Download manually."
    },
    "firmwareFlasherTargetWarning": {
        "message": "<span class=\"message-negative\">IMPORTANT</span>: Ensure you flash a file appropriate for your target.  Flashing a binary for the wrong target can cause <span class=\"message-negative\">bad</span> things to happen."
    },
    "firmwareFlasherLoadFirmwareFile": {
        "message": "Please load firmware file"
    },
    "firmwareFlasherLoadedConfig": {
        "message": "Loaded target, please load firmware file"
    },
    "firmwareFlasherNoReboot": {
        "message": "No reboot sequence"
    },
    "firmwareFlasherOnlineSelectBuildType": {
        "message": "Select build type to see available boards."
    },
    "firmwareFlasherOnlineSelectBoardDescription": {
        "message": "Select your board to see available online firmware releases - Select the correct firmware appropriate for your board."
    },
    "firmwareFlasherOnlineSelectBoardHint": {
        "message": "The concept of Unified Targets means that the same firmware .hex file can be used for all boards using the same MCU (G4, F4, F7, H7). To make the different boards work with the same firmware, a separate configuration file is flashed alongside the firmware.<br>The Configurator supports this transparently in one flashing step."
    },
    "firmwareFlasherOnlineSelectFirmwareVersionDescription": {
        "message": "Select firmware version for your board."
    },
    "firmwareFlasherNoRebootDescription": {
        "message": "Enable if your FC is in boot mode. i.e. if you powered on your FC with the bootloader pins jumped or whilst holding your FC's BOOT button."
    },
    "firmwareFlasherFlashOnConnect": {
        "message": "Flash on connect"
    },
    "firmwareFlasherFlashOnConnectDescription": {
        "message": "Attempt to flash the board automatically (triggered by newly detected serial port)."
    },
    "firmwareFlasherFullChipErase": {
        "message": "Full chip erase"
    },
    "firmwareFlasherFullChipEraseDescription": {
        "message": "Wipes all configuration data currently stored on the board."
    },
    "firmwareFlasherManualPort": {
        "message": "Port"
    },
    "firmwareFlasherManualBaud": {
        "message": "Manual baud rate"
    },
    "firmwareFlasherManualBaudDescription": {
        "message": "Manual selection of baud rate for boards that don't support the default speed or for flashing via bluetooth.<br /><span class=\"message-negative\">Note:</span> Not used when flashing via USB DFU"
    },
    "firmwareFlasherBaudRate": {
        "message": "Baud Rate"
    },
    "firmwareFlasherOptionLoading": {
        "message": "Loading ..."
    },
    "firmwareFlasherOptionLabelBuildTypeRelease": {
        "message": "Releases"
    },
    "firmwareFlasherOptionLabelBuildTypePreRelease": {
        "message": "Releases and Pre-releases"
    },
    "firmwareFlasherOptionLabelBuildTypeDevelopment": {
        "message": "All Releases and Snapshots"
    },
    "firmwareFlasherOptionLabelSelectFirmware": {
        "message": "Choose a Firmware / Board"
    },
    "firmwareFlasherOptionLabelSelectBoard": {
        "message": "Choose a Board"
    },
    "firmwareFlasherOptionLabelSelectFirmwareVersion": {
        "message": "Choose a Firmware version"
    },
    "firmwareFlasherOptionLabelSelectFirmwareVersionFor": {
        "message": "Choose a Firmware version for"
    },
    "firmwareFlasherButtonLoadLocal": {
        "message": "Load Firmware [Local]"
    },
    "firmwareFlasherButtonLoadOnline": {
        "message": "Load Firmware [Online]"
    },
    "firmwareFlasherButtonDownloading": {
        "message": "Downloading..."
    },
    "firmwareFlasherExitDfu": {
        "message": "Exit DFU Mode"
    },
    "firmwareFlasherFlashFirmware": {
        "message": "Flash Firmware"
    },
    "firmwareFlasherGithubInfoHead": {
        "message": "GitHub Firmware Info"
    },
    "firmwareFlasherCommiter": {
        "message": "Committer:"
    },
    "firmwareFlasherDate": {
        "message": "Date:"
    },
    "firmwareFlasherHash": {
        "message": "Hash:"
    },
    "firmwareFlasherUrl": {
        "message": "Go to GitHub to review this commit..."
    },
    "firmwareFlasherMessage": {
        "message": "Message:"
    },
    "firmwareFlasherWarningText": {
        "message": "Please do <span class=\"message-negative\">ONLY</span> flash <strong>Rotorflight</strong> or <strong>Betaflight</strong> hardware with this firmware flasher.<br /><br /><strong>Note: </strong>STM32 bootloader is stored in ROM, it cannot be bricked.<br /><strong>Note: </strong><span class=\"message-negative\">Auto-Connect</span> is always disabled while you are inside firmware flasher.<br /><strong>Note: </strong>Make sure you have a backup; some upgrades/downgrades will wipe your configuration.<br /><strong>Note:</strong> If you have problems flashing <strong>try disconnecting all cables from your FC</strong> first, try rebooting, upgrade drivers.<br /><strong>Note:</strong> When flashing boards that have directly connected USB sockets (most newer boards) ensure you have read the USB Flashing section of the manual and have the correct software and drivers installed"
    },
    "firmwareFlasherRecoveryHead": {
        "message": "<strong>Recovery / Lost communication</strong>"
    },
    "firmwareFlasherRecoveryText": {
        "message": "If you have lost communication with your board follow these steps to restore communication: <ul><li>Power off</li><li>Enable 'No reboot sequence', enable 'Full chip erase'.</li><li>Jumper the BOOT pins or hold BOOT button.</li><li>Power on (activity LED will NOT flash if done correctly).</li><li>Install all STM32 drivers and Zadig if required (see <a href=\"https://github.com/betaflight/betaflight/wiki/Installing-Betaflight\"target=\"_blank\" rel=\"noopener noreferrer\">USB Flashing</a> section of the manual).</li><li>Close configurator, Restart Configurator.</li><li>Release BOOT button if your FC has one.</li><li>Flash with correct firmware (using manual baud rate if specified in your FC's manual).</li><li>Power off.</li><li>Remove BOOT jumper.</li><li>Power on (activity LED should flash).</li><li>Connect normally.</li></ul>"
    },
    "firmwareFlasherFirmwareNotLoaded": {
        "message": "Firmware not loaded"
    },
    "firmwareFlasherFirmwareLocalLoaded": {
        "message": "Loaded Local Firmware: ($1 bytes)"
    },
    "firmwareFlasherFirmwareOnlineLoaded": {
        "message": "Loaded Online Firmware: ($1 bytes)"
    },
    "firmwareFlasherHexCorrupted": {
        "message": "HEX file appears to be corrupted"
    },
    "firmwareFlasherFailedToLoadOnlineFirmware": {
        "message": "Failed to load remote firmware"
    },
    "firmwareFlasherFailedToLoadUnifiedConfig": {
        "message": "Failed to load remote config for {{remote_file}}"
    },
    "firmwareFlasherLegacyLabel": {
        "message": "{{target}} (Legacy)",
        "description": "If we have a Unified target and a old style target available, we are labeling the older one"
    },
    "firmwareFlasherNoFirmwareSelected": {
        "message": "<b>No firmware selected to load</b>"
    },
    "firmwareFlasherNoValidPort": {
        "message": "<span class=\"message-negative\">Please select valid serial port</span>"
    },
    "firmwareFlasherWritePermissions": {
        "message": "You don't have <span class=\"message-negative\">write permissions</span> for this file"
    },
    "firmwareFlasherFlashTrigger": {
        "message": "Detected: <strong>$1</strong> - triggering flash on connect"
    },
    "unstableFirmwareAcknoledgementDialog": {
        "message": "You are about to flash a <strong>development build of the firmware</strong>. These builds are a work-in-progress, and any of the following can be the case:<strong><ul><li>the firmware does not work at all;</li><li>the firmware is not flyable;</li><li>there are safety issues with the firmware, for example flyaways</li><li>the firmware can cause the flight controller to become unresponsive, or damaged</li></ul></strong>If you proceed with flashing this firmware, <strong>you are assuming full responsibility for the risk of any of the above happening</strong>. Furthermore you acknowledge that it is necessary to perform <strong>thorough bench tests with rotor blades removed</strong> before any attempts to fly this firmware."
    },
    "unstableFirmwareAcknoledgementAcknowledge": {
        "message": "I have read the above and <strong>I assume full responsibility<strong> for flashing unstable firmware"
    },
    "unstableFirmwareAcknoledgementFlash": {
        "message": "Flash"
    },
    "firmwareFlasherPreviousDevice": {
        "message": "Detected: <strong>$1</strong> - previous device still flashing, please replug to try again"
    },
    "firmwareFlasherNoBoardsLoaded": {
        "message": "No boards loaded"
    },
    "firmwareFlasherBoardDetectionButton": {
        "message": "Detect"
    },
    "firmwareFlasherBoardDetectionSucceeded": {
        "message": "Detected board: <strong>{{boardName}}</strong>",
        "description": "Board detection was successful!"
    },
    "firmwareFlasherBoardDetectionFail": {
        "message": "Unable to detect board for connected device"
    },
    "firmwareFlasherBoardDetectionBoardNotFound": {
        "message": "Detected board: <strong>{{boardName}}</strong>, but no matching target found.",
        "description": "Board detection was successful, but there was no matching target available."
    },
    "firmwareFlasherBoardDetectionDescriptionHint": {
        "message": "Detect only works when not in DFU mode and when MSP communication is working. Sometimes you have to retry a few times or even reconnect USB. Try connecting as normal first as you could have forgotten to apply custom defaults. Please reboot after flashing - replug your USB."
    },
    "firmwareFlasherBoardDetectionInProgress": {
        "message": "Auto-detecting board for connected device..."
    },
    "dialogBoardDetectionMessageInvalidBoardNameTitle": {
        "message": "Invalid Board Name Detected"
    },
    "dialogBoardDetectionMessageInvalidBoardNameContent": {
        "message": "Board name: ($1) contains invalid characters -- using corrected board name: ($2)"
    },
    "dialogBoardDetectionMessageInvalidBoardNameRecommendation": {
        "message": "A full chip erase is recommended to correct the board name. Ensure you perform a full backup before performing a flash with full chip erase enabled."
    },
    "dialogBoardDetectionMessageAcknowledge": {
        "message": "Acknowledge"
    },
    "ledStripHelp": {
        "message": "The flight controller can control colors and effects of individual LEDs on a strip.<br />Configure LEDs on the grid, configure wiring order then attach LEDs on your aircraft according to grid positions. LEDs without wire ordering number will not be saved.<br />Double-click on a color to edit the HSV values."
    },
    "ledStripColorSetupTitle": {
        "message": "Color setup",
        "description": "Color setup title of the led strip"
    },
    "ledStripH": {
        "message": "H",
        "description": "Abbreviation of Hue in HSV (Hue, Saturation, Brightness) color model"
    },
    "ledStripS": {
        "message": "S",
        "description": "Abbreviation of Saturation in HSV  (Hue, Saturation, Brightness) color model"
    },
    "ledStripV": {
        "message": "V",
        "description": "Abbreviation of Brightness in HSV  (Hue, Saturation, Brightness) color model"
    },
    "ledStripRemainingText": {
        "message": "Remaining",
        "description": "In the LED STRIP, text next the counter of leds remaining"
    },
    "ledStripClearSelectedButton": {
        "message": "Clear selected",
        "description": "In the LED STRIP, clear selected leds"
    },
    "ledStripClearAllButton": {
        "message": "Clear ALL",
        "description": "In the LED STRIP, clear all leds"
    },
    "ledStripProfileTitle": {
        "message": "Profile"
    },
    "ledStripProfileRaceOption": {
        "message": "Race"
    },
    "ledStripProfileBeaconOption": {
        "message": "Beacon"
    },
    "ledStripProfileStatusOption": {
        "message": "Status"
    },
    "ledStripProfileStatusAltOption": {
        "message": "Status Alt"
    },
    "ledStripGlobalBlinkRate": {
        "message": "Blink tempo (BPM)"
    },
    "ledStripGlobalFlickerRate": {
        "message": "Flicker rate"
    },
    "ledStripGlobalFadeRate": {
        "message": "Fade rate"
    },
    "ledStripGlobalBrightness": {
        "message": "Overall brightness"
    },
    "ledStripFlickerOverlay": {
        "message": "Flicker"
    },
    "ledStripFadeOverlay": {
        "message": "Fade to alt color (in profile Status Alt)"
    },
    "ledStripVtxOverlay": {
        "message": "VTX (uses vtx frequency to assign color)"
    },
    "ledStripFunctionSection": {
        "message": "LED Functions"
    },
    "ledStripFunctionTitle": {
        "message": "Function"
    },
    "ledStripFunctionNoneOption": {
        "message": "None",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionColorOption": {
        "message": "Color",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionModesOption": {
        "message": "Modes &amp; Orientation",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionArmOption": {
        "message": "Arm State",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionBatteryOption": {
        "message": "Battery",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionRSSIOption": {
        "message": "RSSI",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionGPSOption": {
        "message": "GPS",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripFunctionRingOption": {
        "message": "Ring",
        "description": "One of the modes of the Led Strip"
    },
    "ledStripColorModifierTitle": {
        "message": "Color modifier"
    },
    "ledStripModeColorsTitle": {
        "message": "Mode colors"
    },
    "ledStripModeColorsModeOrientation": {
        "message": "Orientation",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeHeadfree": {
        "message": "Headfree",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeHorizon": {
        "message": "Horizon",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeAngle": {
        "message": "Angle",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeMag": {
        "message": "Mag",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeBaro": {
        "message": "Baro",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripDirN": {
        "message": "N",
        "description": "North direction in Color Mode in Led Strip"
    },
    "ledStripDirE": {
        "message": "E",
        "description": "East direction in Color Mode in Led Strip"
    },
    "ledStripDirS": {
        "message": "S",
        "description": "South direction in Color Mode in Led Strip"
    },
    "ledStripDirW": {
        "message": "W",
        "description": "West direction in Color Mode in Led Strip"
    },
    "ledStripDirU": {
        "message": "U",
        "description": "Up direction in Color Mode in Led Strip"
    },
    "ledStripDirD": {
        "message": "D",
        "description": "Down direction in Color Mode in Led Strip"
    },
    "ledStripModesColorTitle": {
        "message": "LED Orientation, Color (left click) and Alt Color (right click)",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModesSpecialColorsTitle": {
        "message": "Special colors",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeDisarmed": {
        "message": "Disarmed",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeArmed": {
        "message": "Armed",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeAnimation": {
        "message": "Animation",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeBlinkBg": {
        "message": "Blink background",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeGPSNoSats": {
        "message": "GPS: no sats",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeGPSNoLock": {
        "message": "GPS: no lock",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripModeColorsModeGPSLocked": {
        "message": "GPS: locked",
        "description": "One of the modes in Color Mode in Led Strip"
    },
    "ledStripWiring": {
        "message": "LED Strip Wiring",
        "description": "One of the modes in Led Strip"
    },
    "ledStripWiringMode": {
        "message": "Wire Ordering Mode",
        "description": "One of the wiring modes in Led Strip"
    },
    "ledStripWiringClearControl": {
        "message": "Clear selected",
        "description": "Control button in the wiring modes in Led Strip"
    },
    "ledStripWiringClearAllControl": {
        "message": "Clear ALL Wiring",
        "description": "Control button in the wiring modes in Led Strip"
    },
    "ledStripWiringMessage": {
        "message": "LEDs without wire ordering number will not be saved.",
        "description": "Message in the wiring modes in Led Strip"
    },
    "ledStripGlobalSettings": {
        "message": "LED Strip Global Settings",
        "description": "The Led Strip global settings, like profile etc"
    },
    "ledStripVtxFunction": {
        "message": "Larson scanner"
    },
    "ledStripBlinkTitle": {
        "message": "Blink"
    },
    "ledStripBlinkAlwaysOverlay": {
        "message": "Blink always"
    },
    "ledStripBlinkLandingOverlay": {
        "message": "Blink on landing"
    },
    "ledStripBlinkPause": {
        "message": "Pause"
    },
    "ledStripOverlayTitle": {
        "message": "Overlay"
    },
    "ledStripWarningsOverlay": {
        "message": "Warnings"
    },
    "ledStripIndecatorOverlay": {
        "message": "Indicator (uses position on matrix)"
    },
    "colorBlack": {
        "message": "black"
    },
    "colorWhite": {
        "message": "white"
    },
    "colorRed": {
        "message": "red"
    },
    "colorOrange": {
        "message": "orange"
    },
    "colorYellow": {
        "message": "yellow"
    },
    "colorLimeGreen": {
        "message": "lime green"
    },
    "colorGreen": {
        "message": "green"
    },
    "colorMintGreen": {
        "message": "mint green"
    },
    "colorCyan": {
        "message": "cyan"
    },
    "colorLightBlue": {
        "message": "light blue"
    },
    "colorBlue": {
        "message": "blue"
    },
    "colorDarkViolet": {
        "message": "dark violet"
    },
    "colorMagenta": {
        "message": "magenta"
    },
    "colorDeepPink": {
        "message": "deep pink"
    },
    "controlAxisRoll": {
        "message": "Roll [A]"
    },
    "controlAxisPitch": {
        "message": "Pitch [E]"
    },
    "controlAxisYaw": {
        "message": "Yaw [R]"
    },
    "controlAxisCollective": {
        "message": "Coll [C]"
    },
    "controlAxisThrottle": {
        "message": "Throttle [T]"
    },
    "controlAxisThr": {
        "message": "Throttle"
    },
    "controlAxisAux1": {
        "message": "AUX 1"
    },
    "controlAxisAux2": {
        "message": "AUX 2"
    },
    "controlAxisAux3": {
        "message": "AUX 3"
    },
    "controlAxisAux4": {
        "message": "AUX 4"
    },
    "controlAxisAux5": {
        "message": "AUX 5"
    },
    "controlAxisAux6": {
        "message": "AUX 6"
    },
    "controlAxisAux7": {
        "message": "AUX 7"
    },
    "controlAxisAux8": {
        "message": "AUX 8"
    },
    "controlAxisAux9": {
        "message": "AUX 9"
    },
    "controlAxisAux10": {
        "message": "AUX 10"
    },
    "controlAxisAux11": {
        "message": "AUX 11"
    },
    "controlAxisAux12": {
        "message": "AUX 12"
    },
    "controlAxisAux13": {
        "message": "AUX 13"
    },
    "controlAxisAux14": {
        "message": "AUX 14"
    },
    "controlAxisAux15": {
        "message": "AUX 15"
    },
    "controlAxisAux16": {
        "message": "AUX 16"
    },
    "controlAxisAux17": {
        "message": "AUX 17"
    },
    "controlAxisAux18": {
        "message": "AUX 18"
    },
    "controlAxisAux19": {
        "message": "AUX 19"
    },
    "controlAxisAux20": {
        "message": "AUX 20"
    },
    "controlAxisAux21": {
        "message": "AUX 21"
    },
    "controlAxisAux22": {
        "message": "AUX 22"
    },
    "controlAxisAux23": {
        "message": "AUX 23"
    },
    "controlAxisAux24": {
        "message": "AUX 24"
    },
    "controlAxisAux25": {
        "message": "AUX 25"
    },
    "controlAxisAux26": {
        "message": "AUX 26"
    },
    "controlAxisAux27": {
        "message": "AUX 27"
    },
    "rssiOptionAUTO": {
        "message": "AUTO"
    },
    "rssiOptionADC": {
        "message": "ADC"
    },
    "profilesPidGains": {
        "message": "PID Controller Gains"
    },
    "profilesPidSettings": {
        "message": "PID Controller Settings"
    },
    "profilesErrorLimit": {
        "message": "Cumulative Error Limits"
    },
    "profilesErrorLimitHelp": {
        "message": "Hard limit for the angle error in the PID loop. The absolute error and thus the I-term will never go above these limits."
    },
    "profilesErrorLimitRoll": {
        "message": "Error Limit for Roll Axis [&deg;]"
    },
    "profilesErrorLimitPitch": {
        "message": "Error Limit for Pitch Axis [&deg;]"
    },
    "profilesErrorLimitYaw": {
        "message": "Error Limit for Yaw Axis [&deg;]"
    },
    "profilesOffsetLimitHelp": {
        "message": "Hard limit for the High Speed Integral offset angle in the PID loop. The absolute offset and thus the O-term will never go above these limits."
    },
    "profilesOffsetLimitRoll": {
        "message": "HSI Offset Limit for Roll Axis [&deg;]"
    },
    "profilesOffsetLimitPitch": {
        "message": "HSI Offset Limit for Pitch Axis [&deg;]"
    },
    "profilesOffsetGainHelp": {
        "message": "Gain for the High Speed Integral Offset term (Integral for high speed flight), which is only active at large collective angles. This term of the control loop provides angular stability and safe control following at high speeds, as well as attitude stability on large changes of the collective pitch angle of the rotor disk, which would lead to rapid diving and unwanted attitude changes without HSI. Too low values cause the model to become unstable at high speeds, as well as slow reaction and large attitude changes on collective pitch changes. Too large values can cause oscillation and restlessness at large collective pitch angles. For testing of the lower bounds of the parameter, fly in a straight line <strong> AT SAFE ALTITUDE</strong>, only briefly pull the collective into the negative range and observe the model's reaction. Should the model dive, increase the HSI Offset Gain. For testing the upper bounds of the parameter, give short jabs of elevator and aileron in a high collective vertical climb and observe the model's behavior. If the model swings, wobbles or exerts restlessness after releasing the stick, decrease the HSI Offset Gain."
    },
    "profilesOffsetGainRoll": {
        "message": "HSI Offset Gain for Roll Axis"
    },
    "profilesOffsetGainPitch": {
        "message": "HSI Offset Gain for Pitch Axis"
    },
    "profilesErrorDecayGround": {
        "message": "Ground Error Decay"
    },
    "profilesErrorDecayTimeGroundHelp": {
        "message": "Bleeds off the current controller error when the craft is not airborne. This helps preventing the craft from tipping over on the ground."
    },
    "profilesErrorDecayTime": {
        "message": "Decay Time [s]"
    },
    "profilesErrorDecayTimeCyclic": {
        "message": "Error Decay time [s]"
    },
    "profilesErrorDecayTimeCyclicHelp": {
        "message": "Time constant for bleeding off the accumulated cyclic error (I-term). Longer decay time makes hovering more stable, but may reduce 3D performance."
    },
    "profilesErrorDecayLimitCyclic": {
        "message": "Error Decay maximum rate [&deg;/s]"
    },
    "profilesErrorDecayLimitCyclicHelp": {
        "message": "Maximum bleed-off speed for the accumulated cyclic error (I-term)."
    },
    "profilesErrorDecayTimeYaw": {
        "message": "Error Decay time [s]"
    },
    "profilesErrorDecayTimeYawHelp": {
        "message": "Time constant for bleeding off the accumulated yaw error (I-term)."
    },
    "profilesErrorDecayLimitYaw": {
        "message": "Error Decay maximum rate [&deg;/s]"
    },
    "profilesErrorDecayLimitYawHelp": {
        "message": "Maximum bleed-off speed for the accumulated yaw error (I-term)."
    },
    "profilesErrorRotation": {
        "message": "Piro Compensation"
    },
    "profilesErrorRotationHelp": {
        "message": "Rotates the current Roll and Pitch Error Terms around Yaw when the craft rotates. This improves piro control and helps the model to travel in a straight line while pirouetting."
    },
    "profilesItermRelax": {
        "message": "I-Term Relax"
    },
    "profilesItermRelaxHelp": {
        "message": "Limits the accumulation of I-term when fast movements happen. This helps in the reduction of bounceback at the end of rolls and other fast movements."
    },
    "profilesItermRelaxType": {
        "message": "I-term Relax Type"
    },
    "profilesItermRelaxTypeHelp": {
        "message": "Choose the axes in which this is active. <br><strong>RP:</strong> Roll, Pitch <br><strong>RPY:</strong> Roll, Pitch, Yaw."
    },
    "profilesItermRelaxTypeOptionRP": {
        "message": "RP"
    },
    "profilesItermRelaxTypeOptionRPY": {
        "message": "RPY"
    },
    "profilesItermRelaxCutoffRoll": {
        "message": "Cutoff Point for Roll"
    },
    "profilesItermRelaxCutoffPitch": {
        "message": "Cutoff Point for Pitch"
    },
    "profilesItermRelaxCutoffYaw": {
        "message": "Cutoff Point for Yaw"
    },
    "profilesItermRelaxCutoffHelp": {
        "message": "Lower values suppress bounce-back after movements, high values increase high-rate turn precision.<br>Set to 15-30 for small helis, 10-15 for mid-size, and less than 10 for large."
    },
    "profilesPidBandwidth": {
        "message": "PID Controller Bandwidth"
    },
    "profilesGyroCutoffHelp": {
        "message": "PID Loop overall bandwidth in Hz"
    },
    "profilesGyroCutoffRoll": {
        "message": "Roll Bandwidth"
    },
    "profilesGyroCutoffPitch": {
        "message": "Pitch Bandwidth"
    },
    "profilesGyroCutoffYaw": {
        "message": "Yaw Bandwidth"
    },
    "profilesDtermCutoffHelp": {
        "message": "D-term Cutoff Frequency in Hz"
    },
    "profilesDtermCutoffRoll": {
        "message": "Roll D-term Cutoff"
    },
    "profilesDtermCutoffPitch": {
        "message": "Pitch D-term Cutoff"
    },
    "profilesDtermCutoffYaw": {
        "message": "Yaw D-term Cutoff"
    },
    "profilesBtermCutoffHelp": {
        "message": "B-term Cutoff Frequency in Hz"
    },
    "profilesBtermCutoffRoll": {
        "message": "Roll B-term Cutoff"
    },
    "profilesBtermCutoffPitch": {
        "message": "Pitch B-term Cutoff"
    },
    "profilesBtermCutoffYaw": {
        "message": "Yaw B-term Cutoff"
    },
    "profilesLevelingSettings": {
        "message": "Auto-leveling Settings"
    },
    "profilesAcroTrainerGain": {
        "message": "Acro Trainer gain"
    },
    "profilesAcroTrainerGainHelp": {
        "message": "Acro Trainer gain. Acro trainer Mode is not self leveling but does limit the maximum pitch/roll angle. This determines how aggressively the helicopter tilts back to the maximum angle (if exceeded) while in Acro Trainer Mode"
    },
    "profilesAcroTrainerLimit": {
        "message": "Acro Trainer angle limit"
    },
    "profilesAcroTrainerLimitHelp": {
        "message": "Acro Trainer angle limit. Acro Trainer mode does not self level (like Angle or Horizon Modes); however, it does limit the maximum angle the helicopter will pitch/roll to"
    },
    "profilesAngleModeGain": {
        "message": "Angle Mode leveling gain"
    },
    "profilesAngleModeGainHelp": {
        "message": "Angle Mode leveling gain. This determines how aggressively the helicopter tilts back to level while in Angle Mode"
    },
    "profilesAngleModeLimit": {
        "message": "Angle Mode maximum angle"
    },
    "profilesAngleModeLimitHelp": {
        "message": "Angle Mode maximum angle. Helicopter is limited to this angle when in Angle mode"
    },
    "profilesHorizonModeGain": {
        "message": "Horizon Mode leveling gain"
    },
    "profilesHorizonModeGainHelp": {
        "message": "Horizon Mode leveling gain. This determines how aggressively the helicopter tilts back to level while in Horizon Mode"
    },
    "profilesMainRotorSettings": {
        "message": "Main Rotor Settings"
    },
    "profilesTailRotorSettings": {
        "message": "Tail Rotor Settings"
    },
    "profilesYawCenterOffset": {
        "message": "Center Offset"
    },
    "profilesYawCenterOffsetHelp": {
        "message": "Center Offset for tail motor or servo"
    },
    "profilesYawStopGainCW": {
        "message": "CW Yaw Stop Gain"
    },
    "profilesYawStopGainCWHelp": {
        "message": "Stop gain (PD) for clock-wise rotation. Typical range 50..200."
    },
    "profilesYawStopGainCCW": {
        "message": "CCW Yaw Stop Gain"
    },
    "profilesYawStopGainCCWHelp": {
        "message": "Stop gain (PD) for counter clock-wise rotation. Typical range 50..200."
    },
    "profilesYawPrecompCutoff": {
        "message": "Yaw Precomp Cutoff [Hz]"
    },
    "profilesYawPrecompCutoffHelp": {
        "message": "Frequency limit for all yaw precompensation actions"
    },
    "profilesYawFFCyclicGain": {
        "message": "Cyclic Feedforward Gain"
    },
    "profilesYawFFCyclicGainHelp": {
        "message": "Gain value for cyclic feedforward mixed into yaw"
    },
    "profilesYawFFCollectiveGain": {
        "message": "Collective Feedforward Gain"
    },
    "profilesYawFFCollectiveGainHelp": {
        "message": "Gain value for collective feedforward mixed into yaw"
    },
    "profilesYawFFImpulseGain": {
        "message": "Collective Impulse Feedforward Gain"
    },
    "profilesYawFFImpulseGainHelp": {
        "message": "Gain value for collective impulse feedforward mixed into yaw"
    },
    "profilesyawFFImpulseDecay": {
        "message": "Collective Impulse Feedforward Decay time"
    },
    "profilesyawFFImpulseDecayHelp": {
        "message": "Decay time for collective impulse feedforward mixed into yaw"
    },
    "profilesPitchFFCollective": {
        "message": "Collective to Pitch Compensation"
    },
    "profilesPitchFFCollectiveHelp": {
        "message": "Compensation for the pitching up tendency in collective pitch pumps."
    },
    "profilesPitchFFCollectiveGain": {
        "message": "Compensation Gain"
    },
    "profilesPitchFFCollectiveGainHelp": {
        "message": "Amount of collective mixed into the elevator control."
    },
    "profilesCyclicCrossCoupling": {
        "message": "Cyclic Cross-Coupling"
    },
    "profilesCyclicCrossCouplingHelp": {
        "message": "Cyclic Cross-Coupling compensation removes the aileron (roll) wobble when only elevator is applied."
    },
    "profilesCyclicCrossCouplingGain": {
        "message": "Cross-Coupling Gain"
    },
    "profilesCyclicCrossCouplingGainHelp": {
        "message": "Amount of compensation applied for Pitch-to-Roll decoupling."
    },
    "profilesCyclicCrossCouplingRatio": {
        "message": "Cross-Coupling Ratio [%]"
    },
    "profilesCyclicCrossCouplingRatioHelp": {
        "message": "Amount of Roll-to-Pitch compensation needed, vs. Pitch-to-Roll."
    },
    "profilesCyclicCrossCouplingCutoff": {
        "message": "Cross-Coupling Cutoff Frequency [Hz]"
    },
    "profilesCyclicCrossCouplingCutoffHelp": {
        "message": "Frequency limit for the compensation. Higher value will make the compensation action faster."
    },
    "profilesRescueSettings": {
        "message": "Rescue Settings"
    },
    "profilesRescueEnable": {
        "message": "Enable Rescue"
    },
    "profilesRescueFlipMode": {
        "message": "Flip to upright"
    },
    "profilesRescueFlipModeHelp": {
        "message": "If rescue is activated while inverted, flip to upright - or remain inverted"
    },
    "profilesRescueFlipModeDisable": {
        "message": "No-Flip"
    },
    "profilesRescueFlipModeEnable": {
        "message": "Flip"
    },
    "profilesRescueLevelGain": {
        "message": "Leveling Gain"
    },
    "profilesRescueLevelGainHelp": {
        "message": "Gain to determine how agressively the heli levels during rescue."
    },
    "profilesRescueFlipGain": {
        "message": "Flip-to-Upright Gain"
    },
    "profilesRescueFlipGainHelp": {
        "message": "Gain to determine how agressively the heli flips during inverted rescue."
    },
    "profilesRescueMaxRate": {
        "message": "Max Levelling Rate [&deg;/s]"
    },
    "profilesRescueMaxRateHelp": {
        "message": "Limit rescue roll/pitch rate. Larger helicopters may need slower rotation rates."
    },
    "profilesRescueMaxAccel": {
        "message": "Max Leveling Acceleration [&deg;/s²]"
    },
    "profilesRescueMaxAccelHelp": {
        "message": "Limit how fast the helicopter accelerates into a roll/pitch. Larger helicopters may need slower acceleration."
    },
    "profilesRescuePullupCollective": {
        "message": "Pull-up Collective [%]"
    },
    "profilesRescuePullupCollectiveHelp": {
        "message": "Collective value for pull-up climb."
    },
    "profilesRescuePullupTime": {
        "message": "Pull-up Time [s]"
    },
    "profilesRescuePullupTimeHelp": {
        "message": "Rescue pull-up time. When Rescue activated Helicopter will apply pull-up collective for this time period before moving to flip or climb stage."
    },
    "profilesRescueClimbCollective": {
        "message": "Climb Collective [%]"
    },
    "profilesRescueClimbCollectiveHelp": {
        "message": "Collective value for rescue climb"
    },
    "profilesRescueClimbTime": {
        "message": "Climb Time [s]"
    },
    "profilesRescueClimbTimeHelp": {
        "message": "Length of time the <i>climb collective</i> is applied before switching to hover."
    },
    "profilesRescueHoverCollective": {
        "message": "Hover Collective [%]"
    },
    "profilesRescueHoverCollectiveHelp": {
        "message": "Collective value for Hover"
    },
    "profilesRescueExitTime": {
        "message": "Exit Time [s]"
    },
    "profilesRescueExitTimeHelp": {
        "message": "Collective is rate limited during this period to provide smooth transition to normal flight. This limits rapid application of negative collective if the Helicopter has rolled during rescue"
    },
    "profilesRescueFlipTime": {
        "message": "Flip Fail Time [s]"
    },
    "profilesRescueFlipTimeHelp": {
        "message": "Timeout for flip failure. If the helicopter is in rescue and is trying to flip to upright and does not do with the Rescue Flip Time, rescue will be aborted"
    },
    "profilesRescueAltHold": {
        "message": "Enable Altitude Hold"
    },
    "profilesRescueHoverAltitude": {
        "message": "Hover Altitude [m]"
    },
    "profilesRescueHoverAltitudeHelp": {
        "message": "Hovering altitude after rescue action"
    },
    "profilesRescueAltitudePGain": {
        "message": "Altitude P-Gain"
    },
    "profilesRescueAltitudePGainHelp": {
        "message": "P-gain for altitude control"
    },
    "profilesRescueAltitudeIGain": {
        "message": "Altitude I-Gain"
    },
    "profilesRescueAltitudeIGainHelp": {
        "message": "I-gain for altitude control"
    },
    "profilesRescueAltitudeDGain": {
        "message": "Altitude D-Gain"
    },
    "profilesRescueAltitudeDGainHelp": {
        "message": "D-gain for altitude control (vario)"
    },
    "profilesRescueMaxCollective": {
        "message": "Maximum Collective [%]"
    },
    "profilesRescueMaxCollectiveHelp": {
        "message": "Maximum Collective to apply for altitude control"
    },
    "rateSetupCopyRateProfile": {
        "message": "Copy rateprofile"
    },
    "rateSetupActivateProfile": {
        "message": "Loaded Rate Profile: <strong class=\"message-positive\">$1</strong>"
    },
    "rateSetupSubTab": {
        "message": "Rate Profile #$1"
    },
    "rateSetupSubTab1": {
        "message": "Rate Profile #1"
    },
    "rateSetupSubTab2": {
        "message": "Rate Profile #2"
    },
    "rateSetupSubTab3": {
        "message": "Rate Profile #3"
    },
    "rateSetupSubTab4": {
        "message": "Rate Profile #4"
    },
    "rateSetupSubTab5": {
        "message": "Rate Profile #5"
    },
    "rateSetupSubTab6": {
        "message": "Rate Profile #6"
    },
    "rateSetupRates": {
        "message": "Rates"
    },
    "rateSetupTuningHelp": {
        "message": "<b>Rates and Expo</b>: Determine your stick feel based on these parameters. Use the graph and live 3D model to find your favourite rate setting."
    },
    "rateSetupRatesType": {
        "message": "Rates Type"
    },
    "rateSetupRatesTypeTip": {
        "message": "Changing rates type will change the rates curve and the way you can set it"
    },
    "rateSetupRate": {
        "message": "Rate"
    },
    "rateSetupRcRate": {
        "message": "RC Rate"
    },
    "rateSetupRcExpo": {
        "message": "RC Expo"
    },
    "rateSetupRcRateRaceflight": {
        "message": "Rate"
    },
    "rateSetupRcExpoRaceflight": {
        "message": "Expo"
    },
    "rateSetupRateRaceflight": {
        "message": "Acro+"
    },
    "rateSetupRcExpoKISS": {
        "message": "RC Curve"
    },
    "rateSetupRateQuickRates": {
        "message": "Max Rate"
    },
    "rateSetupRcRateActual": {
        "message": "Center Sensitivity"
    },
    "rateSetupMaxVel": {
        "message": "Max Vel [°/s]"
    },
    "rateSetupRatesCurve": {
        "message": "Rates Curves"
    },
    "rateSetupRatesCurveTip": {
        "message": "Play with the rates and see how those affect the stick curve"
    },
    "rateSetupRatesPreview": {
        "message": "Rates Preview"
    },
    "rateSetupDynamic": {
        "message": "Dynamics"
    },
    "rateSetupAcceleration": {
        "message": "Max Acceleration [°/s²]"
    },
    "rateSetupResponse": {
        "message": "Response Time [ms]"
    },
    "gyroFilterSettings": {
        "message": "Gyro Filter Settings"
    },
    "gyroDTermFilterSettings": {
        "message": "Gyro D-term Filter Settings"
    },
    "gyroLowpassFiltersGroup": {
        "message": "Gyro Lowpass Filters"
    },
    "gyroLowpassFrequency": {
        "message": "Gyro Lowpass 1 Cutoff Frequency [Hz]"
    },
    "gyroLowpassType": {
        "message": "Gyro Lowpass 1 Filter Type"
    },
    "gyroLowpassDynMinFrequency": {
        "message": "Gyro Lowpass 1 Dynamic Min Cutoff Frequency [Hz]"
    },
    "gyroLowpassDynMaxFrequency": {
        "message": "Gyro Lowpass 1 Dynamic Max Cutoff Frequency [Hz]"
    },
    "gyroLowpass2Frequency": {
        "message": "Gyro Lowpass 2 Cutoff Frequency [Hz]"
    },
    "gyroLowpass2Type": {
        "message": "Gyro Lowpass 2 Filter Type"
    },
    "gyroLowpassFilterHelp": {
        "message": "The Gyro Lowpass Filters are used for cutting off excess noise in the gyro signal. Two filters can be used, either 1<sup>st</sup> or 2<sup>nd</sup> order. The first filter can be dynamic, changing its cutoff frequency with the main rotor RPM. The minimum and maximum are limiting the dynamic range. With RPM Filters or Dynamic Notch Filters, one extra filter is needed around 100Hz. Without them, two second order filters are required."
    },
    "gyroNotchFiltersGroup": {
        "message": "Gyro Notch Filters"
    },
    "gyroNotch1Frequency": {
        "message": "Gyro Notch Filter 1 Center Frequency [Hz]"
    },
    "gyroNotch2Frequency": {
        "message": "Gyro Notch Filter 2 Center Frequency [Hz]"
    },
    "gyroNotch1Cutoff": {
        "message": "Gyro Notch Filter 1 Cutoff Frequency [Hz]"
    },
    "gyroNotch2Cutoff": {
        "message": "Gyro Notch Filter 2 Cutoff Frequency [Hz]"
    },
    "gyroNotchFilterHelp": {
        "message": "The Notch Filters are used for filtering out additional resonances. Each filter has a Center and a Cutoff. The Center Frequency is the center of the filter and the Cutoff Frequency is where filter starts. For example with cutoff of 160 and center of 260, it means the range is 160-360Hz with most attenuation around the center."
    },
    "gyroDynamicNotchFilterGroup": {
        "message": "Dynamic Notch Filter"
    },
    "gyroDynamicNotchFilterSettings": {
        "message": "Gyro Dynamic Notch Filter Settings"
    },
    "gyroDynamicNotchFilterHelp": {
        "message": "Dynamic Notch Filter tracks peak noise frequencies in the gyro signal and places notch filters at those frequencies automatically."
    },
    "gyroDynamicNotchCount": {
        "message": "Dynamic Notch Count"
    },
    "gyroDynamicNotchQ": {
        "message": "Dynamic Notch Q"
    },
    "gyroDynamicNotchMinHz": {
        "message": "Dynamic Notch Minimum Frequency"
    },
    "gyroDynamicNotchMaxHz": {
        "message": "Dynamic Notch Maximum Frequency"
    },
    "gyroDynamicNotchCountHelp": {
        "message": "Select the number of dynamic notch filters. If used standalone without the RPM filters, 4-6 is recommended. With the RPM filters, 2-4 is recommended."
    },
    "gyroDynamicNotchQHelp": {
        "message": "The Q factor adjusts how wide the dynamic notch filters are. A higher value makes it narrower and more selective, and a lower value makes it wider and broader. Values between 2.0 and 4.0 are recommended. A value lower than 2.0 will greatly increase filter delay and may degrade flight performance."
    },
    "gyroDynamicNotchMinHzHelp": {
        "message": "Set this to the lowest incoming noise frequency that is needed to be filtered. Should be lower than main rotor frequency, but no lower that 20Hz, which is eqivalent to 1200rpm."
    },
    "gyroDynamicNotchMaxHzHelp": {
        "message": "Set this to the highest incoming noise frequency that is needed to be filtered. Should be 10-20% higher than the max tail rotor frequency, but no higher than 250Hz, if filter rate is 1k. If filter rate is 2k or higher, then 330-500 Hz can be used, especially for smaller helis with a motorised tail (higher range means less precision and lower performance)."
    },
    "gyroDTermLowpassFiltersGroup": {
        "message": "D Term Lowpass Filters"
    },
    "gyroDTermLowpassType": {
        "message": "D Term Lowpass 1 Filter Type"
    },
    "gyroDTermLowpassFrequency": {
        "message": "D Term Lowpass 1 Cutoff Frequency [Hz]"
    },
    "gyroDTermLowpass2Frequency": {
        "message": "D Term Lowpass 2 Cutoff Frequency [Hz]"
    },
    "gyroDTermLowpass2Type": {
        "message": "D Term Lowpass 2 Filter Type"
    },
    "gyroDTermLowpassDynMinFrequency": {
        "message": "D Term Lowpass 1 Dynamic Min Cutoff Frequency [Hz]"
    },
    "gyroDTermLowpassDynMaxFrequency": {
        "message": "D Term Lowpass 1 Dynamic Max Cutoff Frequency [Hz]"
    },
    "gyroDTermNotchFiltersGroup": {
        "message": "D Term Notch Filters"
    },
    "gyroDTermNotchFrequency": {
        "message": "D Term Notch Filter Center Frequency [Hz]"
    },
    "gyroDTermNotchCutoff": {
        "message": "D Term Notch Filter Cutoff Frequency [Hz]"
    },
    "gyroRpmFilterSettings": {
        "message": "Gyro RPM Notch Filter Settings"
    },
    "gyroRpmFilterSetup": {
        "message": "Setup Type"
    },
    "gyroRpmFilterSetupBasic": {
        "message": "Basic"
    },
    "gyroRpmFilterSetupAdvanced": {
        "message": "Advanced"
    },
    "gyroRpmFilterSetupCustom": {
        "message": "Custom"
    },
    "gyroRpmFilterConfigNote": {
        "message": "<b>Warning:</b> RPM Notch Filter requires a reliable motor RPM, either from Dshot RPM telemetry or an RPM Sensor. ESC telemetry is not suitable."
    },
    "gyroRpmFilterCustomNote": {
        "message": "<span class=\"message-negative\">Warning:</span> Custom RPM Notch Filter configuration is in use.<br>Please use the CLI to change the RPM Filter settings."
    },
    "gyroRpmFilterVibrationLevel": {
        "message": "Vibration Level"
    },
    "gyroRpmFilterVibrationLow": {
        "message": "Low"
    },
    "gyroRpmFilterVibrationMedium": {
        "message": "Medium"
    },
    "gyroRpmFilterVibrationHigh": {
        "message": "High"
    },
    "gyroRpmFilterMainRotorMinRPM": {
        "message": "Main Rotor Minimum Filtered RPM"
    },
    "gyroRpmFilterMainRotorMinRPMHelp": {
        "message": "Minimum Main Rotor RPM accepted by the filters"
    },
    "gyroRpmFilterTailRotorMinRPM": {
        "message": "Tail Rotor Minimum Filtered RPM"
    },
    "gyroRpmFilterTailRotorMinRPMHelp": {
        "message": "Minimum Tail Rotor RPM accepted by the filters"
    },
    "gyroRpmFilterBanks": {
        "message": "Gyro RPM Notch Filter Banks"
    },
    "gyroRpmFilterHelp": {
        "message": "RPM controlled filtering is a bank of notch filters on gyro which use the RPM telemetry data to remove noise with surgical precision.<br /><br /><b><span class=\"message-positive\">IMPORTANT</span>: The ESC must support the Bidirectional DShot protocol and the value of the $t(configurationMotorPoles.message) in the $t(tabMotors.message) tab must be correct for this filter to work.</b>"
    },
    "gyroRpmFilterMainRotorGroup": {
        "message": "Main Rotor Notch Filters"
    },
    "gyroRpmFilterMainRotorHelp": {
        "message": "RPM controlled filters for the main rotor harmonics"
    },
    "gyroRpmFilterTailRotorGroup": {
        "message": "Tail Rotor Notch Filters"
    },
    "gyroRpmFilterTailRotorHelp": {
        "message": "RPM controlled filters for the tail rotor harmonics"
    },
    "gyroRpmFilterMainMotorGroup": {
        "message": "Main Motor Notch Filters"
    },
    "gyroRpmFilterMainMotorHelp": {
        "message": "RPM controlled filters for the main motor harmonics"
    },
    "gyroRpmFilterTailMotorGroup": {
        "message": "Tail Motor Notch Filters"
    },
    "gyroRpmFilterTailMotorHelp": {
        "message": "RPM controlled filters for the tail motor harmonics"
    },
    "gyroRpmFilterH1": {
        "message": "Fundamental Frequency Notch type"
    },
    "gyroRpmFilterQ1": {
        "message": "Fundamental Frequency Notch Q"
    },
    "gyroRpmFilterH2": {
        "message": "2<sup>nd</sup> Harmonic Notch Type"
    },
    "gyroRpmFilterQ2": {
        "message": "2<sup>nd</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterH3": {
        "message": "3<sup>rd</sup> Harmonic Notch Type"
    },
    "gyroRpmFilterQ3": {
        "message": "3<sup>rd</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterH4": {
        "message": "4<sup>th</sup> Harmonic Notch Type"
    },
    "gyroRpmFilterQ4": {
        "message": "4<sup>th</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterQ5": {
        "message": "5<sup>th</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterQ6": {
        "message": "6<sup>th</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterQ7": {
        "message": "7<sup>th</sup> Harmonic Notch Q"
    },
    "gyroRpmFilterQ8": {
        "message": "8<sup>th</sup> Harmonic Notch Q"
    },
    "dialogGyroResetTitle": {
        "message": "<span class=\"message-negative\">Warning:</span> RPM Filter Reset"
    },
    "dialogGyroResetNote": {
        "message": "Changing the Setup Type will reset any custom RPM filter settings to defaults."
    },
    "dialogGyroResetAccept": {
        "message": "Accept"
    },
    "dialogGyroResetRevert": {
        "message": "Revert"
    },
    "failsafeFeaturesHelpNew": {
        "message": "Failsafe has two stages. <strong>Stage 1</strong> is entered when a flightchannel has an invalid pulse length, the receiver reports failsafe mode or there is no signal from the receiver at all, the channel fallback settings are applied to <span class=\"message-negative\">all channels</span> and a short amount of time is provided to allow for recovery. <strong>Stage 2</strong> is entered when the error condition takes longer than the configured guard time while the craft is <span class=\"message-negative\">armed</span>, all channels will remain at the applied channel fallback setting unless overruled by the chosen procedure. <br /><strong>Note:</strong> Prior to entering stage 1, channel fallback settings are also applied to individual AUX channels that have invalid pulses."
    },
    "failsafePulsrangeTitle": {
        "message": "Valid Pulse Range Settings"
    },
    "failsafePulsrangeHelp": {
        "message": "Pulses shorter than minimum or longer than maximum are invalid and will trigger application of individual channel fallback settings for AUX channels or entering stage 1 for flightchannels"
    },
    "failsafeRxMinUsecItem": {
        "message": "Minimum length"
    },
    "failsafeRxMaxUsecItem": {
        "message": "Maximum length"
    },
    "failsafeChannelFallbackSettingsTitle": {
        "message": "Channel Fallback Settings"
    },
    "failsafeChannelFallbackSettingsHelp": {
        "message": "These settings are applied to invalid individual AUX channels or to all channels when entering stage 1. <strong>Note:</strong> values are saved in steps of 5µs, so smaller changes may be ignored."
    },
    "failsafeChannelFallbackSettingsAuto": {
        "message": "<strong>Auto</strong> means Roll, Pitch and Yaw to center and Throttle low. <strong>Hold</strong> means maintain the last good value received"
    },
    "failsafeChannelFallbackSettingsHold": {
        "message": "<strong>Hold</strong> means maintain the last good value received. <strong>Set</strong> means the value given here will be used"
    },
    "failsafeChannelFallbackOptionAuto": {
        "message": "Auto"
    },
    "failsafeChannelFallbackOptionHold": {
        "message": "Hold"
    },
    "failsafeChannelFallbackOptionSet": {
        "message": "Set"
    },
    "failsafeStageTwoSettingsTitle": {
        "message": "Stage 2 - Settings"
    },
    "failsafeDelayItem": {
        "message": "Guard time for stage 2 activation after signal lost [s]"
    },
    "failsafeDelayHelp": {
        "message": "Time for stage 1 to wait for recovery"
    },
    "failsafeThrottleLowItem": {
        "message": "Failsafe Throttle Low Delay [s]"
    },
    "failsafeThrottleLowHelp": {
        "message": "Just disarm the craft instead of executing the selected failsafe procedure when the throttle was low for this amount of time"
    },
    "failsafeThrottleItem": {
        "message": "Throttle value used while landing"
    },
    "failsafeOffDelayItem": {
        "message": "Delay for turning off the Motors during Failsafe [s]"
    },
    "failsafeOffDelayHelp": {
        "message": "Time to stay in landing mode until the motors are turned off and the craft is disarmed"
    },
    "failsafeSubTitle1": {
        "message": "Stage 2 - Failsafe Procedure"
    },
    "failsafeProcedureItemSelect1": {
        "message": "Land"
    },
    "failsafeProcedureItemSelect2": {
        "message": "Drop"
    },
    "failsafeProcedureItemSelect4": {
        "message": "GPS Rescue"
    },
    "failsafeGpsRescueItemAngle": {
        "message": "Angle"
    },
    "failsafeGpsRescueItemInitialAltitude": {
        "message": "Initial altitude (meters)"
    },
    "failsafeGpsRescueItemDescentDistance": {
        "message": "Descent distance (meters)"
    },
    "failsafeGpsRescueItemGroundSpeed": {
        "message": "Ground speed (meters/second)"
    },
    "failsafeGpsRescueItemThrottleMin": {
        "message": "Throttle minimum"
    },
    "failsafeGpsRescueItemThrottleMax": {
        "message": "Throttle maximum"
    },
    "failsafeGpsRescueItemThrottleHover": {
        "message": "Throttle hover"
    },
    "failsafeGpsRescueItemAscendRate": {
        "message": "Ascend rate (meters/second)"
    },
    "failsafeGpsRescueItemDescendRate": {
        "message": "Descend rate (meters/second)"
    },
    "failsafeGpsRescueItemMinSats": {
        "message": "Minimum satellites"
    },
    "failsafeGpsRescueItemAllowArmingWithoutFix": {
        "message": "Allow arming without fix - <span class=\"message-negative\">WARNING: the GPS Rescue will not be available</span>"
    },
    "failsafeGpsRescueItemAltitudeMode": {
        "message": "Altitude mode"
    },
    "failsafeGpsRescueItemAltitudeModeMaxAlt": {
        "message": "Maximum altitude"
    },
    "failsafeGpsRescueItemAltitudeModeFixedAlt": {
        "message": "Fixed altitude"
    },
    "failsafeGpsRescueItemAltitudeModeCurrentAlt": {
        "message": "Current altitude"
    },
    "failsafeGpsRescueItemSanityChecks": {
        "message": "Sanity checks"
    },
    "failsafeGpsRescueItemSanityChecksOff": {
        "message": "Off"
    },
    "failsafeGpsRescueItemSanityChecksOn": {
        "message": "On"
    },
    "failsafeGpsRescueItemSanityChecksFSOnly": {
        "message": "Failsafe only"
    },
    "failsafeKillSwitchItem": {
        "message": "Failsafe Kill Switch (setup Failsafe in Modes Tab)"
    },
    "failsafeKillSwitchHelp": {
        "message": "Set this option to make the failsafe switch (Modes Tab) act as a direct kill switch, bypassing the selected failsafe procedure. <strong>Note:</strong> Arming is blocked with the failsafe kill switch in the ON position"
    },
    "failsafeSwitchTitle": {
        "message": "Failsafe Test Switch"
    },
    "failsafeSwitchModeItem": {
        "message": "Failsafe Switch Action"
    },
    "failsafeSwitchModeHelp": {
        "message": "This option determines what happens when Failsafe is activated through AUX switch:<br/><strong>Stage 1</strong> activates Stage 1 failsafe. This is useful if you want to simulate the exact signal loss failsafe behavior.<br/><strong>Stage 2</strong> skips Stage 1 and activates the Stage 2 procedure immediately<br/><strong>Kill</strong> disarms instantly (your craft will crash)"
    },
    "failsafeSwitchOptionStage1": {
        "message": "Stage 1"
    },
    "failsafeSwitchOptionStage2": {
        "message": "Stage 2"
    },
    "failsafeSwitchOptionKill": {
        "message": "Kill"
    },
    "powerBatteryVoltageMeterSource": {
        "message": "Battery Voltage Source"
    },
    "powerBatteryVoltageMeterTypeNone": {
        "message": "None"
    },
    "powerBatteryVoltageMeterTypeAdc": {
        "message": "Battery ADC"
    },
    "powerBatteryVoltageMeterTypeEsc": {
        "message": "ESC Telemetry"
    },
    "powerBatteryCurrentMeterSource": {
        "message": "Battery Current Source"
    },
    "powerBatteryCurrentMeterTypeNone": {
        "message": "None"
    },
    "powerBatteryCurrentMeterTypeAdc": {
        "message": "Battery ADC"
    },
    "powerBatteryCurrentMeterTypeEsc": {
        "message": "ESC Telemetry"
    },
    "powerBatteryCurrentMeterTypeMsp": {
        "message": "MSP Sensor"
    },
    "powerBatteryMinimumCellVoltage": {
        "message": "Minimum Cell Voltage"
    },
    "powerBatteryMaximumCellVoltage": {
        "message": "Maximum Cell Voltage"
    },
    "powerBatteryFullCellVoltage": {
        "message": "Full Cell Voltage"
    },
    "powerBatteryWarningCellVoltage": {
        "message": "Warning Cell Voltage"
    },
    "powerCalibrationManagerButton": {
        "message": "Calibration"
    },
    "powerCalibrationManagerTitle": {
        "message": "Calibration Manager"
    },
    "powerCalibrationManagerHelp": {
        "message": "To calibrate, use a multimeter to measure the actual voltage / current draw on your craft (with a battery plugged in), and enter the values below. Then, with the same battery still plugged in, click [Calibrate]."
    },
    "powerCalibrationManagerNote": {
        "message": "<strong>Note:</strong> Before calibrating the scale make sure that divider and multiplier for voltage and offset for current is set properly.<br>Leaving the values at 0 will not apply calibration.</br><strong>Remember to remove rotor blades before plugging in a battery!</strong>"
    },
    "powerCalibrationManagerWarning": {
        "message": "<span class=\"message-negative\">Warning:</span> The battery <span class=\"message-negative\">is not plugged in</span> or voltage and current meter sources are <span class=\"message-negative\">not set properly.</span> Make sure that the voltage and/or current are reading a value above 0. Otherwise you will not be able to calibrate using this tool."
    },
    "powerCalibrationManagerSourceNote": {
        "message": "<span class=\"message-negative\">Warning:</span> Voltage and/or current meter sources <strong>have been changed but not saved.</strong> Please set the correct meter sources and save them before trying to calibrate."
    },
    "powerCalibrationManagerConfirmationTitle": {
        "message": "Calibration Manager Confirmation"
    },
    "powerCalibrationSave": {
        "message": "Calibrate"
    },
    "powerCalibrationApply": {
        "message": "Apply Calibration"
    },
    "powerCalibrationDiscard": {
        "message": "Discard Calibration"
    },
    "powerCalibrationConfirmHelp": {
        "message": "New calibrated scales are shown here. <br>Applying them will set the scales but <strong>will not save them.</strong></br> <br>After saving make sure that the new voltage and current are correct.</br>"
    },
    "powerVoltageHead": {
        "message": "Voltage Meters"
    },
    "powerVoltageValue": {
        "message": "$1 V"
    },
    "powerVoltageCalibration": {
        "message": "Measured Voltage"
    },
    "powerVoltageCalibratedScale": {
        "message": "Calibrated Voltage Scale:"
    },
    "powerVoltageId10": {
        "message": "Battery"
    },
    "powerVoltageId20": {
        "message": "BEC"
    },
    "powerVoltageId30": {
        "message": "5V"
    },
    "powerVoltageId40": {
        "message": "EXT"
    },
    "powerVoltageId50": {
        "message": "MCU"
    },
    "powerVoltageId100": {
        "message": "ESC Combined"
    },
    "powerVoltageId101": {
        "message": "ESC 1"
    },
    "powerVoltageId102": {
        "message": "ESC 2"
    },
    "powerVoltageId103": {
        "message": "ESC 3"
    },
    "powerVoltageId104": {
        "message": "ESC 4"
    },
    "powerVoltageId200": {
        "message": "Cell 1"
    },
    "powerVoltageId201": {
        "message": "Cell 2"
    },
    "powerVoltageId202": {
        "message": "Cell 3"
    },
    "powerVoltageId203": {
        "message": "Cell 4"
    },
    "powerVoltageId204": {
        "message": "Cell 5"
    },
    "powerVoltageId205": {
        "message": "Cell 6"
    },
    "powerVoltageId206": {
        "message": "Cell 7"
    },
    "powerVoltageId207": {
        "message": "Cell 8"
    },
    "powerVoltageId208": {
        "message": "Cell 9"
    },
    "powerVoltageId209": {
        "message": "Cell 10"
    },
    "powerVoltageId210": {
        "message": "Cell 11"
    },
    "powerVoltageId211": {
        "message": "Cell 12"
    },
    "powerVoltageId212": {
        "message": "Cell 13"
    },
    "powerVoltageId214": {
        "message": "Cell 14"
    },
    "powerVoltageScale": {
        "message": "Scale"
    },
    "powerVoltageDivider": {
        "message": "Divider"
    },
    "powerVoltageMultiplier": {
        "message": "Multiplier"
    },
    "powerAmperageHead": {
        "message": "Current Meters"
    },
    "powerAmperageValue": {
        "message": "$1 A"
    },
    "powerAmperageId10": {
        "message": "Battery"
    },
    "powerAmperageId100": {
        "message": "ESC Combined"
    },
    "powerAmperageId101": {
        "message": "ESC 1"
    },
    "powerAmperageId102": {
        "message": "ESC 2"
    },
    "powerAmperageId103": {
        "message": "ESC 3"
    },
    "powerAmperageId104": {
        "message": "ESC 4"
    },
    "powerMahValue": {
        "message": "$1 mAh"
    },
    "powerChargeLevel": {
        "message": "$1 %"
    },
    "powerAmperageScale": {
        "message": "Scale [1/10th mV/A]"
    },
    "powerAmperageOffset": {
        "message": "Offset [mA]"
    },
    "powerAmperageCalibration": {
        "message": "Measured Current"
    },
    "powerAmperageCalibratedScale": {
        "message": "Calibrated Current Scale:"
    },
    "powerBatteryHead": {
        "message": "Battery"
    },
    "powerStateHead": {
        "message": "Power State"
    },
    "powerBatteryConnected": {
        "message": "Connected"
    },
    "powerBatteryConnectedValueYes": {
        "message": "Yes (Cells: $1)"
    },
    "powerBatteryConnectedValueNo": {
        "message": "No"
    },
    "powerBatteryVoltage": {
        "message": "Voltage"
    },
    "powerBatteryCurrentDrawn": {
        "message": "mAh used"
    },
    "powerBatteryChargeLevel": {
        "message": "Charge level"
    },
    "powerBatteryAmperage": {
        "message": "Current"
    },
    "powerBatteryCapacity": {
        "message": "Capacity [mAh]"
    },
    "powerBatteryCellCount": {
        "message": "Cell count"
    },
    "osdSetupTitle": {
        "message": "OSD"
    },
    "osdSetupNoOsdChipDetectWarning": {
        "message": "<span class=\"message-negative\"><b>WARNING:</b></span> No OSD chip was detected. Some flight controllers will not properly power the OSD chip unless connected to battery power. Please connect the battery before connecting the USB (PROPS REMOVED!)."
    },
    "osdSetupPreviewHelp": {
        "message": "<strong>Note:</strong> OSD preview may not show the actual font that is installed on the flight controller. The layout of individual elements may look different when older versions of the firmware are used - please check the look through your goggles before flying."
    },
    "osdSetupUnsupportedNote1": {
        "message": "Your flight controller isn't responding to OSD commands. This probably means that it does not have an integrated BetaFlight OSD."
    },
    "osdSetupUnsupportedNote2": {
        "message": "Note that some flight controllers have an onboard <a href=\"https://www.youtube.com/watch?v=ikKH_6SQ-Tk\" target=\"_blank\" rel=\"noopener noreferrer\">MinimOSD</a> that can be flashed and configured with <a href=\"https://github.com/ShikOfTheRa/scarab-osd/releases/latest\" target='_blank'>scarab-osd</a>, however the MinimOSD cannot be configured through this interface."
    },
    "osdSetupProfilesTitle": {
        "message": "OSD Profile number",
        "description": "Description of the header of the OSD elements column associated to each profile"
    },
    "osdSetupElementsTitle": {
        "message": "Elements"
    },
    "osdSetupPreviewTitle": {
        "message": "Drag elements to change position",
        "description": "Indicates in the preview window of the OSD that the user can drag the elements to reorder them"
    },
    "osdSetupPreviewSelectProfileTitle": {
        "message": "Preview for",
        "description": "Label of the selector for the OSD Profile in the preview. KEEP IT SHORT!!!"
    },
    "osdSetupPreviewForTitle": {
        "message": "Changing here the profile or the font will NOT change the profile or the font in the flight controller, only affects the preview window. If you want to change it, you must use the '$t(osdSetupSelectedProfileTitle.message)' option or the '$t(osdSetupFontManager.message)' button respectively.",
        "description": "Help content for the OSD profile and font PREVIEW"
    },
    "osdSetupSelectedProfileTitle": {
        "message": "Active OSD Profile",
        "description": "Title of the box to select the current active OSD profile"
    },
    "osdSetupSelectedProfileLabel": {
        "message": "Current:",
        "description": "Label for the selection of the curren active OSD profile"
    },
    "osdSetupPreviewSelectProfileElement": {
        "message": "OSD Profile {{profileNumber}}",
        "description": "Content of the selector for the OSD Profile in the preview"
    },
    "osdSetupPreviewSelectFontElement": {
        "message": "Font {{fontName}}",
        "description": "Content of the selector for the OSD Font in the preview"
    },
    "osdSetupVideoFormatTitle": {
        "message": "Video Format"
    },
    "osdSetupVideoFormatOptionAuto": {
        "message": "Auto",
        "description": "Option for the video format in the OSD"
    },
    "osdSetupVideoFormatOptionPal": {
        "message": "PAL",
        "description": "Option for the video format in the OSD"
    },
    "osdSetupVideoFormatOptionNtsc": {
        "message": "NTSC",
        "description": "Option for the video format in the OSD"
    },
    "osdSetupUnitsTitle": {
        "message": "Units"
    },
    "osdSetupUnitsOptionImperial": {
        "message": "Imperial",
        "description": "Option for the units system used in the OSD"
    },
    "osdSetupUnitsOptionMetric": {
        "message": "Metric",
        "description": "Option for the units system used in the OSD"
    },
    "osdSetupUnitsOptionBritish": {
        "message": "British",
        "description": "Option for the units system used in the OSD"
    },
    "osdSetupTimersTitle": {
        "message": "Timers"
    },
    "osdSetupAlarmsTitle": {
        "message": "Alarms"
    },
    "osdSetupStatsTitle": {
        "message": "Post Flight Statistics"
    },
    "osdSetupVtxTitle": {
        "message": "VTX Settings"
    },
    "osdSetupCraftNameTitle": {
        "message": "Craft Name"
    },
    "osdSetupWarningsTitle": {
        "message": "Warnings"
    },
    "osdSetupFontPresets": {
        "message": "Font presets:"
    },
    "osdSetupFontPresetsSelector": {
        "message": "Select Font Presets:"
    },
    "osdSetupFontPresetsSelectorCustomOption": {
        "message": "User supplied font",
        "description": "Option to show as selected when the user selects a custom local font"
    },
    "osdSetupFontPresetsSelectorOr": {
        "message": "or"
    },
    "osdSetupOpenFont": {
        "message": "Open Font File"
    },
    "osdSetupCustomLogoTitle": {
        "message": "Boot logo:"
    },
    "osdSetupCustomLogoOpenImageButton": {
        "message": "Select custom image&hellip;"
    },
    "osdSetupCustomLogoInfoTitle": {
        "message": "Custom image:"
    },
    "osdSetupCustomLogoInfoImageSize": {
        "message": "Size must be $t(logoWidthPx)×$t(logoHeightPx) pixels"
    },
    "osdSetupCustomLogoInfoColorMap": {
        "message": "Must contain green, black and white pixels"
    },
    "osdSetupCustomLogoInfoUploadHint": {
        "message": "Click <b>$t(osdSetupUploadFont.message)</b> to persist custom logo"
    },
    "osdSetupCustomLogoImageSizeError": {
        "message": "Invalid image size: {{width}}×{{height}} (expected $t(logoWidthPx)×$t(logoHeightPx))"
    },
    "osdSetupCustomLogoColorMapError": {
        "message": "The image contains an invalid pixel: rgb({{valueR}}, {{valueG}}, {{valueB}}) at coordinates {{posX}}×{{posY}}"
    },
    "osdSetupUploadFont": {
        "message": "Upload Font"
    },
    "osdSetupUploadingFont": {
        "message": "Uploading..."
    },
    "osdSetupUploadingFontEnd": {
        "message": "Uploaded all {{length}} characters to the OSD"
    },
    "osdSetupSave": {
        "message": "Save"
    },
    "osdSetupFontManager": {
        "message": "Font Manager"
    },
    "osdSetupHead": {
        "message": "Info"
    },
    "osdSetupVideoMode": {
        "message": "Video Mode"
    },
    "osdSetupCameraConnected": {
        "message": "Camera Connected"
    },
    "osdSetupResetText": {
        "message": "Reset OSD to default"
    },
    "osdSetupButtonReset": {
        "message": "Reset Settings"
    },
    "osdTextElementMainBattVoltage": {
        "message": "Battery voltage",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementMainBattVoltage": {
        "message": "Instantaneous main battery voltage (flashes when below alarm threshold)"
    },
    "osdTextElementRssiValue": {
        "message": "RSSI value",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRssiValue": {
        "message": "Instantaneous RSSI value (flashes when below alarm threshold)"
    },
    "osdTextElementTimer": {
        "message": "Timer",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementTimer": {
        "message": "A flight timer"
    },
    "osdTextElementThrottlePosition": {
        "message": "Throttle position",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementThrottlePosition": {
        "message": "Current throttle channel value"
    },
    "osdTextElementCpuLoad": {
        "message": "CPU load",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCpuLoad": {
        "message": "Current CPU load"
    },
    "osdTextElementVtxChannel": {
        "message": "VTX channel",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementVtxChannel": {
        "message": "Current VTX channel and power"
    },
    "osdTextElementVoltageWarning": {
        "message": "Battery voltage warning",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementVoltageWarning": {
        "message": "Shows a warning when the voltage is under the alarm value"
    },
    "osdTextElementArmed": {
        "message": "Armed",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementArmed": {
        "message": "Textual armed message"
    },
    "osdTextElementDisarmed": {
        "message": "Disarmed",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementDisarmed": {
        "message": "Textual disarmed message"
    },
    "osdTextElementCrosshairs": {
        "message": "Crosshairs",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCrosshairs": {
        "message": "Center of screen crosshair"
    },
    "osdTextElementArtificialHorizon": {
        "message": "Artificial horizon",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementArtificialHorizon": {
        "message": "Graphical artificial horizon indicator"
    },
    "osdTextElementHorizonSidebars": {
        "message": "Artificial horizon sidebars",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementHorizonSidebars": {
        "message": "Sidebars around artificial horizon indicator"
    },
    "osdTextElementCurrentDraw": {
        "message": "Battery current draw",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCurrentDraw": {
        "message": "Instantaneous battery current draw"
    },
    "osdTextElementMahDrawn": {
        "message": "Battery current mAh drawn",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementMahDrawn": {
        "message": "Total battery capacity used"
    },
    "osdTextElementCraftName": {
        "message": "Craft name",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCraftName": {
        "message": "Craft name as set in Configuration tab"
    },
    "osdTextElementAltitude": {
        "message": "Altitude",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementAltitude": {
        "message": "Current altitude (flashes when above alarm threshold)"
    },
    "osdTextElementOnTime": {
        "message": "On time",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementOnTime": {
        "message": "Total time the craft has been powered on"
    },
    "osdTextElementFlyTime": {
        "message": "Fly time",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementFlyTime": {
        "message": "Total time the craft has been armed in the current power cycle (flashes when above alarm threshold)"
    },
    "osdTextElementFlyMode": {
        "message": "Fly mode",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementFlyMode": {
        "message": "Current flight mode"
    },
    "osdTextElementGPSSpeed": {
        "message": "GPS speed",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementGPSSpeed": {
        "message": "GPS provided speed"
    },
    "osdTextElementGPSSats": {
        "message": "GPS sats",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementGPSSats": {
        "message": "Number of satellites providing GPS fix"
    },
    "osdTextElementGPSLon": {
        "message": "GPS longitude",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementGPSLon": {
        "message": "GPS longitude coordinate"
    },
    "osdTextElementGPSLat": {
        "message": "GPS latitude",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementGPSLat": {
        "message": "GPS latitude coordinate"
    },
    "osdTextElementDebug": {
        "message": "Debug",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementDebug": {
        "message": "Debug variables"
    },
    "osdTextElementPIDRoll": {
        "message": "PID roll",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPIDRoll": {
        "message": "Roll axis PID gains"
    },
    "osdTextElementPIDPitch": {
        "message": "PID pitch",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPIDPitch": {
        "message": "Pitch axis PID gains"
    },
    "osdTextElementPIDYaw": {
        "message": "PID yaw",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPIDYaw": {
        "message": "Yaw axis PID gains"
    },
    "osdTextElementPower": {
        "message": "Power",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPower": {
        "message": "Instantaneous electrical power consumption"
    },
    "osdTextElementPIDRateProfile": {
        "message": "Profile: PID and rate",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPIDRateProfile": {
        "message": "Numerical display of the active PID and rate profiles"
    },
    "osdTextElementBatteryWarning": {
        "message": "Battery warning",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementBatteryWarning": {
        "message": "Warning text that appears when the battery voltage falls below warning threshold"
    },
    "osdTextElementAvgCellVoltage": {
        "message": "Battery average cell voltage",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementAvgCellVoltage": {
        "message": "Average cell voltage (main battery voltage / cell count)"
    },
    "osdTextElementPitchAngle": {
        "message": "Angle: pitch",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPitchAngle": {
        "message": "Numerical pitch angle in degrees"
    },
    "osdTextElementRollAngle": {
        "message": "Angle: roll",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRollAngle": {
        "message": "Numerical roll angle in degrees"
    },
    "osdTextElementMainBattUsage": {
        "message": "Battery usage",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementMainBattUsage": {
        "message": "Graphical representation of battery capacity usage"
    },
    "osdTextElementArmedTime": {
        "message": "Timer: armed time",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementArmedTime": {
        "message": "Time since the craft was last armed"
    },
    "osdTextElementHomeDirection": {
        "message": "Home direction",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementHomeDirection": {
        "message": "Arrow showing direction to home position"
    },
    "osdTextElementHomeDistance": {
        "message": "Home distance",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementHomeDistance": {
        "message": "Distance to home position (in either feet or metre based on unit system setting)"
    },
    "osdTextElementNumericalHeading": {
        "message": "Numerical heading",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementNumericalHeading": {
        "message": "Numerical readout of current heading in degrees"
    },
    "osdTextElementNumericalVario": {
        "message": "Numerical vario",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementNumericalVario": {
        "message": "Numerical readout of vertical speed (in either feet or metre based on unit system setting)"
    },
    "osdTextElementCompassBar": {
        "message": "Compass bar",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCompassBar": {
        "message": "Graphical compass bar showing current heading"
    },
    "osdTextElementWarnings": {
        "message": "Warnings",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementWarnings": {
        "message": "Alerts (e.g. low battery), warnings (e.g. reasons for not arming, critically low battery) and visual beeper (4 flashing asterisks)."
    },
    "osdTextElementEscTemperature": {
        "message": "ESC temperature",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementEscTemperature": {
        "message": "Temperature reported by ESC telemetry"
    },
    "osdTextElementEscRpm": {
        "message": "ESC RPM",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementEscRpm": {
        "message": "RPM reported by ESC telemetry"
    },
    "osdTextElementRemaningTimeEstimate": {
        "message": "Timer: remaining time estimate",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRemaningTimeEstimate": {
        "message": "Estimate of flight time remaning"
    },
    "osdTextElementRtcDateTime": {
        "message": "RTC date and time",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRtcDateTime": {
        "message": "Real time clock date / time"
    },
    "osdTextElementAdjustmentRange": {
        "message": "Adjustment range",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementAdjustmentRange": {
        "message": "Currently active adjustment range setting and value"
    },
    "osdTextElementTimer1": {
        "message": "Timer 1",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementTimer1": {
        "message": "Shows the value of timer 1"
    },
    "osdTextElementTimer2": {
        "message": "Timer 2",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementTimer2": {
        "message": "Shows the value of timer 2"
    },
    "osdTextElementCoreTemperature": {
        "message": "Core temperature",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCoreTemperature": {
        "message": "Temperature of the STM32 MCU core"
    },
    "osdTextAntiGravity": {
        "message": "Anti gravity",
        "description": "One of the elements of the OSD"
    },
    "osdDescAntiGravity": {
        "message": "Enables an indicator when the anti gravity is active"
    },
    "osdTextGForce": {
        "message": "G force",
        "description": "One of the elements of the OSD"
    },
    "osdDescGForce": {
        "message": "Shows how much G-Force the craft is experiencing"
    },
    "osdTextElementMotorDiag": {
        "message": "Motor diagnostics",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementMotorDiag": {
        "message": "Shows a graph of the output of each motor"
    },
    "osdTextElementLogStatus": {
        "message": "Blackbox log status",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementLogStatus": {
        "message": "Blackbox number and warnings"
    },
    "osdTextElementFlipArrow": {
        "message": "Flip after crash arrow",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementFlipArrow": {
        "message": "Arrow showing which side motors are up in turtle mode"
    },
    "osdTextElementLinkQuality": {
        "message": "Link quality",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementLinkQuality": {
        "message": "Alternative indicator for 'link quality' based on frame loss - use with caution"
    },
    "osdTextElementFlightDist": {
        "message": "Flight distance",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementFlightDist": {
        "message": "Distance flown during this flight."
    },
    "osdTextElementStickOverlayLeft": {
        "message": "Stick overlay left",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementStickOverlayLeft": {
        "message": "Overlay for the left transmitter stick position."
    },
    "osdTextElementStickOverlayRight": {
        "message": "Stick overlay right",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementStickOverlayRight": {
        "message": "Overlay for the right transmitter stick position."
    },
    "osdTextElementDisplayName": {
        "message": "Display name",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementDisplayName": {
        "message": "Display name as set by the \"display_name\" cli command"
    },
    "osdTextElementEscRpmFreq": {
        "message": "ESC RPM frequency",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementEscRpmFreq": {
        "message": "RPM frequency reported by ESC telemetry"
    },
    "osdTextElementRateProfileName": {
        "message": "Profile: rate profile name",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRateProfileName": {
        "message": "Shows the current rate profile name"
    },
    "osdTextElementPidProfileName": {
        "message": "Profile: PID profile name",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementPidProfileName": {
        "message": "Shows the current PID profile name"
    },
    "osdTextElementOsdProfileName": {
        "message": "Profile: OSD profile name",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementOsdProfileName": {
        "message": "OSD profile name as set in the \"osd_profile_1_name\", \"osd_profile_2_name\" and \"osd_profile_3_name\" CLI variables"
    },
    "osdTextElementRssiDbmValue": {
        "message": "RSSI dBm value",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRssiDbmValue": {
        "message": "Value in dBm of the RSSI signal if available"
    },
    "osdTextElementRcChannels": {
        "message": "RC Channels",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementRcChannels": {
        "message": "Display at most 4 channels values. The channels must be specified with the CLI variable 'osd_rcchannels'"
    },
    "osdTextElementCameraFrame": {
        "message": "Camera frame",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementCameraFrame": {
        "message": "Adds an adjustable outline element designed to represent the field of view of the pilot's HD camera for visual framing.<br /><br />You can adjust the width and height in CLI with 'osd_camera_frame_width' and 'osd_camera_frame_height'"
    },
    "osdTextElementEfficiency": {
        "message": "Battery efficiency",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementEfficiency": {
        "message": "Instantaneous battery consumption in mAh/distance.  (Requires valid GPS fix)"
    },
    "osdTextTotalFlights": {
        "message": "Total flights",
        "description": "One of the elements of the OSD"
    },
    "osdDescTotalFlights": {
        "message": "Approximate total number of flights"
    },
    "osdTextElementUpDownReference": {
        "message": "Up (Pitch 90 deg)/Down (Pitch -90 deg) Reference",
        "description": "OSD Symbol to show when pitch is approaching vertical (90 deg, U) and D for nose down (-90 deg, D)"
    },
    "osdDescUpDownReference": {
        "message": "OSD Symbol to show when pitch is approaching vertical (90 deg, U) and D for nose down (-90 deg, D)"
    },
    "osdTextElementUnknown": {
        "message": "Unknown $1",
        "description": "One of the elements of the OSD"
    },
    "osdDescElementUnknown": {
        "message": "Unknown element (details to be added in a future release)"
    },
    "osdTextStatMaxSpeed": {
        "message": "Speed maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMaxSpeed": {
        "message": "Maximum recorded speed"
    },
    "osdTextStatMinBattery": {
        "message": "Battery voltage minimum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMinBattery": {
        "message": "Minimum recorded main battery voltage"
    },
    "osdTextStatMinRssi": {
        "message": "RSSI minimum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMinRssi": {
        "message": "Minimum recorded RSSI"
    },
    "osdTextStatMaxCurrent": {
        "message": "Battery current draw maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMaxCurrent": {
        "message": "Maximum recorded current draw"
    },
    "osdTextStatUsedMah": {
        "message": "Battery mAh used",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatUsedMah": {
        "message": "Battery capacity used"
    },
    "osdTextStatMaxAltitude": {
        "message": "Altitude maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMaxAltitude": {
        "message": "Maximum recorded altitude"
    },
    "osdTextStatBlackbox": {
        "message": "Blackbox usage",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatBlackbox": {
        "message": "Percentage of total blackbox use"
    },
    "osdTextStatEndBattery": {
        "message": "Battery voltage end",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatEndBattery": {
        "message": "Battery voltage at time of disarm"
    },
    "osdTextStatFlyTime": {
        "message": "Fly time total",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatFlyTime": {
        "message": "Total time craft has been armed on current power cycle"
    },
    "osdTextStatArmedTime": {
        "message": "Fly time last armed",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatArmedTime": {
        "message": "Time since craft was last armed"
    },
    "osdTextStatMaxDistance": {
        "message": "Home distance maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMaxDistance": {
        "message": "Maximum distance from home location"
    },
    "osdTextStatBlackboxLogNumber": {
        "message": "Blackbox number",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatBlackboxLogNumber": {
        "message": "Log number for this flights Blackbox log"
    },
    "osdTextStatTimer1": {
        "message": "Timer 1",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatTimer1": {
        "message": "Value of timer 1 at time of disarming"
    },
    "osdTextStatTimer2": {
        "message": "Timer 2",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatTimer2": {
        "message": "Value of timer 2 at time of disarming"
    },
    "osdTextStatRtcDateTime": {
        "message": "RTC date and time",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatRtcDateTime": {
        "message": "Date and time from real time clock"
    },
    "osdTextStatBattery": {
        "message": "Battery voltage",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatBattery": {
        "message": "Voltage of the battery in real time"
    },
    "osdTextStatGForce": {
        "message": "G force maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatGForce": {
        "message": "Max G-Force experienced by the craft"
    },
    "osdTextStatEscTemperature": {
        "message": "ESC temperature maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatEscTemperature": {
        "message": "Max ESC temperature"
    },
    "osdTextStatEscRpm": {
        "message": "ESC RPM maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatEscRpm": {
        "message": "Max ESC RPM"
    },
    "osdTextStatMinLinkQuality": {
        "message": "Link quality minimum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMinLinkQuality": {
        "message": "Minimum of the alternative indicator for 'link quality' based on frame loss"
    },
    "osdTextStatFlightDistance": {
        "message": "Flight distance",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatFlightDistance": {
        "message": "Total distance travelled during the flight"
    },
    "osdTextStatMaxFFT": {
        "message": "FFT maximum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMaxFFT": {
        "message": "Peak FFT frequency"
    },
    "osdTextStatTotalFlights": {
        "message": "Flights count total",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatTotalFlights": {
        "message": "Total number of flights"
    },
    "osdTextStatTotalFlightTime": {
        "message": "Fly time total",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatTotalFlightTime": {
        "message": "Total time spent flying"
    },
    "osdTextStatTotalFlightDistance": {
        "message": "Flight distance total",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatTotalFlightDistance": {
        "message": "Total distance traveled"
    },
    "osdTextStatMinRssiDbm": {
        "message": "RSSI dBm minimum",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatMinRssiDbm": {
        "message": "Minimum RSSI dBm value"
    },
    "osdTextStatUnknown": {
        "message": "Unknown $1",
        "description": "One of the statistics that can be shown at the end of the flight in the OSD"
    },
    "osdDescStatUnknown": {
        "message": "Unknown statistic (details to be added in a future release)"
    },
    "osdDescribeFontVersion1": {
        "message": "Font version: 1 (Betaflight 4.0 or older)"
    },
    "osdDescribeFontVersion2": {
        "message": "Font version: 2 (Betaflight 4.1 or newer)"
    },
    "osdDescribeFontVersionCUSTOM": {
        "message": "Font version: user provided"
    },
    "osdTimerSource": {
        "message": "Source:"
    },
    "osdTimerSourceTooltip": {
        "message": "Select the timer source, this controls the duration/event that the timer measures"
    },
    "osdTimerSourceOptionOnTime": {
        "message": "On time",
        "description": "One of the options for the source timer. This options shows the amount of time has passed since the battery was plugged"
    },
    "osdTimerSourceOptionTotalArmedTime": {
        "message": "Total armed time",
        "description": "One of the options for the source timer. This options shows the amount of time the craft was armed since the battery was plugged"
    },
    "osdTimerSourceOptionLastArmedTime": {
        "message": "Last armed time",
        "description": "One of the options for the source timer. This options shows the amount of time the craft was armed the latest time"
    },
    "osdTimerSourceOptionOnArmTime": {
        "message": "On/Armed time",
        "description": "One of the options for the source timer. This option shows On time when craft is disarmed, and Armed time when armed"
    },
    "osdTimerPrecision": {
        "message": "Precision:"
    },
    "osdTimerPrecisionTooltip": {
        "message": "Select the timer precision, this controls to what precision the time is reported in"
    },
    "osdTimerPrecisionOptionSecond": {
        "message": "Second",
        "description": "Selectable option for the precision of the timer in the OSD"
    },
    "osdTimerPrecisionOptionHundredth": {
        "message": "Hundredth",
        "description": "Selectable option for the precision of the timer in the OSD"
    },
    "osdTimerPrecisionOptionTenth": {
        "message": "Tenth",
        "description": "Selectable option for the precision of the timer in the OSD"
    },
    "osdTimerAlarm": {
        "message": "Alarm:"
    },
    "osdTimerAlarmTooltip": {
        "message": "Select the timer alarm threshold in minutes, when the time exceeds this value the OSD element will blink, setting this to 0 disables the alarm"
    },
    "osdTimerAlarmOptionRssi": {
        "message": "RSSI",
        "description": "Text of the RSSI alarm"
    },
    "osdTimerAlarmOptionCapacity": {
        "message": "Capacity",
        "description": "Text of the capacity alarm"
    },
    "osdTimerAlarmOptionAltitude": {
        "message": "Altitude",
        "description": "Text of the altitude alarm"
    },
    "osdWarningTextArmingDisabled": {
        "message": "Arming disabled",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningArmingDisabled": {
        "message": "Reports the most severe reason for not arming"
    },
    "osdWarningTextBatteryNotFull": {
        "message": "Battery not full",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningBatteryNotFull": {
        "message": "Alerts when a battery is connected that is not fully charged"
    },
    "osdWarningTextBatteryWarning": {
        "message": "Battery warning",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningBatteryWarning": {
        "message": "Alerts when the battery voltage falls below warning threshold"
    },
    "osdWarningTextBatteryCritical": {
        "message": "Battery critical",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningBatteryCritical": {
        "message": "Alerts when the battery voltage falls below the minimum average cell voltage"
    },
    "osdWarningTextVisualBeeper": {
        "message": "Visual beeper",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningVisualBeeper": {
        "message": "Shows a visualisation of the beeper (shows as 4 asterisks)"
    },
    "osdWarningTextCrashFlipMode": {
        "message": "Crash flip mode",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningCrashFlipMode": {
        "message": "Warns when flip over after crash mode is activated"
    },
    "osdWarningTextEscFail": {
        "message": "ESC fail",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningEscFail": {
        "message": "Enumerates a list with the ESCs/motors that are failing (RPM or temperature are out of the configured threshold)"
    },
    "osdWarningTextCoreTemperature": {
        "message": "Core temperature",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningCoreTemperature": {
        "message": "Warns when MCU core temperature exceeds a configured threshold"
    },
    "osdWarningTextRcSmoothingFailure": {
        "message": "RC Smoothing failure",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningRcSmoothingFailure": {
        "message": "Warns when RC Smoothing initialization failed"
    },
    "osdWarningTextFailsafe": {
        "message": "Failsafe",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningFailsafe": {
        "message": "Warns when failsafe occurs"
    },
    "osdWarningTextLaunchControl": {
        "message": "Launch control",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningLaunchControl": {
        "message": "Warns when Launch Control mode is activated"
    },
    "osdWarningTextGpsRescueUnavailable": {
        "message": "GPS Rescue unavailable",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningGpsRescueUnavailable": {
        "message": "Warns when GPS Rescue is not available and cannot be activated"
    },
    "osdWarningTextGpsRescueDisabled": {
        "message": "GPS Rescue disabled",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningGpsRescueDisabled": {
        "message": "Warns when GPS Rescue is disabled"
    },
    "osdWarningTextRSSI": {
        "message": "RSSI",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningRSSI": {
        "message": "Warns when RSSI is below alarm setting"
    },
    "osdWarningTextLinkQuality": {
        "message": "Link quality",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningLinkQuality": {
        "message": "Warns when Link Quality is below alarm setting"
    },
    "osdWarningTextRssiDbm": {
        "message": "RSSI dBm",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningRssiDbm": {
        "message": "Warns when RSSI dBm value is below alarm setting"
    },
    "osdWarningTextOverCap": {
        "message": "Battery over capacity",
        "description": "One of the warnings that can be selected to be shown in the OSD"
    },
    "osdWarningOverCap": {
        "message": "Warns when the consumed mAh exceeds the configured capacity limit"
    },
    "osdWarningTextUnknown": {
        "message": "Unknown $1"
    },
    "osdWarningUnknown": {
        "message": "Unknown warning (details to be added in a future release)"
    },
    "osdSectionHelpElements": {
        "message": "Enable or disable OSD elements."
    },
    "osdSectionHelpVideoMode": {
        "message": "Set the expected video mode of the camera (typically this can be left on AUTO, if you have difficulties then set this to match the camera output)."
    },
    "osdSectionHelpUnits": {
        "message": "Sets the unit system used for numeric readouts."
    },
    "osdSectionHelpTimers": {
        "message": "Configure flight timers."
    },
    "osdSectionHelpAlarms": {
        "message": "Set the thresholds used for OSD elements with alarm states."
    },
    "osdSectionHelpStats": {
        "message": "Set the values dispalyed on the post flight statistics screen."
    },
    "osdSectionHelpWarnings": {
        "message": "Enable or disable warnings that are shown on the WARNINGS element."
    },
    "osdSettingsSaved": {
        "message": "OSD settings saved"
    },
    "osdWritePermissions": {
        "message": "You don't have <span class=\"message-negative\">write permissions</span> for this file"
    },
    "osdButtonSaved": {
        "message": "Saved"
    },
    "vtxHelp": {
        "message": "Here you can configure the values for your Video Transmitter (VTX). You can view and change the transmission values, including the VTX Tables, if the flight controller and the VTX support it.<br>To set up your VTX use the following steps:<br>1. Go to <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/betaflight/betaflight/wiki/VTX-tables\">this</a> page;<br>2. Find the appropriate VTX configuration file for your country and your VTX model and download it;<br>3. Click '$t(vtxButtonLoadFile.message)' below, select the VTX configuration file, load it;<br>4. Verify that the settings are correct;<br>5. Click '$t(vtxButtonSave.message)' to store the VTX settings on the flight controller.<br>6. Optionally click '$t(vtxButtonSaveLua.message)' to save a lua configuration file you can use with the betaflight lua scripts (See more <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/betaflight/betaflight-tx-lua-scripts/\">here</a>.)",
        "description": "Introduction message in the VTX tab"
    },
    "vtxMessageNotSupported": {
        "message": "<span class=\"message-negative\">Attention:</span> Your VTX is not configured or not supported. So you can't modify the VTX values from here. This will only be possible if the flight controller is attached to the VTX using some protocol like Tramp or SmartAudio and is correctly configured in the $t(tabPorts.message) tab if needed.",
        "description": "Message to show when the VTX is not supported in the VTX tab"
    },
    "vtxMessageTableNotConfigured": {
        "message": "<span class=\"message-negative\">Attention:</span> You need to configure and save FIRST the VTX Table at the bottom before you can make use of the $t(vtxSelectedMode.message) fields.",
        "description": "Message to show when the VTX is not supported in the VTX tab"
    },
    "vtxMessageFactoryBandsNotSupported": {
        "message": "<span class=\"message-negative\">Attention:</span> The selected VTX type does not support the 'factory' setting for bands, but some of your bands have this setting. Click '$t(vtxButtonSave.message)' to fix this.",
        "description": "Message to show when the configured VTX type does not support factory bands, but one or more of the configured bands are of this type"
    },
    "vtxMessageVerifyTable": {
        "message": "<span class=\"message-negative\">Attention:</span> The values of the VTX Table have been loaded, but not yet stored on the flight controller. You must verify and modify the values to be sure that they are valid and legal in your country and then press the $t(vtxButtonSave.message) button to store them on the flight controller.",
        "description": "Message to show when the VTX Table has been loaded from a external source"
    },
    "vtxFrequencyChannel": {
        "message": "Enter frequency directly",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxFrequencyChannelHelp": {
        "message": "If you enable this, the Configurator will let you select a frequency in place of the habitual band/channel. For this to work your VTX must support this feature.",
        "description": "Help text for the frequency or channel select field of the VTX tab"
    },
    "vtxSelectedMode": {
        "message": "Selected Mode",
        "description": "Title for the actual mode header of the VTX"
    },
    "vtxActualState": {
        "message": "Current Values",
        "description": "Title for the actual values header of the VTX"
    },
    "vtxType": {
        "message": "VTX Type",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxType_0": {
        "message": "Unsupported",
        "description": "Text for one of the types of the VTX type in VTX tab"
    },
    "vtxType_1": {
        "message": "RTC607",
        "description": "Text for one of the types of the VTX type in VTX tab"
    },
    "vtxType_3": {
        "message": "SmartAudio",
        "description": "Text for one of the types of the VTX type in VTX tab"
    },
    "vtxType_4": {
        "message": "Tramp",
        "description": "Text for one of the types of the VTX type in VTX tab"
    },
    "vtxType_255": {
        "message": "Unknown",
        "description": "Text for one of the types of the VTX type in VTX tab"
    },
    "vtxBand": {
        "message": "Band",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxBandHelp": {
        "message": "You can select here the band for your VTX",
        "description": "Help text for the band field of the VTX tab"
    },
    "vtxBand_0": {
        "message": "None",
        "description": "Text of one of the options for the band field of the VTX tab"
    },
    "vtxBand_X": {
        "message": "Band {{bandName}}",
        "description": "Text of one of the options for the band field of the VTX tab"
    },
    "vtxChannel_0": {
        "message": "None",
        "description": "Text of one of the options for the channel field of the VTX tab"
    },
    "vtxChannel_X": {
        "message": "Channel {{channelName}}",
        "description": "Text of one of the options for the channel field of the VTX tab"
    },
    "vtxPower_0": {
        "message": "None",
        "description": "Text of one of the options for the power field of the VTX tab"
    },
    "vtxPower_X": {
        "message": "Level {{powerLevel}}",
        "description": "Text of one of the options for the power field of the VTX tab"
    },
    "vtxChannel": {
        "message": "Channel",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxChannelHelp": {
        "message": "You can select here the channel for your VTX",
        "description": "Help text for the channel field of the VTX tab"
    },
    "vtxFrequency": {
        "message": "Frequency",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxFrequencyHelp": {
        "message": "You can select here the frequency for your VTX if it is supported",
        "description": "Help text for the frequency field of the VTX tab"
    },
    "vtxDeviceReady": {
        "message": "Device ready",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxPower": {
        "message": "Power",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxPowerHelp": {
        "message": "This is the power selected for the VTX. It can be modified if the $t(vtxPitMode.message) or the $t(vtxLowPowerDisarm.message) is enabled",
        "description": "Help text for the power field of the VTX tab"
    },
    "vtxPitMode": {
        "message": "Pit Mode",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxPitModeHelp": {
        "message": "When enabled, the VTX enters in a very low power mode to let the quad be on at the bench without disturbing other pilots. Usually the range of this mode is less than 5m.<br /><br />NOTE: Some protocols, like SmartAudio, can't enable Pit Mode via software after power-up.",
        "description": "Help text for the pit mode field of the VTX tab"
    },
    "vtxPitModeFrequency": {
        "message": "Pit Mode frequency",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxPitModeFrequencyHelp": {
        "message": "Frequency at which the Pit Mode changes when enabled.",
        "description": "Help text for the pit mode field of the VTX tab"
    },
    "vtxLowPowerDisarm": {
        "message": "Low Power Disarm",
        "description": "Text of one of the fields of the VTX tab"
    },
    "vtxLowPowerDisarmHelp": {
        "message": "When enabled, the VTX uses the lowest available power when disarmed (except if a failsafe has occurred).",
        "description": "Help text for the low power disarm field of the VTX tab"
    },
    "vtxLowPowerDisarmOption_0": {
        "message": "Off",
        "description": "One of the options for the Low Power Disarm mode of the VTX"
    },
    "vtxLowPowerDisarmOption_1": {
        "message": "On",
        "description": "One of the options for the Low Power Disarm mode of the VTX"
    },
    "vtxLowPowerDisarmOption_2": {
        "message": "On until first arm",
        "description": "One of the options for the Low Power Disarm mode of the VTX"
    },
    "vtxTable": {
        "message": "VTX Table",
        "description": "Text of the header of the VTX Table element in the VTX tab"
    },
    "vtxTablePowerLevels": {
        "message": "Number of power levels",
        "description": "Text of one of the fields of the VTX Table element in the VTX tab"
    },
    "vtxTablePowerLevelsHelp": {
        "message": "This defines the number of power levels supported by your VTX",
        "description": "Help for the number of power levels field of the VTX Table element in the VTX tab"
    },
    "vtxTablePowerLevelsTableHelp": {
        "message": "This table represents the different values of power that can be used for the VTX. They are divided into two: <br><b>- $t(vtxTablePowerLevelsValue.message):</b> each power level requires a value that is defined by the hardware manufacturer. Ask your manufacturer for the correct value or consult the Betaflight wiki of VTX Tables to grab some samples. <br><b>- $t(vtxTablePowerLevelsLabel.message):</b> you can put here the label you want for each power level value. It can be numbers (25, 200, 600, 1.2), letters (OFF, MIN, MAX) or a mix of them. <br /><br />You must configure <b>only</b> the power levels that are legal at your country.",
        "description": "Help for the table of power levels (value-label) that appears in the VTX tab"
    },
    "vtxTablePowerLevelsValue": {
        "message": "Value",
        "description": "Text of one of the fields of the VTX Table element in the VTX tab"
    },
    "vtxTablePowerLevelsLabel": {
        "message": "Label",
        "description": "Text of one of the fields of the VTX Table element in the VTX tab"
    },
    "vtxTableBands": {
        "message": "Number of bands",
        "description": "Text of one of the fields of the VTX Table element in the VTX tab"
    },
    "vtxTableChannels": {
        "message": "Number of channels by band",
        "description": "Text of one of the fields of the VTX Table element in the VTX tab"
    },
    "vtxTableBandsChannelsHelp": {
        "message": "This defines the number of bands and the number of channels by band that you want for your VTX.",
        "description": "Help for the number of bands and channels field of the VTX Table element in the VTX tab"
    },
    "vtxTableBandTitleName": {
        "message": "Name",
        "description": "Text of one of the titles of the VTX Table element in the VTX tab"
    },
    "vtxTableBandTitleLetter": {
        "message": "Letter",
        "description": "Text of one of the titles of the VTX Table element in the VTX tab"
    },
    "vtxTableBandTitleFactory": {
        "message": "Factory",
        "description": "Text of one of the titles of the VTX Table element in the VTX tab"
    },
    "vtxTableBandsChannelsTableHelp": {
        "message": "This table represents all the frequencies that can be used for your VTX. You can have several bands and for each band you must configure:<br><b>- $t(vtxTableBandTitleName.message):</b> Name that you want to assign to this band, like BOSCAM_A, FATSHARK or RACEBAND.<br><b>- $t(vtxTableBandTitleLetter.message):</b> Short letter that references the band.<br><b>- $t(vtxTableBandTitleFactory.message):</b> This indicates if it is a factory band. If enabled Betaflight sends to the VTX a band and channel number. The VTX will then use its built-in frequency table and the frequencies configured here are only to show the value in the OSD and other places. If it is not enabled, then Betaflight will send to the VTX the real frequency configured here.<br><b>- Frequencies:</b> Frequencies for this band.<br /><br />Remember that not all frequencies are legal at your country. You must put a value of <b>zero</b> to each frequency index that you are not allowed to use to disable it.",
        "description": "Help for the table of bands-channels that appears in the VTX tab"
    },
    "vtxSavedFileOk": {
        "message": "VTX Config file <span class=\"message-positive\">saved</span>",
        "description": "Message in the GUI log when the VTX Config file is saved"
    },
    "vtxSavedFileKo": {
        "message": "<span class=\"message-negative\">Error</span> while saving the VTX Config file",
        "description": "Message in the GUI log when the VTX Config file is saved"
    },
    "vtxLoadFileOk": {
        "message": "VTX Config file <span class=\"message-positive\">loaded</span>",
        "description": "Message in the GUI log when the VTX Config file is loaded"
    },
    "vtxLoadFileKo": {
        "message": "<span class=\"message-negative\">Error</span> while loading the VTX Config file",
        "description": "Message in the GUI log when the VTX Config file is loaded"
    },
    "vtxLoadClipboardOk": {
        "message": "VTX Config info <span class=\"message-positive\">loaded</span> from clipboard",
        "description": "Message in the GUI log when the VTX Config file is pasted from clipboard"
    },
    "vtxLoadClipboardKo": {
        "message": "<span class=\"message-negative\">Error</span> while loading the VTX Config info from clipboard. Maybe the contents are not correct",
        "description": "Message in the GUI log when the VTX Config file is pasted from clipboard"
    },
    "vtxButtonSaveFile": {
        "message": "Save to file",
        "description": "Save to file button in the VTX tab"
    },
    "vtxButtonSaveLua": {
        "message": "Save Lua Script",
        "description": "Save Lua script button in the VTX tab"
    },
    "vtxLuaFileHelp": {
        "message": "The '$t(vtxButtonSaveLua.message)' button will allow you to save a <i>craftname</i>.lua file containing the vtx table configuration that can be used with the betaflight lua scripts. (See more <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/betaflight/betaflight-tx-lua-scripts/\">here</a>.)",
        "description": "Tooltip message for the Save Lua script button in the VTX tab"
    },
    "vtxButtonLoadFile": {
        "message": "Load from file",
        "description": "Load to file button in the VTX tab"
    },
    "vtxButtonLoadClipboard": {
        "message": "Load from clipboard",
        "description": "Paste from clipboard button in the VTX tab"
    },
    "vtxButtonSave": {
        "message": "Save",
        "description": "Save button in the VTX tab"
    },
    "vtxButtonSaved": {
        "message": "Saved",
        "description": "Saved action button in the VTX tab"
    },
    "vtxSmartAudioUnlocked": {
        "message": "{{version}} unlocked",
        "description": "Indicates if SA device is unlocked"
    },
    "mainHelpArmed": {
        "message": "Motor Arming"
    },
    "mainHelpFailsafe": {
        "message": "Failsafe Mode"
    },
    "mainHelpLink": {
        "message": "Serial Link Status"
    },
    "configurationGyroSyncDenom": {
        "message": "Gyro update frequency"
    },
    "configurationPidProcessDenom": {
        "message": "PID loop frequency"
    },
    "configurationPidProcessDenomHelp": {
        "message": "The maximum frequency for the PID loop is limited by the CPU processing power. The Realtime Load should not exceed 70% with the selected loop speed."
    },
    "configurationGyroUse32kHz": {
        "message": "Enable gyro 32kHz sampling mode"
    },
    "configurationGyroUse32kHzHelp": {
        "message": "32 kHz gyro update frequency is only possible if the gyro chip supports it (currently MPU6500, MPU9250, and ICM20xxx if connected over SPI). If in doubt, consult the specification for your board."
    },
    "configurationAccHardware": {
        "message": "Accelerometer"
    },
    "configurationAccHardwareHelp": {
        "message": "Enables the Accelerometer. This is required for all stabilisation modes: Angle, Horizon, Acro Trainer and Rescue."
    },
    "configurationBaroHardware": {
        "message": "Barometer"
    },
    "configurationBaroHardwareHelp": {
        "message": "Enables the Barometer (if available). Altitude is currently not used in Flight Control. It is informative only, available via the Telemetry."
    },
    "configurationMagHardware": {
        "message": "Magnetometer"
    },
    "configurationMagHardwareHelp": {
        "message": "Enables the Magnetometer (if available). Compass direction is currently not used in Flight Control. It is informative only, available via the Telemetry."
    },
    "configurationPersonalization": {
        "message": "Personalization"
    },
    "craftName": {
        "message": "Craft name"
    },
    "blackboxMode": {
        "message": "Logging mode"
    },
    "blackboxModeHelp": {
        "message": "<strong>OFF:</strong> Disable logging.<br><br><strong>NORMAL:</strong> Enable logging when both ARMED and BLACKBOX switch are active.<br><br><strong>ARMED:</strong> Enable logging when ARMED.<br><br><strong>SWITCH:</strong> Enable logging when BLACKBOX switch is active."
    },
    "blackboxModeOff": {
        "message": "Off"
    },
    "blackboxModeNormal": {
        "message": "Normal"
    },
    "blackboxModeArmed": {
        "message": "Armed"
    },
    "blackboxModeSwitch": {
        "message": "Switch"
    },
    "blackboxDevice": {
        "message": "Logging device"
    },
    "blackboxDeviceHelp": {
        "message": "<strong>No Logging:</strong> Disable logging.<br><br><strong>Onboard Flash:</strong> Log to the onboard flash chip (if available).<br><br><strong>SD Card:</strong> Log to the onboard SD card (if available).<br><br><strong>Serial Port:</strong> Log to an external logger device (e.g OpenLager) connected to a serial port. The serial port must to be configured to 'Blackbox Logging' on the <strong>Configuration</strong> tab."
    },
    "blackboxRateOfLogging": {
        "message": "Logging rate"
    },
    "blackboxRateOfLoggingHelp": {
        "message": "The log data is saved to the log device with this rate. For logging to an external device, lower speed may be required."
    },
    "blackboxRateCustom": {
        "message": "Custom"
    },
    "blackboxDebugMode": {
        "message": "Debug mode"
    },
    "blackboxDebugModeHelp": {
        "message": "Choose what <i>extra</i> data is being logged. If enabled, eight extra debug items are added to the Blackbox Log."
    },
    "blackboxDebugModeUnknown": {
        "message": "UNKNOWN"
    },
    "blackboxDebugAxis": {
        "message": "Debug axis"
    },
    "blackboxDebugAxisHelp": {
        "message": "Choose which <i>axis</i> is being debugged. Applies to some of the debug modes."
    },
    "blackboxSerialLogger": {
        "message": "Outboard serial logging device"
    },
    "blackboxFlashLogger": {
        "message": "Onboard dataflash chip"
    },
    "blackboxSDCardLogger": {
        "message": "Onboard SD card"
    },
    "blackboxEraseInProgress": {
        "message": "Erase in progress, please wait..."
    },
    "blackboxMsc": {
        "message": "Mass Storage Mode"
    },
    "blackboxMscNote": {
        "message": "Reboot into <strong>mass storage device (MSC)</strong> mode. Once activated, the onboard flash or SD card on your flight controller will be recognised as a storage device by your computer, and allow you to download your log files. Eject and power cycle your flight controller to leave mass storage device mode."
    },
    "blackboxRebootMscText": {
        "message": "Activate Mass Storage Device Mode"
    },
    "blackboxMscNotReady": {
        "message": "Mass storage mode can not be activated because the storage device is not ready."
    },
    "dialogConfirmResetTitle": {
        "message": "Confirm"
    },
    "dialogConfirmResetNote": {
        "message": "WARNING: Are you sure you want to reset ALL settings to default?"
    },
    "dialogConfirmResetConfirm": {
        "message": "Reset"
    },
    "dialogConfirmResetClose": {
        "message": "Cancel"
    },
    "dialogConfirmArmingTitle": {
        "message": "Confirm Arming"
    },
    "dialogConfirmArmingNote": {
        "message": "WARNING: Are you sure you want to <strong>enable arming</strong> while the Configurator is connected?"
    },
    "dialogConfirmArmingConfirm": {
        "message": "Enable"
    },
    "dialogConfirmArmingClose": {
        "message": "Cancel"
    },
    "mode ARM": {
        "message": "ARM"
    },
    "mode ANGLE": {
        "message": "ANGLE"
    },
    "mode HORIZON": {
        "message": "HORIZON"
    },
    "mode ALTHOLD": {
        "message": "ALTHOLD"
    },
    "mode BEEPER": {
        "message": "BEEPER"
    },
    "mode LEDLOW": {
        "message": "LEDLOW"
    },
    "mode CALIB": {
        "message": "CALIB"
    },
    "mode OSD DISABLE": {
        "message": "OSD DISABLE"
    },
    "mode TELEMETRY": {
        "message": "TELEMETRY"
    },
    "mode BLACKBOX": {
        "message": "BLACKBOX"
    },
    "mode FAILSAFE": {
        "message": "FAILSAFE"
    },
    "mode BLACKBOX ERASE": {
        "message": "BLACKBOX ERASE"
    },
    "mode PREARM": {
        "message": "PREARM"
    },
    "mode PARALYZE": {
        "message": "PARALYZE"
    },
    "mode GPS RESCUE": {
        "message": "GPS RESCUE"
    },
    "mode TRAINER": {
        "message": "TRAINER"
    },
    "mode MSP OVERRIDE": {
        "message": "MSP OVERRIDE"
    },
    "mode STICK COMMANDS DISABLE": {
        "message": "STICK COMMANDS DISABLE"
    },
    "mode BEEPER MUTE": {
        "message": "BEEPER MUTE"
    },
    "mode RESCUE": {
        "message": "RESCUE"
    },
    "flashTab": {
        "message": "Update Firmware"
    },
    "cliAutoComplete": {
        "message": "Advanced CLI AutoComplete"
    },
    "darkTheme": {
        "message": "Enable dark theme"
    },
    "dialogRatesTypeTitle": {
        "message": "Rates type change"
    },
    "dialogRatesTypeNote": {
        "message": "<span class=\"message-negative\"><b>WARNING: You are changing the rates type.</b></span> If you change the rates type your rates will be set to a default curve."
    },
    "dialogRatesTypeConfirm": {
        "message": "Change"
    },
    "gpsSbasAutoDetect": {
        "message": "Auto-detect",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "gpsSbasEuropeanEGNOS": {
        "message": "European EGNOS",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "gpsSbasNorthAmericanWAAS": {
        "message": "North American WAAS",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "gpsSbasJapaneseMSAS": {
        "message": "Japanese MSAS",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "gpsSbasIndianGAGAN": {
        "message": "Indian GAGAN",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "gpsSbasNone": {
        "message": "None",
        "description": "One of the options selectable for the GPS SBAS system"
    },
    "dialogFileNameTitle": {
        "message": "File name"
    },
    "dialogFileNameDescription": {
        "message": "The file will be saved in the '{{folder}}' folder in your internal storage."
    },
    "dialogFileAlreadyExistsTitle": {
        "message": "This file already exists!"
    },
    "dialogFileAlreadyExistsDescription": {
        "message": "Overwrite ?"
    },
    "cordovaCheckingWebview": {
        "message": "Checking webview applications ..."
    },
    "cordovaIncompatibleWebview": {
        "message": "Incompatible webview"
    },
    "cordovaWebviewTroubleshootingMsg": {
        "message": "You must update your device's webview in order to use the configurator."
    },
    "cordovaWebviewTroubleshootingMsg2": {
        "message": "The tool below is intended to help you to install a new webview or to update an already installed webview."
    },
    "cordovaAvailableWebviews": {
        "message": "Available webview applications on your device"
    },
    "cordovaWebviewInstall": {
        "message": "Installing the <b>{{app}}</b> app can resolve this compatibility issue."
    },
    "cordovaWebviewInstallBtn": {
        "message": "Install from the Google Play Store"
    },
    "cordovaWebviewUninstall": {
        "message": "Uninstalling the <b>{{app}}</b> app can resolve this compatibility issue. If you are not able to uninstall it, try to disable it from the settings app."
    },
    "cordovaWebviewUninstallBtn1": {
        "message": "Uninstall from the Google Play Store"
    },
    "cordovaWebviewUninstallBtn2": {
        "message": "Uninstall / disable from the settings"
    },
    "cordovaWebviewUpdate": {
        "message": "Updating the <b>{{app}}</b> app can resolve this compatibility issue."
    },
    "cordovaWebviewUpdateBtn": {
        "message": "Update from the Google Play Store"
    },
    "cordovaWebviewEnable": {
        "message": "Go into the tab of informations about your device in the settings and tap 10 times on the build version number to enable 'Developper options'. After that, search and go in the developper options and select <b>{{app}}</b> as webview provider."
    },
    "cordovaWebviewEnableBtn": {
        "message": "Open settings"
    },
    "cordovaNoWebview": {
        "message": "No webview application installed / enabled"
    },
    "cordovaWebviewUsed": {
        "message": "used"
    },
    "cordovaExitAppTitle": {
        "message": "Confirmation"
    },
    "cordovaExitAppMessage": {
        "message": "Do you really want to close the configurator?"
    }
}
